// Generated by CIRCT firtool-1.62.0
module NReadWriteSmem(
  input         clock,
                reset,
  input  [5:0]  io_rd_addr_0,
                io_rd_addr_1,
                io_rd_addr_2,
                io_rd_addr_3,
                io_rd_addr_4,
                io_rd_addr_5,
                io_rd_addr_6,
                io_rd_addr_7,
  output [31:0] io_data_out_0,
                io_data_out_1,
                io_data_out_2,
                io_data_out_3,
                io_data_out_4,
                io_data_out_5,
                io_data_out_6,
                io_data_out_7,
  input  [5:0]  io_wr_addr_0,
                io_wr_addr_1,
                io_wr_addr_2,
                io_wr_addr_3,
  input         io_wr_en_0,
                io_wr_en_1,
                io_wr_en_2,
                io_wr_en_3,
  input  [31:0] io_data_in_0,
                io_data_in_1,
                io_data_in_2,
                io_data_in_3
);

  reg [31:0] mem_0;
  reg [31:0] mem_1;
  reg [31:0] mem_2;
  reg [31:0] mem_3;
  reg [31:0] mem_4;
  reg [31:0] mem_5;
  reg [31:0] mem_6;
  reg [31:0] mem_7;
  reg [31:0] mem_8;
  reg [31:0] mem_9;
  reg [31:0] mem_10;
  reg [31:0] mem_11;
  reg [31:0] mem_12;
  reg [31:0] mem_13;
  reg [31:0] mem_14;
  reg [31:0] mem_15;
  reg [31:0] mem_16;
  reg [31:0] mem_17;
  reg [31:0] mem_18;
  reg [31:0] mem_19;
  reg [31:0] mem_20;
  reg [31:0] mem_21;
  reg [31:0] mem_22;
  reg [31:0] mem_23;
  reg [31:0] mem_24;
  reg [31:0] mem_25;
  reg [31:0] mem_26;
  reg [31:0] mem_27;
  reg [31:0] mem_28;
  reg [31:0] mem_29;
  reg [31:0] mem_30;
  reg [31:0] mem_31;
  reg [31:0] mem_32;
  reg [31:0] mem_33;
  reg [31:0] mem_34;
  reg [31:0] mem_35;
  reg [31:0] mem_36;
  reg [31:0] mem_37;
  reg [31:0] mem_38;
  reg [31:0] mem_39;
  reg [31:0] mem_40;
  reg [31:0] mem_41;
  reg [31:0] mem_42;
  reg [31:0] mem_43;
  reg [31:0] mem_44;
  reg [31:0] mem_45;
  reg [31:0] mem_46;
  reg [31:0] mem_47;
  reg [31:0] mem_48;
  reg [31:0] mem_49;
  reg [31:0] mem_50;
  reg [31:0] mem_51;
  reg [31:0] mem_52;
  reg [31:0] mem_53;
  reg [31:0] mem_54;
  reg [31:0] mem_55;
  reg [31:0] mem_56;
  reg [31:0] mem_57;
  reg [31:0] mem_58;
  reg [31:0] mem_59;
  reg [31:0] mem_60;
  reg [31:0] mem_61;
  reg [31:0] mem_62;
  reg [31:0] mem_63;
  reg [31:0] io_data_out_0_REG;
  reg [31:0] io_data_out_1_REG;
  reg [31:0] io_data_out_2_REG;
  reg [31:0] io_data_out_3_REG;
  reg [31:0] io_data_out_4_REG;
  reg [31:0] io_data_out_5_REG;
  reg [31:0] io_data_out_6_REG;
  reg [31:0] io_data_out_7_REG;
  always @(posedge clock) begin
    automatic logic [63:0][31:0] _GEN =
      {{mem_63},
       {mem_62},
       {mem_61},
       {mem_60},
       {mem_59},
       {mem_58},
       {mem_57},
       {mem_56},
       {mem_55},
       {mem_54},
       {mem_53},
       {mem_52},
       {mem_51},
       {mem_50},
       {mem_49},
       {mem_48},
       {mem_47},
       {mem_46},
       {mem_45},
       {mem_44},
       {mem_43},
       {mem_42},
       {mem_41},
       {mem_40},
       {mem_39},
       {mem_38},
       {mem_37},
       {mem_36},
       {mem_35},
       {mem_34},
       {mem_33},
       {mem_32},
       {mem_31},
       {mem_30},
       {mem_29},
       {mem_28},
       {mem_27},
       {mem_26},
       {mem_25},
       {mem_24},
       {mem_23},
       {mem_22},
       {mem_21},
       {mem_20},
       {mem_19},
       {mem_18},
       {mem_17},
       {mem_16},
       {mem_15},
       {mem_14},
       {mem_13},
       {mem_12},
       {mem_11},
       {mem_10},
       {mem_9},
       {mem_8},
       {mem_7},
       {mem_6},
       {mem_5},
       {mem_4},
       {mem_3},
       {mem_2},
       {mem_1},
       {mem_0}};
    if (reset) begin
      mem_0 <= 32'h0;
      mem_1 <= 32'h0;
      mem_2 <= 32'h0;
      mem_3 <= 32'h0;
      mem_4 <= 32'h0;
      mem_5 <= 32'h0;
      mem_6 <= 32'h0;
      mem_7 <= 32'h0;
      mem_8 <= 32'h0;
      mem_9 <= 32'h0;
      mem_10 <= 32'h0;
      mem_11 <= 32'h0;
      mem_12 <= 32'h0;
      mem_13 <= 32'h0;
      mem_14 <= 32'h0;
      mem_15 <= 32'h0;
      mem_16 <= 32'h0;
      mem_17 <= 32'h0;
      mem_18 <= 32'h0;
      mem_19 <= 32'h0;
      mem_20 <= 32'h0;
      mem_21 <= 32'h0;
      mem_22 <= 32'h0;
      mem_23 <= 32'h0;
      mem_24 <= 32'h0;
      mem_25 <= 32'h0;
      mem_26 <= 32'h0;
      mem_27 <= 32'h0;
      mem_28 <= 32'h0;
      mem_29 <= 32'h0;
      mem_30 <= 32'h0;
      mem_31 <= 32'h0;
      mem_32 <= 32'h0;
      mem_33 <= 32'h0;
      mem_34 <= 32'h0;
      mem_35 <= 32'h0;
      mem_36 <= 32'h0;
      mem_37 <= 32'h0;
      mem_38 <= 32'h0;
      mem_39 <= 32'h0;
      mem_40 <= 32'h0;
      mem_41 <= 32'h0;
      mem_42 <= 32'h0;
      mem_43 <= 32'h0;
      mem_44 <= 32'h0;
      mem_45 <= 32'h0;
      mem_46 <= 32'h0;
      mem_47 <= 32'h0;
      mem_48 <= 32'h0;
      mem_49 <= 32'h0;
      mem_50 <= 32'h0;
      mem_51 <= 32'h0;
      mem_52 <= 32'h0;
      mem_53 <= 32'h0;
      mem_54 <= 32'h0;
      mem_55 <= 32'h0;
      mem_56 <= 32'h0;
      mem_57 <= 32'h0;
      mem_58 <= 32'h0;
      mem_59 <= 32'h0;
      mem_60 <= 32'h0;
      mem_61 <= 32'h0;
      mem_62 <= 32'h0;
      mem_63 <= 32'h0;
    end
    else begin
      if (io_wr_en_3 & io_wr_addr_3 == 6'h0)
        mem_0 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h0)
        mem_0 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h0)
        mem_0 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h0)
        mem_0 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h1)
        mem_1 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h1)
        mem_1 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h1)
        mem_1 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h1)
        mem_1 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h2)
        mem_2 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h2)
        mem_2 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h2)
        mem_2 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h2)
        mem_2 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h3)
        mem_3 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h3)
        mem_3 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h3)
        mem_3 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h3)
        mem_3 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h4)
        mem_4 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h4)
        mem_4 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h4)
        mem_4 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h4)
        mem_4 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h5)
        mem_5 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h5)
        mem_5 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h5)
        mem_5 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h5)
        mem_5 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h6)
        mem_6 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h6)
        mem_6 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h6)
        mem_6 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h6)
        mem_6 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h7)
        mem_7 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h7)
        mem_7 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h7)
        mem_7 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h7)
        mem_7 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h8)
        mem_8 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h8)
        mem_8 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h8)
        mem_8 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h8)
        mem_8 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h9)
        mem_9 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h9)
        mem_9 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h9)
        mem_9 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h9)
        mem_9 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'hA)
        mem_10 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'hA)
        mem_10 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'hA)
        mem_10 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'hA)
        mem_10 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'hB)
        mem_11 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'hB)
        mem_11 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'hB)
        mem_11 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'hB)
        mem_11 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'hC)
        mem_12 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'hC)
        mem_12 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'hC)
        mem_12 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'hC)
        mem_12 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'hD)
        mem_13 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'hD)
        mem_13 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'hD)
        mem_13 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'hD)
        mem_13 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'hE)
        mem_14 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'hE)
        mem_14 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'hE)
        mem_14 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'hE)
        mem_14 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'hF)
        mem_15 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'hF)
        mem_15 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'hF)
        mem_15 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'hF)
        mem_15 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h10)
        mem_16 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h10)
        mem_16 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h10)
        mem_16 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h10)
        mem_16 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h11)
        mem_17 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h11)
        mem_17 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h11)
        mem_17 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h11)
        mem_17 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h12)
        mem_18 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h12)
        mem_18 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h12)
        mem_18 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h12)
        mem_18 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h13)
        mem_19 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h13)
        mem_19 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h13)
        mem_19 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h13)
        mem_19 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h14)
        mem_20 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h14)
        mem_20 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h14)
        mem_20 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h14)
        mem_20 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h15)
        mem_21 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h15)
        mem_21 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h15)
        mem_21 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h15)
        mem_21 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h16)
        mem_22 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h16)
        mem_22 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h16)
        mem_22 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h16)
        mem_22 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h17)
        mem_23 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h17)
        mem_23 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h17)
        mem_23 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h17)
        mem_23 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h18)
        mem_24 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h18)
        mem_24 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h18)
        mem_24 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h18)
        mem_24 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h19)
        mem_25 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h19)
        mem_25 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h19)
        mem_25 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h19)
        mem_25 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h1A)
        mem_26 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h1A)
        mem_26 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h1A)
        mem_26 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h1A)
        mem_26 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h1B)
        mem_27 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h1B)
        mem_27 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h1B)
        mem_27 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h1B)
        mem_27 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h1C)
        mem_28 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h1C)
        mem_28 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h1C)
        mem_28 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h1C)
        mem_28 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h1D)
        mem_29 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h1D)
        mem_29 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h1D)
        mem_29 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h1D)
        mem_29 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h1E)
        mem_30 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h1E)
        mem_30 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h1E)
        mem_30 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h1E)
        mem_30 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h1F)
        mem_31 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h1F)
        mem_31 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h1F)
        mem_31 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h1F)
        mem_31 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h20)
        mem_32 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h20)
        mem_32 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h20)
        mem_32 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h20)
        mem_32 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h21)
        mem_33 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h21)
        mem_33 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h21)
        mem_33 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h21)
        mem_33 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h22)
        mem_34 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h22)
        mem_34 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h22)
        mem_34 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h22)
        mem_34 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h23)
        mem_35 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h23)
        mem_35 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h23)
        mem_35 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h23)
        mem_35 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h24)
        mem_36 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h24)
        mem_36 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h24)
        mem_36 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h24)
        mem_36 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h25)
        mem_37 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h25)
        mem_37 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h25)
        mem_37 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h25)
        mem_37 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h26)
        mem_38 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h26)
        mem_38 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h26)
        mem_38 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h26)
        mem_38 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h27)
        mem_39 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h27)
        mem_39 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h27)
        mem_39 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h27)
        mem_39 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h28)
        mem_40 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h28)
        mem_40 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h28)
        mem_40 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h28)
        mem_40 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h29)
        mem_41 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h29)
        mem_41 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h29)
        mem_41 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h29)
        mem_41 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h2A)
        mem_42 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h2A)
        mem_42 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h2A)
        mem_42 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h2A)
        mem_42 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h2B)
        mem_43 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h2B)
        mem_43 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h2B)
        mem_43 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h2B)
        mem_43 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h2C)
        mem_44 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h2C)
        mem_44 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h2C)
        mem_44 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h2C)
        mem_44 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h2D)
        mem_45 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h2D)
        mem_45 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h2D)
        mem_45 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h2D)
        mem_45 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h2E)
        mem_46 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h2E)
        mem_46 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h2E)
        mem_46 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h2E)
        mem_46 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h2F)
        mem_47 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h2F)
        mem_47 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h2F)
        mem_47 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h2F)
        mem_47 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h30)
        mem_48 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h30)
        mem_48 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h30)
        mem_48 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h30)
        mem_48 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h31)
        mem_49 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h31)
        mem_49 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h31)
        mem_49 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h31)
        mem_49 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h32)
        mem_50 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h32)
        mem_50 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h32)
        mem_50 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h32)
        mem_50 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h33)
        mem_51 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h33)
        mem_51 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h33)
        mem_51 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h33)
        mem_51 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h34)
        mem_52 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h34)
        mem_52 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h34)
        mem_52 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h34)
        mem_52 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h35)
        mem_53 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h35)
        mem_53 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h35)
        mem_53 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h35)
        mem_53 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h36)
        mem_54 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h36)
        mem_54 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h36)
        mem_54 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h36)
        mem_54 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h37)
        mem_55 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h37)
        mem_55 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h37)
        mem_55 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h37)
        mem_55 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h38)
        mem_56 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h38)
        mem_56 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h38)
        mem_56 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h38)
        mem_56 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h39)
        mem_57 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h39)
        mem_57 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h39)
        mem_57 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h39)
        mem_57 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h3A)
        mem_58 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h3A)
        mem_58 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h3A)
        mem_58 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h3A)
        mem_58 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h3B)
        mem_59 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h3B)
        mem_59 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h3B)
        mem_59 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h3B)
        mem_59 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h3C)
        mem_60 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h3C)
        mem_60 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h3C)
        mem_60 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h3C)
        mem_60 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h3D)
        mem_61 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h3D)
        mem_61 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h3D)
        mem_61 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h3D)
        mem_61 <= io_data_in_0;
      if (io_wr_en_3 & io_wr_addr_3 == 6'h3E)
        mem_62 <= io_data_in_3;
      else if (io_wr_en_2 & io_wr_addr_2 == 6'h3E)
        mem_62 <= io_data_in_2;
      else if (io_wr_en_1 & io_wr_addr_1 == 6'h3E)
        mem_62 <= io_data_in_1;
      else if (io_wr_en_0 & io_wr_addr_0 == 6'h3E)
        mem_62 <= io_data_in_0;
      if (io_wr_en_3 & (&io_wr_addr_3))
        mem_63 <= io_data_in_3;
      else if (io_wr_en_2 & (&io_wr_addr_2))
        mem_63 <= io_data_in_2;
      else if (io_wr_en_1 & (&io_wr_addr_1))
        mem_63 <= io_data_in_1;
      else if (io_wr_en_0 & (&io_wr_addr_0))
        mem_63 <= io_data_in_0;
    end
    io_data_out_0_REG <= _GEN[io_rd_addr_0];
    io_data_out_1_REG <= _GEN[io_rd_addr_1];
    io_data_out_2_REG <= _GEN[io_rd_addr_2];
    io_data_out_3_REG <= _GEN[io_rd_addr_3];
    io_data_out_4_REG <= _GEN[io_rd_addr_4];
    io_data_out_5_REG <= _GEN[io_rd_addr_5];
    io_data_out_6_REG <= _GEN[io_rd_addr_6];
    io_data_out_7_REG <= _GEN[io_rd_addr_7];
  end // always @(posedge)
  assign io_data_out_0 = io_data_out_0_REG;
  assign io_data_out_1 = io_data_out_1_REG;
  assign io_data_out_2 = io_data_out_2_REG;
  assign io_data_out_3 = io_data_out_3_REG;
  assign io_data_out_4 = io_data_out_4_REG;
  assign io_data_out_5 = io_data_out_5_REG;
  assign io_data_out_6 = io_data_out_6_REG;
  assign io_data_out_7 = io_data_out_7_REG;
endmodule

module RF(
  input         clock,
                reset,
  output        io_RF_inputs_0_ready,
  input         io_RF_inputs_0_valid,
                io_RF_inputs_0_bits_RD_valid,
  input  [5:0]  io_RF_inputs_0_bits_RD_bits,
  input         io_RF_inputs_0_bits_RS1_ready,
                io_RF_inputs_0_bits_RS1_valid,
  input  [5:0]  io_RF_inputs_0_bits_RS1_bits,
  input         io_RF_inputs_0_bits_RS2_ready,
                io_RF_inputs_0_bits_RS2_is_imm,
                io_RF_inputs_0_bits_RS2_valid,
  input  [31:0] io_RF_inputs_0_bits_RS2_bits,
  input  [1:0]  io_RF_inputs_0_bits_uOp_portID_value,
  output        io_RF_inputs_1_ready,
  input         io_RF_inputs_1_valid,
                io_RF_inputs_1_bits_RD_valid,
  input  [5:0]  io_RF_inputs_1_bits_RD_bits,
  input         io_RF_inputs_1_bits_RS1_ready,
                io_RF_inputs_1_bits_RS1_valid,
  input  [5:0]  io_RF_inputs_1_bits_RS1_bits,
  input         io_RF_inputs_1_bits_RS2_ready,
                io_RF_inputs_1_bits_RS2_is_imm,
                io_RF_inputs_1_bits_RS2_valid,
  input  [31:0] io_RF_inputs_1_bits_RS2_bits,
  input  [1:0]  io_RF_inputs_1_bits_uOp_portID_value,
  output        io_RF_inputs_2_ready,
  input         io_RF_inputs_2_valid,
                io_RF_inputs_2_bits_RD_valid,
  input  [5:0]  io_RF_inputs_2_bits_RD_bits,
  input         io_RF_inputs_2_bits_RS1_ready,
                io_RF_inputs_2_bits_RS1_valid,
  input  [5:0]  io_RF_inputs_2_bits_RS1_bits,
  input         io_RF_inputs_2_bits_RS2_ready,
                io_RF_inputs_2_bits_RS2_is_imm,
                io_RF_inputs_2_bits_RS2_valid,
  input  [31:0] io_RF_inputs_2_bits_RS2_bits,
  input  [1:0]  io_RF_inputs_2_bits_uOp_portID_value,
  output        io_RF_inputs_3_ready,
  input         io_RF_inputs_3_valid,
                io_RF_inputs_3_bits_RD_valid,
  input  [5:0]  io_RF_inputs_3_bits_RD_bits,
  input         io_RF_inputs_3_bits_RS1_ready,
                io_RF_inputs_3_bits_RS1_valid,
  input  [5:0]  io_RF_inputs_3_bits_RS1_bits,
  input         io_RF_inputs_3_bits_RS2_ready,
                io_RF_inputs_3_bits_RS2_is_imm,
                io_RF_inputs_3_bits_RS2_valid,
  input  [31:0] io_RF_inputs_3_bits_RS2_bits,
  input  [1:0]  io_RF_inputs_3_bits_uOp_portID_value,
  input         io_FU_write_0_valid,
  input  [63:0] io_FU_write_0_bits_RD,
  input  [31:0] io_FU_write_0_bits_data,
  input         io_FU_write_1_valid,
  input  [63:0] io_FU_write_1_bits_RD,
  input  [31:0] io_FU_write_1_bits_data,
  input         io_FU_write_2_valid,
  input  [63:0] io_FU_write_2_bits_RD,
  input  [31:0] io_FU_write_2_bits_data,
  input         io_FU_write_3_valid,
  input  [63:0] io_FU_write_3_bits_RD,
  input  [31:0] io_FU_write_3_bits_data,
  input         io_FU_read_0_ready,
  output        io_FU_read_0_valid,
  output [31:0] io_FU_read_0_bits_RS1_data,
                io_FU_read_0_bits_RS2_data,
  output [5:0]  io_FU_read_0_bits_RD,
  output [1:0]  io_FU_read_0_bits_uOp_portID_value,
  input         io_FU_read_1_ready,
  output        io_FU_read_1_valid,
  output [31:0] io_FU_read_1_bits_RS1_data,
                io_FU_read_1_bits_RS2_data,
  output [5:0]  io_FU_read_1_bits_RD,
  output [1:0]  io_FU_read_1_bits_uOp_portID_value,
  input         io_FU_read_2_ready,
  output        io_FU_read_2_valid,
  output [31:0] io_FU_read_2_bits_RS1_data,
                io_FU_read_2_bits_RS2_data,
  output [5:0]  io_FU_read_2_bits_RD,
  output [1:0]  io_FU_read_2_bits_uOp_portID_value,
  input         io_FU_read_3_ready,
  output        io_FU_read_3_valid,
  output [31:0] io_FU_read_3_bits_RS1_data,
                io_FU_read_3_bits_RS2_data,
  output [5:0]  io_FU_read_3_bits_RD,
  output [1:0]  io_FU_read_3_bits_uOp_portID_value
);

  reg [5:0] io_FU_read_0_bits_RD_REG_1;
  reg [1:0] io_FU_read_0_bits_uOp_REG_portID_value;
  reg       io_FU_read_0_valid_REG;
  reg [5:0] io_FU_read_1_bits_RD_REG_1;
  reg [1:0] io_FU_read_1_bits_uOp_REG_portID_value;
  reg       io_FU_read_1_valid_REG;
  reg [5:0] io_FU_read_2_bits_RD_REG_1;
  reg [1:0] io_FU_read_2_bits_uOp_REG_portID_value;
  reg       io_FU_read_2_valid_REG;
  reg [5:0] io_FU_read_3_bits_RD_REG_1;
  reg [1:0] io_FU_read_3_bits_uOp_REG_portID_value;
  reg       io_FU_read_3_valid_REG;
  always @(posedge clock) begin
    io_FU_read_0_bits_RD_REG_1 <= io_RF_inputs_0_bits_RD_bits;
    io_FU_read_0_bits_uOp_REG_portID_value <= io_RF_inputs_0_bits_uOp_portID_value;
    io_FU_read_0_valid_REG <= io_RF_inputs_0_valid;
    io_FU_read_1_bits_RD_REG_1 <= io_RF_inputs_1_bits_RD_bits;
    io_FU_read_1_bits_uOp_REG_portID_value <= io_RF_inputs_1_bits_uOp_portID_value;
    io_FU_read_1_valid_REG <= io_RF_inputs_1_valid;
    io_FU_read_2_bits_RD_REG_1 <= io_RF_inputs_2_bits_RD_bits;
    io_FU_read_2_bits_uOp_REG_portID_value <= io_RF_inputs_2_bits_uOp_portID_value;
    io_FU_read_2_valid_REG <= io_RF_inputs_2_valid;
    io_FU_read_3_bits_RD_REG_1 <= io_RF_inputs_3_bits_RD_bits;
    io_FU_read_3_bits_uOp_REG_portID_value <= io_RF_inputs_3_bits_uOp_portID_value;
    io_FU_read_3_valid_REG <= io_RF_inputs_3_valid;
  end // always @(posedge)
  NReadWriteSmem RF_memory (
    .clock         (clock),
    .reset         (reset),
    .io_rd_addr_0  (io_RF_inputs_0_bits_RS1_bits),
    .io_rd_addr_1  (io_RF_inputs_0_bits_RS2_bits[5:0]),
    .io_rd_addr_2  (io_RF_inputs_1_bits_RS1_bits),
    .io_rd_addr_3  (io_RF_inputs_1_bits_RS2_bits[5:0]),
    .io_rd_addr_4  (io_RF_inputs_2_bits_RS1_bits),
    .io_rd_addr_5  (io_RF_inputs_2_bits_RS2_bits[5:0]),
    .io_rd_addr_6  (io_RF_inputs_3_bits_RS1_bits),
    .io_rd_addr_7  (io_RF_inputs_3_bits_RS2_bits[5:0]),
    .io_data_out_0 (io_FU_read_0_bits_RS1_data),
    .io_data_out_1 (io_FU_read_0_bits_RS2_data),
    .io_data_out_2 (io_FU_read_1_bits_RS1_data),
    .io_data_out_3 (io_FU_read_1_bits_RS2_data),
    .io_data_out_4 (io_FU_read_2_bits_RS1_data),
    .io_data_out_5 (io_FU_read_2_bits_RS2_data),
    .io_data_out_6 (io_FU_read_3_bits_RS1_data),
    .io_data_out_7 (io_FU_read_3_bits_RS2_data),
    .io_wr_addr_0  (io_FU_write_0_bits_RD[5:0]),
    .io_wr_addr_1  (io_FU_write_1_bits_RD[5:0]),
    .io_wr_addr_2  (io_FU_write_2_bits_RD[5:0]),
    .io_wr_addr_3  (io_FU_write_3_bits_RD[5:0]),
    .io_wr_en_0    (io_FU_write_0_valid),
    .io_wr_en_1    (io_FU_write_1_valid),
    .io_wr_en_2    (io_FU_write_2_valid),
    .io_wr_en_3    (io_FU_write_3_valid),
    .io_data_in_0  (io_FU_write_0_bits_data),
    .io_data_in_1  (io_FU_write_1_bits_data),
    .io_data_in_2  (io_FU_write_2_bits_data),
    .io_data_in_3  (io_FU_write_3_bits_data)
  );
  assign io_RF_inputs_0_ready = io_FU_read_0_ready;
  assign io_RF_inputs_1_ready = io_FU_read_1_ready;
  assign io_RF_inputs_2_ready = io_FU_read_2_ready;
  assign io_RF_inputs_3_ready = io_FU_read_3_ready;
  assign io_FU_read_0_valid = io_FU_read_0_valid_REG;
  assign io_FU_read_0_bits_RD = io_FU_read_0_bits_RD_REG_1;
  assign io_FU_read_0_bits_uOp_portID_value = io_FU_read_0_bits_uOp_REG_portID_value;
  assign io_FU_read_1_valid = io_FU_read_1_valid_REG;
  assign io_FU_read_1_bits_RD = io_FU_read_1_bits_RD_REG_1;
  assign io_FU_read_1_bits_uOp_portID_value = io_FU_read_1_bits_uOp_REG_portID_value;
  assign io_FU_read_2_valid = io_FU_read_2_valid_REG;
  assign io_FU_read_2_bits_RD = io_FU_read_2_bits_RD_REG_1;
  assign io_FU_read_2_bits_uOp_portID_value = io_FU_read_2_bits_uOp_REG_portID_value;
  assign io_FU_read_3_valid = io_FU_read_3_valid_REG;
  assign io_FU_read_3_bits_RD = io_FU_read_3_bits_RD_REG_1;
  assign io_FU_read_3_bits_uOp_portID_value = io_FU_read_3_bits_uOp_REG_portID_value;
endmodule

