// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

module fetch_queue(
  input          clock,
                 reset,
                 io_flush,
  output         io_enq_ready,
  input          io_enq_valid,
  input  [127:0] io_enq_bits_instruction_data,
  input  [31:0]  io_enq_bits_fetch_PC,
  input          io_deq_ready,
  output         io_deq_valid,
  output [31:0]  io_deq_bits_fetch_PC,
  output         io_deq_bits_valid_bits_0,
                 io_deq_bits_valid_bits_1,
                 io_deq_bits_valid_bits_2,
                 io_deq_bits_valid_bits_3,
  output [31:0]  io_deq_bits_instructions_0_instruction,
  output [3:0]   io_deq_bits_instructions_0_packet_index,
  output [5:0]   io_deq_bits_instructions_0_ROB_index,
  output [31:0]  io_deq_bits_instructions_1_instruction,
  output [3:0]   io_deq_bits_instructions_1_packet_index,
  output [5:0]   io_deq_bits_instructions_1_ROB_index,
  output [31:0]  io_deq_bits_instructions_2_instruction,
  output [3:0]   io_deq_bits_instructions_2_packet_index,
  output [5:0]   io_deq_bits_instructions_2_ROB_index,
  output [31:0]  io_deq_bits_instructions_3_instruction,
  output [3:0]   io_deq_bits_instructions_3_packet_index,
  output [5:0]   io_deq_bits_instructions_3_ROB_index,
  output         io_deq_bits_prediction_hit,
  output [31:0]  io_deq_bits_prediction_target,
  output [2:0]   io_deq_bits_prediction_br_type,
  output         io_deq_bits_prediction_br_mask_0,
                 io_deq_bits_prediction_br_mask_1,
                 io_deq_bits_prediction_br_mask_2,
                 io_deq_bits_prediction_br_mask_3,
  output [15:0]  io_deq_bits_GHR,
  output [6:0]   io_deq_bits_NEXT,
                 io_deq_bits_TOS,
  input  [31:0]  io_commit_fetch_PC,
  input          io_commit_valid
);

  wire        _aligner_io_aligned_fetch_packet_valid;
  wire [31:0] _aligner_io_aligned_fetch_packet_bits_fetch_PC;
  wire        _aligner_io_aligned_fetch_packet_bits_valid_bits_0;
  wire        _aligner_io_aligned_fetch_packet_bits_valid_bits_1;
  wire        _aligner_io_aligned_fetch_packet_bits_valid_bits_2;
  wire        _aligner_io_aligned_fetch_packet_bits_valid_bits_3;
  wire [31:0] _aligner_io_aligned_fetch_packet_bits_instructions_0_instruction;
  wire [31:0] _aligner_io_aligned_fetch_packet_bits_instructions_1_instruction;
  wire [31:0] _aligner_io_aligned_fetch_packet_bits_instructions_2_instruction;
  wire [31:0] _aligner_io_aligned_fetch_packet_bits_instructions_3_instruction;
  wire        _instruction_Q_io_enq_ready;
  Queue32_fetch_packet instruction_Q (
    .clock                                   (clock),
    .reset                                   (reset),
    .io_enq_ready                            (_instruction_Q_io_enq_ready),
    .io_enq_valid                            (_aligner_io_aligned_fetch_packet_valid),
    .io_enq_bits_fetch_PC
      (_aligner_io_aligned_fetch_packet_bits_fetch_PC),
    .io_enq_bits_valid_bits_0
      (_aligner_io_aligned_fetch_packet_bits_valid_bits_0),
    .io_enq_bits_valid_bits_1
      (_aligner_io_aligned_fetch_packet_bits_valid_bits_1),
    .io_enq_bits_valid_bits_2
      (_aligner_io_aligned_fetch_packet_bits_valid_bits_2),
    .io_enq_bits_valid_bits_3
      (_aligner_io_aligned_fetch_packet_bits_valid_bits_3),
    .io_enq_bits_instructions_0_instruction
      (_aligner_io_aligned_fetch_packet_bits_instructions_0_instruction),
    .io_enq_bits_instructions_1_instruction
      (_aligner_io_aligned_fetch_packet_bits_instructions_1_instruction),
    .io_enq_bits_instructions_2_instruction
      (_aligner_io_aligned_fetch_packet_bits_instructions_2_instruction),
    .io_enq_bits_instructions_3_instruction
      (_aligner_io_aligned_fetch_packet_bits_instructions_3_instruction),
    .io_deq_ready                            (io_deq_ready),
    .io_deq_valid                            (io_deq_valid),
    .io_deq_bits_fetch_PC                    (io_deq_bits_fetch_PC),
    .io_deq_bits_valid_bits_0                (io_deq_bits_valid_bits_0),
    .io_deq_bits_valid_bits_1                (io_deq_bits_valid_bits_1),
    .io_deq_bits_valid_bits_2                (io_deq_bits_valid_bits_2),
    .io_deq_bits_valid_bits_3                (io_deq_bits_valid_bits_3),
    .io_deq_bits_instructions_0_instruction  (io_deq_bits_instructions_0_instruction),
    .io_deq_bits_instructions_0_packet_index (io_deq_bits_instructions_0_packet_index),
    .io_deq_bits_instructions_0_ROB_index    (io_deq_bits_instructions_0_ROB_index),
    .io_deq_bits_instructions_1_instruction  (io_deq_bits_instructions_1_instruction),
    .io_deq_bits_instructions_1_packet_index (io_deq_bits_instructions_1_packet_index),
    .io_deq_bits_instructions_1_ROB_index    (io_deq_bits_instructions_1_ROB_index),
    .io_deq_bits_instructions_2_instruction  (io_deq_bits_instructions_2_instruction),
    .io_deq_bits_instructions_2_packet_index (io_deq_bits_instructions_2_packet_index),
    .io_deq_bits_instructions_2_ROB_index    (io_deq_bits_instructions_2_ROB_index),
    .io_deq_bits_instructions_3_instruction  (io_deq_bits_instructions_3_instruction),
    .io_deq_bits_instructions_3_packet_index (io_deq_bits_instructions_3_packet_index),
    .io_deq_bits_instructions_3_ROB_index    (io_deq_bits_instructions_3_ROB_index),
    .io_deq_bits_prediction_hit              (io_deq_bits_prediction_hit),
    .io_deq_bits_prediction_target           (io_deq_bits_prediction_target),
    .io_deq_bits_prediction_br_type          (io_deq_bits_prediction_br_type),
    .io_deq_bits_prediction_br_mask_0        (io_deq_bits_prediction_br_mask_0),
    .io_deq_bits_prediction_br_mask_1        (io_deq_bits_prediction_br_mask_1),
    .io_deq_bits_prediction_br_mask_2        (io_deq_bits_prediction_br_mask_2),
    .io_deq_bits_prediction_br_mask_3        (io_deq_bits_prediction_br_mask_3),
    .io_deq_bits_GHR                         (io_deq_bits_GHR),
    .io_deq_bits_NEXT                        (io_deq_bits_NEXT),
    .io_deq_bits_TOS                         (io_deq_bits_TOS),
    .io_flush                                (io_flush)
  );
  instruction_aligner aligner (
    .clock                                                   (clock),
    .reset                                                   (reset),
    .io_mem_rsp_ready                                        (io_enq_ready),
    .io_mem_rsp_valid                                        (io_enq_valid),
    .io_mem_rsp_bits_instruction_data
      (io_enq_bits_instruction_data),
    .io_mem_rsp_bits_fetch_PC                                (io_enq_bits_fetch_PC),
    .io_aligned_fetch_packet_ready
      (_instruction_Q_io_enq_ready),
    .io_aligned_fetch_packet_valid
      (_aligner_io_aligned_fetch_packet_valid),
    .io_aligned_fetch_packet_bits_fetch_PC
      (_aligner_io_aligned_fetch_packet_bits_fetch_PC),
    .io_aligned_fetch_packet_bits_valid_bits_0
      (_aligner_io_aligned_fetch_packet_bits_valid_bits_0),
    .io_aligned_fetch_packet_bits_valid_bits_1
      (_aligner_io_aligned_fetch_packet_bits_valid_bits_1),
    .io_aligned_fetch_packet_bits_valid_bits_2
      (_aligner_io_aligned_fetch_packet_bits_valid_bits_2),
    .io_aligned_fetch_packet_bits_valid_bits_3
      (_aligner_io_aligned_fetch_packet_bits_valid_bits_3),
    .io_aligned_fetch_packet_bits_instructions_0_instruction
      (_aligner_io_aligned_fetch_packet_bits_instructions_0_instruction),
    .io_aligned_fetch_packet_bits_instructions_1_instruction
      (_aligner_io_aligned_fetch_packet_bits_instructions_1_instruction),
    .io_aligned_fetch_packet_bits_instructions_2_instruction
      (_aligner_io_aligned_fetch_packet_bits_instructions_2_instruction),
    .io_aligned_fetch_packet_bits_instructions_3_instruction
      (_aligner_io_aligned_fetch_packet_bits_instructions_3_instruction),
    .io_commit_fetch_PC                                      (io_commit_fetch_PC),
    .io_commit_valid                                         (io_commit_valid)
  );
endmodule

