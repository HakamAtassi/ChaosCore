// Generated by CIRCT firtool-1.76.0
module FU_1(
  inputclock,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   reset,
io_flush,
  outputio_FU_input_ready,
  inputio_FU_input_valid,
  input  struct packed {struct packed {struct packed {logic RS1_ready; logic RS2_ready; } ready_bits; logic [4:0] RDold; logic [6:0] RD; logic RD_valid; logic [6:0] RS1; logic RS1_valid; logic [6:0] RS2; logic RS2_valid; logic [20:0] IMM; logic [2:0] FUNCT3; logic [1:0] packet_index; logic [5:0] ROB_index; logic [3:0] MOB_index; logic [3:0] FTQ_index; logic [4:0] instructionType; logic [1:0] portID; logic [1:0] RS_type; logic needs_ALU; logic needs_branch_unit; logic needs_CSRs; logic SUBTRACT; logic MULTIPLY; logic IS_IMM; logic [1:0] memory_type; logic [1:0] access_width; } decoded_instruction; logic [31:0] RS1_data; logic [31:0] RS2_data; logic [31:0] fetch_PC; } io_FU_input_bits,
  output struct packed {logic valid; struct packed {logic [6:0] RD; logic [31:0] RD_data; logic RD_valid; logic [31:0] fetch_PC; logic branch_taken; logic [31:0] target_address; logic branch_valid; logic [31:0] address; logic [1:0] memory_type; logic [1:0] access_width; logic is_unsigned; logic [31:0] wr_data; logic [3:0] MOB_index; logic [5:0] ROB_index; logic [3:0] FTQ_index; logic [1:0] fetch_packet_index; logic exception; } bits; }                                                                                                                                                                                                                                            io_FU_output
);

  reg  monitor_output_REG;
  wire monitor_output = monitor_output_REG;
  always @(posedge clock)
    monitor_output_REG <= io_FU_input_valid;
  ALU ALU (
    .clock             (clock),
    .reset             (reset),
    .io_flush          (io_flush),
    .io_FU_input_valid (io_FU_input_valid),
    .io_FU_input_bits  (io_FU_input_bits),
    .io_FU_output      (io_FU_output)
  );
  assign io_FU_input_ready = 1'h1;
endmodule

