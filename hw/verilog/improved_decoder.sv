// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module improved_decoder(
  input         clock,
                reset,
                io_instruction_valid,
  input  [31:0] io_instruction_bits_instruction,
  input  [3:0]  io_instruction_bits_packet_index,
  output [4:0]  io_decoded_instruction_bits_RD,
  output        io_decoded_instruction_bits_RD_valid,
  output [6:0]  io_decoded_instruction_bits_RS1,
  output        io_decoded_instruction_bits_RS1_valid,
  output [6:0]  io_decoded_instruction_bits_RS2,
  output        io_decoded_instruction_bits_RS2_valid,
  output [20:0] io_decoded_instruction_bits_IMM,
  output [2:0]  io_decoded_instruction_bits_FUNCT3,
  output [1:0]  io_decoded_instruction_bits_packet_index,
  output [4:0]  io_decoded_instruction_bits_instructionType,
  output        io_decoded_instruction_bits_needs_ALU,
                io_decoded_instruction_bits_needs_branch_unit,
                io_decoded_instruction_bits_needs_CSRs,
                io_decoded_instruction_bits_needs_memory,
                io_decoded_instruction_bits_needs_mul,
                io_decoded_instruction_bits_needs_div,
                io_decoded_instruction_bits_SUBTRACT,
                io_decoded_instruction_bits_MULTIPLY,
                io_decoded_instruction_bits_FENCE,
                io_decoded_instruction_bits_FLUSH,
                io_decoded_instruction_bits_MRET,
                io_decoded_instruction_bits_ECALL,
                io_decoded_instruction_bits_IS_IMM,
                io_decoded_instruction_bits_mem_signed,
  output [1:0]  io_decoded_instruction_bits_memory_type,
                io_decoded_instruction_bits_access_width
);

  wire [8:0]  _GEN = {9{io_instruction_bits_instruction[31]}};
  wire [30:0] decode_pat_invInputs =
    ~{io_instruction_valid, io_instruction_bits_instruction[31:2]};
  wire [30:0] _decode_pat_andMatrixOutputs_T =
    {decode_pat_invInputs[0],
     decode_pat_invInputs[1],
     io_instruction_bits_instruction[4],
     io_instruction_bits_instruction[5],
     io_instruction_bits_instruction[6],
     decode_pat_invInputs[5],
     decode_pat_invInputs[6],
     decode_pat_invInputs[7],
     decode_pat_invInputs[8],
     decode_pat_invInputs[9],
     decode_pat_invInputs[10],
     decode_pat_invInputs[11],
     decode_pat_invInputs[12],
     decode_pat_invInputs[13],
     decode_pat_invInputs[14],
     decode_pat_invInputs[15],
     decode_pat_invInputs[16],
     io_instruction_bits_instruction[19],
     decode_pat_invInputs[18],
     decode_pat_invInputs[19],
     decode_pat_invInputs[20],
     decode_pat_invInputs[21],
     decode_pat_invInputs[22],
     io_instruction_bits_instruction[25],
     decode_pat_invInputs[24],
     decode_pat_invInputs[25],
     io_instruction_bits_instruction[28],
     decode_pat_invInputs[27],
     io_instruction_bits_instruction[30],
     decode_pat_invInputs[29],
     decode_pat_invInputs[30]};
  wire [6:0]  _decode_pat_andMatrixOutputs_T_1 =
    {decode_pat_invInputs[0],
     decode_pat_invInputs[1],
     decode_pat_invInputs[2],
     decode_pat_invInputs[3],
     decode_pat_invInputs[4],
     decode_pat_invInputs[11],
     io_instruction_valid};
  wire [6:0]  _decode_pat_andMatrixOutputs_T_2 =
    {decode_pat_invInputs[0],
     decode_pat_invInputs[1],
     decode_pat_invInputs[3],
     decode_pat_invInputs[4],
     decode_pat_invInputs[10],
     decode_pat_invInputs[11],
     io_instruction_valid};
  wire [6:0]  _decode_pat_andMatrixOutputs_T_3 =
    {decode_pat_invInputs[0],
     decode_pat_invInputs[1],
     decode_pat_invInputs[2],
     decode_pat_invInputs[4],
     decode_pat_invInputs[10],
     decode_pat_invInputs[12],
     io_instruction_valid};
  wire [6:0]  _decode_pat_andMatrixOutputs_T_6 =
    {decode_pat_invInputs[0],
     decode_pat_invInputs[1],
     decode_pat_invInputs[2],
     decode_pat_invInputs[4],
     decode_pat_invInputs[11],
     decode_pat_invInputs[12],
     io_instruction_valid};
  wire [8:0]  _decode_pat_andMatrixOutputs_T_7 =
    {io_instruction_bits_instruction[2],
     io_instruction_bits_instruction[3],
     decode_pat_invInputs[2],
     decode_pat_invInputs[3],
     decode_pat_invInputs[4],
     decode_pat_invInputs[10],
     decode_pat_invInputs[11],
     decode_pat_invInputs[12],
     io_instruction_valid};
  wire [4:0]  _decode_pat_andMatrixOutputs_T_9 =
    {io_instruction_bits_instruction[2],
     decode_pat_invInputs[1],
     io_instruction_bits_instruction[4],
     decode_pat_invInputs[4],
     io_instruction_valid};
  wire [7:0]  _decode_pat_andMatrixOutputs_T_11 =
    {decode_pat_invInputs[0],
     decode_pat_invInputs[1],
     decode_pat_invInputs[2],
     io_instruction_bits_instruction[5],
     decode_pat_invInputs[4],
     decode_pat_invInputs[10],
     decode_pat_invInputs[12],
     io_instruction_valid};
  wire [14:0] _decode_pat_andMatrixOutputs_T_14 =
    {decode_pat_invInputs[0],
     decode_pat_invInputs[1],
     io_instruction_bits_instruction[4],
     io_instruction_bits_instruction[5],
     decode_pat_invInputs[4],
     decode_pat_invInputs[10],
     decode_pat_invInputs[11],
     decode_pat_invInputs[12],
     decode_pat_invInputs[23],
     decode_pat_invInputs[24],
     decode_pat_invInputs[25],
     decode_pat_invInputs[26],
     decode_pat_invInputs[27],
     decode_pat_invInputs[29],
     io_instruction_valid};
  wire [11:0] _decode_pat_andMatrixOutputs_T_15 =
    {decode_pat_invInputs[0],
     decode_pat_invInputs[1],
     io_instruction_bits_instruction[4],
     io_instruction_bits_instruction[5],
     decode_pat_invInputs[4],
     decode_pat_invInputs[24],
     decode_pat_invInputs[25],
     decode_pat_invInputs[26],
     decode_pat_invInputs[27],
     decode_pat_invInputs[28],
     decode_pat_invInputs[29],
     io_instruction_valid};
  wire [6:0]  _decode_pat_andMatrixOutputs_T_18 =
    {decode_pat_invInputs[0],
     decode_pat_invInputs[1],
     decode_pat_invInputs[2],
     io_instruction_bits_instruction[5],
     io_instruction_bits_instruction[6],
     decode_pat_invInputs[11],
     io_instruction_valid};
  wire [7:0]  _decode_pat_andMatrixOutputs_T_19 =
    {decode_pat_invInputs[1],
     decode_pat_invInputs[2],
     io_instruction_bits_instruction[5],
     io_instruction_bits_instruction[6],
     decode_pat_invInputs[10],
     decode_pat_invInputs[11],
     decode_pat_invInputs[12],
     io_instruction_valid};
  wire [5:0]  _decode_pat_andMatrixOutputs_T_21 =
    {io_instruction_bits_instruction[2],
     io_instruction_bits_instruction[3],
     decode_pat_invInputs[2],
     io_instruction_bits_instruction[5],
     io_instruction_bits_instruction[6],
     io_instruction_valid};
  wire [30:0] _decode_pat_andMatrixOutputs_T_22 =
    {decode_pat_invInputs[0],
     decode_pat_invInputs[1],
     io_instruction_bits_instruction[4],
     io_instruction_bits_instruction[5],
     io_instruction_bits_instruction[6],
     decode_pat_invInputs[5],
     decode_pat_invInputs[6],
     decode_pat_invInputs[7],
     decode_pat_invInputs[8],
     decode_pat_invInputs[9],
     decode_pat_invInputs[10],
     decode_pat_invInputs[11],
     decode_pat_invInputs[12],
     decode_pat_invInputs[13],
     decode_pat_invInputs[14],
     decode_pat_invInputs[15],
     decode_pat_invInputs[16],
     decode_pat_invInputs[17],
     decode_pat_invInputs[18],
     decode_pat_invInputs[19],
     decode_pat_invInputs[20],
     decode_pat_invInputs[21],
     decode_pat_invInputs[22],
     decode_pat_invInputs[23],
     decode_pat_invInputs[24],
     decode_pat_invInputs[25],
     decode_pat_invInputs[26],
     decode_pat_invInputs[27],
     decode_pat_invInputs[28],
     decode_pat_invInputs[29],
     io_instruction_valid};
  wire [13:0] _decode_pat_andMatrixOutputs_T_23 =
    {decode_pat_invInputs[0],
     decode_pat_invInputs[1],
     io_instruction_bits_instruction[4],
     decode_pat_invInputs[4],
     io_instruction_bits_instruction[12],
     decode_pat_invInputs[11],
     decode_pat_invInputs[23],
     decode_pat_invInputs[24],
     decode_pat_invInputs[25],
     decode_pat_invInputs[26],
     decode_pat_invInputs[27],
     decode_pat_invInputs[28],
     decode_pat_invInputs[29],
     io_instruction_valid};
  wire [6:0]  _decode_pat_andMatrixOutputs_T_26 =
    {decode_pat_invInputs[0],
     decode_pat_invInputs[1],
     io_instruction_bits_instruction[4],
     io_instruction_bits_instruction[5],
     io_instruction_bits_instruction[6],
     io_instruction_bits_instruction[12],
     io_instruction_valid};
  wire [6:0]  _decode_pat_andMatrixOutputs_T_27 =
    {decode_pat_invInputs[0],
     decode_pat_invInputs[1],
     io_instruction_bits_instruction[4],
     decode_pat_invInputs[3],
     decode_pat_invInputs[4],
     io_instruction_bits_instruction[13],
     io_instruction_valid};
  wire [6:0]  _decode_pat_andMatrixOutputs_T_28 =
    {decode_pat_invInputs[0],
     decode_pat_invInputs[1],
     io_instruction_bits_instruction[4],
     io_instruction_bits_instruction[5],
     io_instruction_bits_instruction[6],
     io_instruction_bits_instruction[13],
     io_instruction_valid};
  wire [6:0]  _decode_pat_andMatrixOutputs_T_33 =
    {decode_pat_invInputs[0],
     decode_pat_invInputs[1],
     decode_pat_invInputs[2],
     io_instruction_bits_instruction[5],
     io_instruction_bits_instruction[6],
     io_instruction_bits_instruction[14],
     io_instruction_valid};
  wire [13:0] _decode_pat_andMatrixOutputs_T_34 =
    {decode_pat_invInputs[0],
     decode_pat_invInputs[1],
     io_instruction_bits_instruction[4],
     decode_pat_invInputs[4],
     io_instruction_bits_instruction[12],
     decode_pat_invInputs[11],
     io_instruction_bits_instruction[14],
     decode_pat_invInputs[23],
     decode_pat_invInputs[24],
     decode_pat_invInputs[25],
     decode_pat_invInputs[26],
     decode_pat_invInputs[27],
     decode_pat_invInputs[29],
     io_instruction_valid};
  wire [30:0] _decode_pat_andMatrixOutputs_T_42 =
    {decode_pat_invInputs[0],
     decode_pat_invInputs[1],
     io_instruction_bits_instruction[4],
     io_instruction_bits_instruction[5],
     io_instruction_bits_instruction[6],
     decode_pat_invInputs[5],
     decode_pat_invInputs[6],
     decode_pat_invInputs[7],
     decode_pat_invInputs[8],
     decode_pat_invInputs[9],
     decode_pat_invInputs[10],
     decode_pat_invInputs[11],
     decode_pat_invInputs[12],
     decode_pat_invInputs[13],
     decode_pat_invInputs[14],
     decode_pat_invInputs[15],
     decode_pat_invInputs[16],
     decode_pat_invInputs[17],
     decode_pat_invInputs[18],
     io_instruction_bits_instruction[21],
     decode_pat_invInputs[20],
     decode_pat_invInputs[21],
     decode_pat_invInputs[22],
     decode_pat_invInputs[23],
     decode_pat_invInputs[24],
     decode_pat_invInputs[25],
     io_instruction_bits_instruction[28],
     decode_pat_invInputs[27],
     decode_pat_invInputs[28],
     decode_pat_invInputs[29],
     io_instruction_valid};
  wire [16:0] decode_pat =
    {|{&_decode_pat_andMatrixOutputs_T_11,
       &{decode_pat_invInputs[0],
         decode_pat_invInputs[1],
         decode_pat_invInputs[2],
         io_instruction_bits_instruction[5],
         decode_pat_invInputs[11],
         decode_pat_invInputs[12],
         io_instruction_valid},
       &_decode_pat_andMatrixOutputs_T_14,
       &_decode_pat_andMatrixOutputs_T_15,
       &_decode_pat_andMatrixOutputs_T_33,
       &{decode_pat_invInputs[0],
         decode_pat_invInputs[1],
         io_instruction_bits_instruction[4],
         io_instruction_bits_instruction[5],
         decode_pat_invInputs[4],
         io_instruction_bits_instruction[12],
         decode_pat_invInputs[11],
         io_instruction_bits_instruction[14],
         decode_pat_invInputs[23],
         decode_pat_invInputs[24],
         decode_pat_invInputs[25],
         decode_pat_invInputs[26],
         decode_pat_invInputs[27],
         decode_pat_invInputs[29],
         io_instruction_valid}},
     |{&_decode_pat_andMatrixOutputs_T_1,
       &_decode_pat_andMatrixOutputs_T_2,
       &_decode_pat_andMatrixOutputs_T_3,
       &_decode_pat_andMatrixOutputs_T_6,
       &_decode_pat_andMatrixOutputs_T_14,
       &_decode_pat_andMatrixOutputs_T_15,
       &_decode_pat_andMatrixOutputs_T_19,
       &_decode_pat_andMatrixOutputs_T_23,
       &{decode_pat_invInputs[0],
         decode_pat_invInputs[1],
         io_instruction_bits_instruction[5],
         io_instruction_bits_instruction[6],
         io_instruction_bits_instruction[12],
         decode_pat_invInputs[11],
         decode_pat_invInputs[12],
         io_instruction_valid},
       &_decode_pat_andMatrixOutputs_T_27,
       &{decode_pat_invInputs[0],
         decode_pat_invInputs[1],
         io_instruction_bits_instruction[4],
         io_instruction_bits_instruction[5],
         io_instruction_bits_instruction[6],
         io_instruction_bits_instruction[13],
         decode_pat_invInputs[12],
         io_instruction_valid},
       &_decode_pat_andMatrixOutputs_T_33,
       &_decode_pat_andMatrixOutputs_T_34},
     |{&{decode_pat_invInputs[0],
         decode_pat_invInputs[1],
         io_instruction_bits_instruction[4],
         decode_pat_invInputs[3],
         decode_pat_invInputs[4],
         decode_pat_invInputs[10],
         io_instruction_valid},
       &_decode_pat_andMatrixOutputs_T_14,
       &{decode_pat_invInputs[0],
         decode_pat_invInputs[1],
         io_instruction_bits_instruction[4],
         io_instruction_bits_instruction[5],
         decode_pat_invInputs[4],
         decode_pat_invInputs[23],
         decode_pat_invInputs[24],
         decode_pat_invInputs[25],
         decode_pat_invInputs[26],
         decode_pat_invInputs[27],
         decode_pat_invInputs[28],
         decode_pat_invInputs[29],
         io_instruction_valid},
       &{io_instruction_bits_instruction[2],
         decode_pat_invInputs[1],
         io_instruction_bits_instruction[4],
         io_instruction_bits_instruction[5],
         decode_pat_invInputs[4],
         io_instruction_valid},
       &_decode_pat_andMatrixOutputs_T_23,
       &_decode_pat_andMatrixOutputs_T_27,
       &_decode_pat_andMatrixOutputs_T_34},
     |{&{io_instruction_bits_instruction[2],
         decode_pat_invInputs[1],
         io_instruction_bits_instruction[4],
         decode_pat_invInputs[3],
         decode_pat_invInputs[4],
         io_instruction_valid},
       &_decode_pat_andMatrixOutputs_T_18,
       &_decode_pat_andMatrixOutputs_T_19,
       &_decode_pat_andMatrixOutputs_T_21,
       &_decode_pat_andMatrixOutputs_T_33},
     |{&_decode_pat_andMatrixOutputs_T,
       &_decode_pat_andMatrixOutputs_T_7,
       &_decode_pat_andMatrixOutputs_T_22,
       &_decode_pat_andMatrixOutputs_T_26,
       &_decode_pat_andMatrixOutputs_T_28,
       &_decode_pat_andMatrixOutputs_T_42},
     |{&_decode_pat_andMatrixOutputs_T_1,
       &_decode_pat_andMatrixOutputs_T_3,
       &_decode_pat_andMatrixOutputs_T_6},
     &{decode_pat_invInputs[0],
       decode_pat_invInputs[1],
       io_instruction_bits_instruction[4],
       io_instruction_bits_instruction[5],
       decode_pat_invInputs[4],
       io_instruction_bits_instruction[25],
       decode_pat_invInputs[24],
       decode_pat_invInputs[25],
       decode_pat_invInputs[26],
       decode_pat_invInputs[27],
       decode_pat_invInputs[28],
       decode_pat_invInputs[29],
       io_instruction_valid},
     &{decode_pat_invInputs[0],
       decode_pat_invInputs[1],
       io_instruction_bits_instruction[4],
       io_instruction_bits_instruction[5],
       decode_pat_invInputs[4],
       decode_pat_invInputs[11],
       io_instruction_bits_instruction[14],
       io_instruction_bits_instruction[25],
       decode_pat_invInputs[24],
       decode_pat_invInputs[25],
       decode_pat_invInputs[26],
       decode_pat_invInputs[27],
       decode_pat_invInputs[28],
       decode_pat_invInputs[29],
       io_instruction_valid},
     |{&{decode_pat_invInputs[0],
         decode_pat_invInputs[1],
         io_instruction_bits_instruction[4],
         decode_pat_invInputs[3],
         decode_pat_invInputs[4],
         io_instruction_bits_instruction[12],
         io_instruction_bits_instruction[13],
         decode_pat_invInputs[12],
         io_instruction_valid},
       &{decode_pat_invInputs[0],
         decode_pat_invInputs[1],
         io_instruction_bits_instruction[4],
         io_instruction_bits_instruction[5],
         decode_pat_invInputs[4],
         io_instruction_bits_instruction[12],
         io_instruction_bits_instruction[13],
         decode_pat_invInputs[12],
         decode_pat_invInputs[23],
         decode_pat_invInputs[24],
         decode_pat_invInputs[25],
         decode_pat_invInputs[26],
         decode_pat_invInputs[27],
         decode_pat_invInputs[28],
         decode_pat_invInputs[29],
         io_instruction_valid},
       &{decode_pat_invInputs[0],
         decode_pat_invInputs[1],
         decode_pat_invInputs[2],
         decode_pat_invInputs[3],
         decode_pat_invInputs[4],
         decode_pat_invInputs[11],
         io_instruction_bits_instruction[14],
         io_instruction_valid},
       &{decode_pat_invInputs[0],
         decode_pat_invInputs[1],
         decode_pat_invInputs[2],
         io_instruction_bits_instruction[5],
         io_instruction_bits_instruction[6],
         io_instruction_bits_instruction[13],
         io_instruction_bits_instruction[14],
         io_instruction_valid}},
     |{&_decode_pat_andMatrixOutputs_T,
       &_decode_pat_andMatrixOutputs_T_1,
       &_decode_pat_andMatrixOutputs_T_2,
       &_decode_pat_andMatrixOutputs_T_3,
       &_decode_pat_andMatrixOutputs_T_6,
       &_decode_pat_andMatrixOutputs_T_9,
       &_decode_pat_andMatrixOutputs_T_18,
       &_decode_pat_andMatrixOutputs_T_19,
       &_decode_pat_andMatrixOutputs_T_21,
       &{decode_pat_invInputs[0],
         decode_pat_invInputs[1],
         io_instruction_bits_instruction[4],
         decode_pat_invInputs[3],
         decode_pat_invInputs[4],
         io_instruction_bits_instruction[12],
         decode_pat_invInputs[11],
         decode_pat_invInputs[23],
         decode_pat_invInputs[24],
         decode_pat_invInputs[25],
         decode_pat_invInputs[26],
         decode_pat_invInputs[27],
         decode_pat_invInputs[28],
         decode_pat_invInputs[29],
         io_instruction_valid},
       &_decode_pat_andMatrixOutputs_T_27,
       &{decode_pat_invInputs[0],
         decode_pat_invInputs[1],
         io_instruction_bits_instruction[4],
         decode_pat_invInputs[3],
         decode_pat_invInputs[4],
         io_instruction_bits_instruction[12],
         decode_pat_invInputs[11],
         io_instruction_bits_instruction[14],
         decode_pat_invInputs[23],
         decode_pat_invInputs[24],
         decode_pat_invInputs[25],
         decode_pat_invInputs[26],
         decode_pat_invInputs[27],
         decode_pat_invInputs[29],
         io_instruction_valid},
       &{decode_pat_invInputs[0],
         decode_pat_invInputs[1],
         io_instruction_bits_instruction[5],
         io_instruction_bits_instruction[6],
         io_instruction_bits_instruction[12],
         io_instruction_bits_instruction[14],
         io_instruction_valid},
       &{decode_pat_invInputs[0],
         decode_pat_invInputs[1],
         io_instruction_bits_instruction[5],
         io_instruction_bits_instruction[6],
         io_instruction_bits_instruction[13],
         io_instruction_bits_instruction[14],
         io_instruction_valid},
       &_decode_pat_andMatrixOutputs_T_42},
     &_decode_pat_andMatrixOutputs_T,
     &_decode_pat_andMatrixOutputs_T_22,
     |{&_decode_pat_andMatrixOutputs_T_1,
       &{decode_pat_invInputs[0],
         decode_pat_invInputs[1],
         decode_pat_invInputs[2],
         decode_pat_invInputs[3],
         decode_pat_invInputs[4],
         decode_pat_invInputs[10],
         decode_pat_invInputs[12],
         io_instruction_valid}},
     |{&_decode_pat_andMatrixOutputs_T_11,
       &{decode_pat_invInputs[0],
         decode_pat_invInputs[1],
         decode_pat_invInputs[2],
         io_instruction_bits_instruction[5],
         decode_pat_invInputs[4],
         decode_pat_invInputs[11],
         decode_pat_invInputs[12],
         io_instruction_valid}},
     |{&_decode_pat_andMatrixOutputs_T,
       &_decode_pat_andMatrixOutputs_T_7,
       &_decode_pat_andMatrixOutputs_T_22,
       &_decode_pat_andMatrixOutputs_T_42},
     |{&_decode_pat_andMatrixOutputs_T,
       &_decode_pat_andMatrixOutputs_T_7,
       &_decode_pat_andMatrixOutputs_T_22,
       &_decode_pat_andMatrixOutputs_T_26,
       &_decode_pat_andMatrixOutputs_T_28,
       &_decode_pat_andMatrixOutputs_T_42},
     |{&_decode_pat_andMatrixOutputs_T_1,
       &_decode_pat_andMatrixOutputs_T_2,
       &{decode_pat_invInputs[0],
         decode_pat_invInputs[1],
         decode_pat_invInputs[3],
         decode_pat_invInputs[4],
         decode_pat_invInputs[10],
         decode_pat_invInputs[12],
         io_instruction_valid},
       &_decode_pat_andMatrixOutputs_T_9,
       &_decode_pat_andMatrixOutputs_T_14,
       &_decode_pat_andMatrixOutputs_T_15,
       &{io_instruction_bits_instruction[2],
         decode_pat_invInputs[1],
         decode_pat_invInputs[2],
         io_instruction_bits_instruction[5],
         io_instruction_bits_instruction[6],
         decode_pat_invInputs[10],
         decode_pat_invInputs[11],
         decode_pat_invInputs[12],
         io_instruction_valid},
       &_decode_pat_andMatrixOutputs_T_21,
       &_decode_pat_andMatrixOutputs_T_23,
       &_decode_pat_andMatrixOutputs_T_27,
       &_decode_pat_andMatrixOutputs_T_34}};
  wire        _SUBTRACT_T_3 = io_instruction_bits_instruction[6:2] == 5'h4;
  wire        _SUBTRACT_T = io_instruction_bits_instruction[6:2] == 5'hC;
  `ifndef SYNTHESIS
    always @(posedge clock) begin
      if (~reset
          & ~(io_instruction_bits_instruction[6:2] == 5'h0
              | io_instruction_bits_instruction[6:2] == 5'h1
              | io_instruction_bits_instruction[6:2] == 5'h2
              | io_instruction_bits_instruction[6:2] == 5'h3 | _SUBTRACT_T_3
              | io_instruction_bits_instruction[6:2] == 5'h5
              | io_instruction_bits_instruction[6:2] == 5'h6
              | io_instruction_bits_instruction[6:2] == 5'h8
              | io_instruction_bits_instruction[6:2] == 5'h9
              | io_instruction_bits_instruction[6:2] == 5'hA
              | io_instruction_bits_instruction[6:2] == 5'hB | _SUBTRACT_T
              | io_instruction_bits_instruction[6:2] == 5'hD
              | io_instruction_bits_instruction[6:2] == 5'hE
              | io_instruction_bits_instruction[6:2] == 5'h10
              | io_instruction_bits_instruction[6:2] == 5'h11
              | io_instruction_bits_instruction[6:2] == 5'h12
              | io_instruction_bits_instruction[6:2] == 5'h13
              | io_instruction_bits_instruction[6:2] == 5'h14
              | io_instruction_bits_instruction[6:2] == 5'h16
              | io_instruction_bits_instruction[6:2] == 5'h18
              | io_instruction_bits_instruction[6:2] == 5'h19
              | io_instruction_bits_instruction[6:2] == 5'h1B
              | io_instruction_bits_instruction[6:2] == 5'h1C
              | io_instruction_bits_instruction[6:2] == 5'h1E)) begin
        if (`ASSERT_VERBOSE_COND_)
          $error("Assertion failed: Enum state must be valid, got %x!\n    at decoder.scala:202 assert(valid, \"Enum state must be valid, got %%%%x!\",instruction)\n",
                 io_instruction_bits_instruction);
        if (`STOP_COND_)
          $fatal;
      end
    end // always @(posedge)
  `endif // not def SYNTHESIS
  wire        _SUBTRACT_T_6 = io_instruction_bits_instruction[31:25] == 7'h20;
  wire        _GEN_0 = io_instruction_bits_instruction[14:12] == 3'h0;
  wire        _GEN_1 = io_instruction_bits_instruction[14:12] == 3'h1;
  wire        _GEN_2 = io_instruction_bits_instruction[14:12] == 3'h2;
  assign io_decoded_instruction_bits_RD = io_instruction_bits_instruction[11:7];
  assign io_decoded_instruction_bits_RD_valid = decode_pat[0];
  assign io_decoded_instruction_bits_RS1 = {2'h0, io_instruction_bits_instruction[19:15]};
  assign io_decoded_instruction_bits_RS1_valid = decode_pat[15];
  assign io_decoded_instruction_bits_RS2 = {2'h0, io_instruction_bits_instruction[24:20]};
  assign io_decoded_instruction_bits_RS2_valid = decode_pat[16];
  assign io_decoded_instruction_bits_IMM =
    io_instruction_bits_instruction[6:0] == 7'h63
      ? {{9{io_instruction_bits_instruction[31]}},
         io_instruction_bits_instruction[7],
         io_instruction_bits_instruction[30:25],
         io_instruction_bits_instruction[11:8],
         1'h0}
      : io_instruction_bits_instruction[6:0] == 7'h6F
          ? {io_instruction_bits_instruction[31],
             io_instruction_bits_instruction[19:12],
             io_instruction_bits_instruction[20],
             io_instruction_bits_instruction[30:21],
             1'h0}
          : io_instruction_bits_instruction[6:0] == 7'h13
            | io_instruction_bits_instruction[6:0] == 7'h3
            | io_instruction_bits_instruction[6:0] == 7'h67
            | io_instruction_bits_instruction[6:0] == 7'h73
              ? {_GEN, io_instruction_bits_instruction[31:20]}
              : io_instruction_bits_instruction[6:0] == 7'h23
                  ? {_GEN,
                     io_instruction_bits_instruction[31:25],
                     io_instruction_bits_instruction[11:7]}
                  : io_instruction_bits_instruction[6:0] == 7'h17
                    | io_instruction_bits_instruction[6:0] == 7'h37
                      ? {io_instruction_bits_instruction[31],
                         io_instruction_bits_instruction[31:12]}
                      : 21'h0;
  assign io_decoded_instruction_bits_FUNCT3 = io_instruction_bits_instruction[14:12];
  assign io_decoded_instruction_bits_packet_index = io_instruction_bits_packet_index[1:0];
  assign io_decoded_instruction_bits_instructionType =
    io_instruction_bits_instruction[6:2];
  assign io_decoded_instruction_bits_needs_ALU = decode_pat[14];
  assign io_decoded_instruction_bits_needs_branch_unit = decode_pat[13];
  assign io_decoded_instruction_bits_needs_CSRs = decode_pat[12];
  assign io_decoded_instruction_bits_needs_memory = decode_pat[11];
  assign io_decoded_instruction_bits_needs_mul = decode_pat[10];
  assign io_decoded_instruction_bits_needs_div = decode_pat[9];
  assign io_decoded_instruction_bits_SUBTRACT =
    _SUBTRACT_T & _SUBTRACT_T_6 | _SUBTRACT_T_3
    & io_instruction_bits_instruction[14:12] == 3'h5 & _SUBTRACT_T_6;
  assign io_decoded_instruction_bits_MULTIPLY = decode_pat[10];
  assign io_decoded_instruction_bits_FENCE = decode_pat[2];
  assign io_decoded_instruction_bits_FLUSH = decode_pat[1];
  assign io_decoded_instruction_bits_MRET = decode_pat[6];
  assign io_decoded_instruction_bits_ECALL = decode_pat[5];
  assign io_decoded_instruction_bits_IS_IMM = decode_pat[7];
  assign io_decoded_instruction_bits_mem_signed = _GEN_0 | _GEN_1 | _GEN_2;
  assign io_decoded_instruction_bits_memory_type =
    decode_pat[4] ? 2'h1 : {decode_pat[3], 1'h0};
  assign io_decoded_instruction_bits_access_width =
    _GEN_0
      ? 2'h1
      : _GEN_1
          ? 2'h2
          : _GEN_2 ? 2'h3 : io_instruction_bits_instruction[14:12] == 3'h4 ? 2'h1 : 2'h2;
endmodule

