// Generated by CIRCT firtool-1.62.0
module branch_decoder(
  input  [31:0] io_fetch_PC,
                io_instruction,
  input         io_valid,
                io_prediction_bits_hit,
  input  [31:0] io_prediction_bits_target,
  input  [3:0]  io_prediction_bits_br_mask,
  input  [31:0] io_RAS_read_ret_addr,
  output        io_T_NT,
                io_metadata_JAL,
                io_metadata_JALR,
                io_metadata_BR,
                io_metadata_Call,
                io_metadata_Ret,
  output [31:0] io_metadata_Imm,
                io_metadata_instruction_PC,
                io_metadata_RAS,
                io_metadata_BTB_target
);

  wire [31:0] imm;
  wire        JAL = io_instruction[6:0] == 7'h6F;
  wire        JALR = io_instruction[6:0] == 7'h67;
  wire        BR = io_instruction[6:0] == 7'h63;
  wire        _Call_T_2 = io_instruction[11:7] == 5'h1;
  wire        Ret = JALR & io_instruction[19:15] == 5'h1 & imm == 32'h0;
  assign imm =
    BR
      ? {{19{io_instruction[31]}}, io_instruction[31:25], io_instruction[11:7], 1'h0}
      : JAL
          ? {{12{io_instruction[31]}},
             io_instruction[19:12],
             io_instruction[20],
             io_instruction[30:21],
             1'h0}
          : JALR ? io_instruction : 32'h0;
  assign io_T_NT =
    JAL
      ? io_valid
      : JALR
          ? io_valid & (Ret | io_prediction_bits_hit & io_prediction_bits_br_mask[0])
          : BR & io_valid & io_prediction_bits_br_mask[0];
  assign io_metadata_JAL = JAL;
  assign io_metadata_JALR = JALR;
  assign io_metadata_BR = BR;
  assign io_metadata_Call = JAL & _Call_T_2 | JALR & _Call_T_2;
  assign io_metadata_Ret = Ret;
  assign io_metadata_Imm = imm;
  assign io_metadata_instruction_PC = io_fetch_PC;
  assign io_metadata_RAS = io_RAS_read_ret_addr;
  assign io_metadata_BTB_target = io_prediction_bits_target;
endmodule

module branch_decoder_1(
  input  [31:0] io_fetch_PC,
                io_instruction,
  input         io_valid,
                io_prediction_bits_hit,
  input  [31:0] io_prediction_bits_target,
  input  [3:0]  io_prediction_bits_br_mask,
  input  [31:0] io_RAS_read_ret_addr,
  output        io_T_NT,
                io_metadata_JAL,
                io_metadata_JALR,
                io_metadata_BR,
                io_metadata_Call,
                io_metadata_Ret,
  output [31:0] io_metadata_Imm,
                io_metadata_instruction_PC,
                io_metadata_RAS,
                io_metadata_BTB_target
);

  wire [31:0] imm;
  wire        JAL = io_instruction[6:0] == 7'h6F;
  wire        JALR = io_instruction[6:0] == 7'h67;
  wire        BR = io_instruction[6:0] == 7'h63;
  wire        _Call_T_2 = io_instruction[11:7] == 5'h1;
  wire        Ret = JALR & io_instruction[19:15] == 5'h1 & imm == 32'h0;
  assign imm =
    BR
      ? {{19{io_instruction[31]}}, io_instruction[31:25], io_instruction[11:7], 1'h0}
      : JAL
          ? {{12{io_instruction[31]}},
             io_instruction[19:12],
             io_instruction[20],
             io_instruction[30:21],
             1'h0}
          : JALR ? io_instruction : 32'h0;
  assign io_T_NT =
    JAL
      ? io_valid
      : JALR
          ? io_valid & (Ret | io_prediction_bits_hit & io_prediction_bits_br_mask[1])
          : BR & io_valid & io_prediction_bits_br_mask[1];
  assign io_metadata_JAL = JAL;
  assign io_metadata_JALR = JALR;
  assign io_metadata_BR = BR;
  assign io_metadata_Call = JAL & _Call_T_2 | JALR & _Call_T_2;
  assign io_metadata_Ret = Ret;
  assign io_metadata_Imm = imm;
  assign io_metadata_instruction_PC = io_fetch_PC + 32'h4;
  assign io_metadata_RAS = io_RAS_read_ret_addr;
  assign io_metadata_BTB_target = io_prediction_bits_target;
endmodule

module branch_decoder_2(
  input  [31:0] io_fetch_PC,
                io_instruction,
  input         io_valid,
                io_prediction_bits_hit,
  input  [31:0] io_prediction_bits_target,
  input  [3:0]  io_prediction_bits_br_mask,
  input  [31:0] io_RAS_read_ret_addr,
  output        io_T_NT,
                io_metadata_JAL,
                io_metadata_JALR,
                io_metadata_BR,
                io_metadata_Call,
                io_metadata_Ret,
  output [31:0] io_metadata_Imm,
                io_metadata_instruction_PC,
                io_metadata_RAS,
                io_metadata_BTB_target
);

  wire [31:0] imm;
  wire        JAL = io_instruction[6:0] == 7'h6F;
  wire        JALR = io_instruction[6:0] == 7'h67;
  wire        BR = io_instruction[6:0] == 7'h63;
  wire        _Call_T_2 = io_instruction[11:7] == 5'h1;
  wire        Ret = JALR & io_instruction[19:15] == 5'h1 & imm == 32'h0;
  assign imm =
    BR
      ? {{19{io_instruction[31]}}, io_instruction[31:25], io_instruction[11:7], 1'h0}
      : JAL
          ? {{12{io_instruction[31]}},
             io_instruction[19:12],
             io_instruction[20],
             io_instruction[30:21],
             1'h0}
          : JALR ? io_instruction : 32'h0;
  assign io_T_NT =
    JAL
      ? io_valid
      : JALR
          ? io_valid & (Ret | io_prediction_bits_hit & io_prediction_bits_br_mask[2])
          : BR & io_valid & io_prediction_bits_br_mask[2];
  assign io_metadata_JAL = JAL;
  assign io_metadata_JALR = JALR;
  assign io_metadata_BR = BR;
  assign io_metadata_Call = JAL & _Call_T_2 | JALR & _Call_T_2;
  assign io_metadata_Ret = Ret;
  assign io_metadata_Imm = imm;
  assign io_metadata_instruction_PC = io_fetch_PC + 32'h8;
  assign io_metadata_RAS = io_RAS_read_ret_addr;
  assign io_metadata_BTB_target = io_prediction_bits_target;
endmodule

module branch_decoder_3(
  input  [31:0] io_fetch_PC,
                io_instruction,
  input         io_valid,
                io_prediction_bits_hit,
  input  [31:0] io_prediction_bits_target,
  input  [3:0]  io_prediction_bits_br_mask,
  input  [31:0] io_RAS_read_ret_addr,
  output        io_T_NT,
                io_metadata_JAL,
                io_metadata_JALR,
                io_metadata_BR,
                io_metadata_Call,
                io_metadata_Ret,
  output [31:0] io_metadata_Imm,
                io_metadata_instruction_PC,
                io_metadata_RAS,
                io_metadata_BTB_target
);

  wire [31:0] imm;
  wire        JAL = io_instruction[6:0] == 7'h6F;
  wire        JALR = io_instruction[6:0] == 7'h67;
  wire        BR = io_instruction[6:0] == 7'h63;
  wire        _Call_T_2 = io_instruction[11:7] == 5'h1;
  wire        Ret = JALR & io_instruction[19:15] == 5'h1 & imm == 32'h0;
  assign imm =
    BR
      ? {{19{io_instruction[31]}}, io_instruction[31:25], io_instruction[11:7], 1'h0}
      : JAL
          ? {{12{io_instruction[31]}},
             io_instruction[19:12],
             io_instruction[20],
             io_instruction[30:21],
             1'h0}
          : JALR ? io_instruction : 32'h0;
  assign io_T_NT =
    JAL
      ? io_valid
      : JALR
          ? io_valid & (Ret | io_prediction_bits_hit & io_prediction_bits_br_mask[3])
          : BR & io_valid & io_prediction_bits_br_mask[3];
  assign io_metadata_JAL = JAL;
  assign io_metadata_JALR = JALR;
  assign io_metadata_BR = BR;
  assign io_metadata_Call = JAL & _Call_T_2 | JALR & _Call_T_2;
  assign io_metadata_Ret = Ret;
  assign io_metadata_Imm = imm;
  assign io_metadata_instruction_PC = io_fetch_PC + 32'hC;
  assign io_metadata_RAS = io_RAS_read_ret_addr;
  assign io_metadata_BTB_target = io_prediction_bits_target;
endmodule

module decoder_validator(
  input  [3:0] io_instruction_T_NT_mask,
  output [3:0] io_instruction_validity
);

  wire [3:0][3:0] _GEN = '{4'hF, 4'h7, 4'h3, 4'h1};
  assign io_instruction_validity =
    _GEN[io_instruction_T_NT_mask[0]
           ? 2'h0
           : io_instruction_T_NT_mask[1] ? 2'h1 : {1'h1, ~(io_instruction_T_NT_mask[2])}];
endmodule

module predecoder(
  input         clock,
                reset,
  output        io_prediction_ready,
  input         io_prediction_valid,
                io_prediction_bits_hit,
  input  [31:0] io_prediction_bits_target,
  input  [1:0]  io_prediction_bits_br_type,
  input  [3:0]  io_prediction_bits_br_mask,
  input  [15:0] io_prediction_bits_GHR,
  input         io_prediction_bits_T_NT,
  output        io_fetch_packet_ready,
  input         io_fetch_packet_valid,
  input  [31:0] io_fetch_packet_bits_fetch_PC,
  input         io_fetch_packet_bits_valid_bits_0,
                io_fetch_packet_bits_valid_bits_1,
                io_fetch_packet_bits_valid_bits_2,
                io_fetch_packet_bits_valid_bits_3,
  input  [31:0] io_fetch_packet_bits_instructions_0_instruction,
  input  [3:0]  io_fetch_packet_bits_instructions_0_packet_index,
  input  [5:0]  io_fetch_packet_bits_instructions_0_ROB_index,
  input  [31:0] io_fetch_packet_bits_instructions_1_instruction,
  input  [3:0]  io_fetch_packet_bits_instructions_1_packet_index,
  input  [5:0]  io_fetch_packet_bits_instructions_1_ROB_index,
  input  [31:0] io_fetch_packet_bits_instructions_2_instruction,
  input  [3:0]  io_fetch_packet_bits_instructions_2_packet_index,
  input  [5:0]  io_fetch_packet_bits_instructions_2_ROB_index,
  input  [31:0] io_fetch_packet_bits_instructions_3_instruction,
  input  [3:0]  io_fetch_packet_bits_instructions_3_packet_index,
  input  [5:0]  io_fetch_packet_bits_instructions_3_ROB_index,
  input  [6:0]  io_RAS_read_NEXT,
                io_RAS_read_TOS,
  input  [31:0] io_RAS_read_ret_addr,
  output        io_kill,
  input         io_revert_ready,
  output        io_revert_valid,
  output [15:0] io_revert_bits_GHR,
  output [31:0] io_revert_bits_PC,
  input         io_final_fetch_packet_ready,
  output        io_final_fetch_packet_valid,
  output [31:0] io_final_fetch_packet_bits_fetch_PC,
  output        io_final_fetch_packet_bits_valid_bits_0,
                io_final_fetch_packet_bits_valid_bits_1,
                io_final_fetch_packet_bits_valid_bits_2,
                io_final_fetch_packet_bits_valid_bits_3,
  output [31:0] io_final_fetch_packet_bits_instructions_0_instruction,
  output [3:0]  io_final_fetch_packet_bits_instructions_0_packet_index,
  output [5:0]  io_final_fetch_packet_bits_instructions_0_ROB_index,
  output [31:0] io_final_fetch_packet_bits_instructions_1_instruction,
  output [3:0]  io_final_fetch_packet_bits_instructions_1_packet_index,
  output [5:0]  io_final_fetch_packet_bits_instructions_1_ROB_index,
  output [31:0] io_final_fetch_packet_bits_instructions_2_instruction,
  output [3:0]  io_final_fetch_packet_bits_instructions_2_packet_index,
  output [5:0]  io_final_fetch_packet_bits_instructions_2_ROB_index,
  output [31:0] io_final_fetch_packet_bits_instructions_3_instruction,
  output [3:0]  io_final_fetch_packet_bits_instructions_3_packet_index,
  output [5:0]  io_final_fetch_packet_bits_instructions_3_ROB_index,
  output [31:0] io_RAS_update_call_addr,
  output        io_RAS_update_call,
                io_RAS_update_ret,
  input         io_predictions_0_ready,
  output        io_predictions_0_valid,
                io_predictions_0_bits_valid,
  output [31:0] io_predictions_0_bits_instruction_PC,
  output        io_predictions_0_bits_is_misprediction,
  output [31:0] io_predictions_0_bits_predicted_expected_PC,
  output [15:0] io_predictions_0_bits_GHR,
  output [6:0]  io_predictions_0_bits_NEXT,
                io_predictions_0_bits_TOS,
  output [3:0]  io_predictions_0_bits_RAT_IDX,
  input         io_predictions_1_ready,
  output        io_predictions_1_valid,
                io_predictions_1_bits_valid,
  output [31:0] io_predictions_1_bits_instruction_PC,
  output        io_predictions_1_bits_is_misprediction,
  output [31:0] io_predictions_1_bits_predicted_expected_PC,
  output [15:0] io_predictions_1_bits_GHR,
  output [6:0]  io_predictions_1_bits_NEXT,
                io_predictions_1_bits_TOS,
  output [3:0]  io_predictions_1_bits_RAT_IDX,
  input         io_predictions_2_ready,
  output        io_predictions_2_valid,
                io_predictions_2_bits_valid,
  output [31:0] io_predictions_2_bits_instruction_PC,
  output        io_predictions_2_bits_is_misprediction,
  output [31:0] io_predictions_2_bits_predicted_expected_PC,
  output [15:0] io_predictions_2_bits_GHR,
  output [6:0]  io_predictions_2_bits_NEXT,
                io_predictions_2_bits_TOS,
  output [3:0]  io_predictions_2_bits_RAT_IDX,
  input         io_predictions_3_ready,
  output        io_predictions_3_valid,
                io_predictions_3_bits_valid,
  output [31:0] io_predictions_3_bits_instruction_PC,
  output        io_predictions_3_bits_is_misprediction,
  output [31:0] io_predictions_3_bits_predicted_expected_PC,
  output [15:0] io_predictions_3_bits_GHR,
  output [6:0]  io_predictions_3_bits_NEXT,
                io_predictions_3_bits_TOS,
  output [3:0]  io_predictions_3_bits_RAT_IDX
);

  wire [31:0] PC_expected;
  wire [3:0]  _decoder_validator_io_instruction_validity;
  wire        _decoders_3_io_T_NT;
  wire        _decoders_3_io_metadata_JAL;
  wire        _decoders_3_io_metadata_JALR;
  wire        _decoders_3_io_metadata_BR;
  wire        _decoders_3_io_metadata_Call;
  wire        _decoders_3_io_metadata_Ret;
  wire [31:0] _decoders_3_io_metadata_Imm;
  wire [31:0] _decoders_3_io_metadata_instruction_PC;
  wire [31:0] _decoders_3_io_metadata_RAS;
  wire [31:0] _decoders_3_io_metadata_BTB_target;
  wire        _decoders_2_io_T_NT;
  wire        _decoders_2_io_metadata_JAL;
  wire        _decoders_2_io_metadata_JALR;
  wire        _decoders_2_io_metadata_BR;
  wire        _decoders_2_io_metadata_Call;
  wire        _decoders_2_io_metadata_Ret;
  wire [31:0] _decoders_2_io_metadata_Imm;
  wire [31:0] _decoders_2_io_metadata_instruction_PC;
  wire [31:0] _decoders_2_io_metadata_RAS;
  wire [31:0] _decoders_2_io_metadata_BTB_target;
  wire        _decoders_1_io_T_NT;
  wire        _decoders_1_io_metadata_JAL;
  wire        _decoders_1_io_metadata_JALR;
  wire        _decoders_1_io_metadata_BR;
  wire        _decoders_1_io_metadata_Call;
  wire        _decoders_1_io_metadata_Ret;
  wire [31:0] _decoders_1_io_metadata_Imm;
  wire [31:0] _decoders_1_io_metadata_instruction_PC;
  wire [31:0] _decoders_1_io_metadata_RAS;
  wire [31:0] _decoders_1_io_metadata_BTB_target;
  wire        _decoders_0_io_T_NT;
  wire        _decoders_0_io_metadata_JAL;
  wire        _decoders_0_io_metadata_JALR;
  wire        _decoders_0_io_metadata_BR;
  wire        _decoders_0_io_metadata_Call;
  wire        _decoders_0_io_metadata_Ret;
  wire [31:0] _decoders_0_io_metadata_Imm;
  wire [31:0] _decoders_0_io_metadata_instruction_PC;
  wire [31:0] _decoders_0_io_metadata_RAS;
  wire [31:0] _decoders_0_io_metadata_BTB_target;
  wire        inputs_valid = io_fetch_packet_valid & io_prediction_valid;
  reg         metadata_reg_0_JAL;
  reg         metadata_reg_0_JALR;
  reg         metadata_reg_0_BR;
  reg         metadata_reg_0_Call;
  reg         metadata_reg_0_Ret;
  reg  [31:0] metadata_reg_0_Imm;
  reg  [31:0] metadata_reg_0_instruction_PC;
  reg  [31:0] metadata_reg_0_RAS;
  reg  [31:0] metadata_reg_0_BTB_target;
  reg         metadata_reg_1_JAL;
  reg         metadata_reg_1_JALR;
  reg         metadata_reg_1_BR;
  reg         metadata_reg_1_Call;
  reg         metadata_reg_1_Ret;
  reg  [31:0] metadata_reg_1_Imm;
  reg  [31:0] metadata_reg_1_instruction_PC;
  reg  [31:0] metadata_reg_1_RAS;
  reg  [31:0] metadata_reg_1_BTB_target;
  reg         metadata_reg_2_JAL;
  reg         metadata_reg_2_JALR;
  reg         metadata_reg_2_BR;
  reg         metadata_reg_2_Call;
  reg         metadata_reg_2_Ret;
  reg  [31:0] metadata_reg_2_Imm;
  reg  [31:0] metadata_reg_2_instruction_PC;
  reg  [31:0] metadata_reg_2_RAS;
  reg  [31:0] metadata_reg_2_BTB_target;
  reg         metadata_reg_3_JAL;
  reg         metadata_reg_3_JALR;
  reg         metadata_reg_3_BR;
  reg         metadata_reg_3_Call;
  reg         metadata_reg_3_Ret;
  reg  [31:0] metadata_reg_3_Imm;
  reg  [31:0] metadata_reg_3_instruction_PC;
  reg  [31:0] metadata_reg_3_RAS;
  reg  [31:0] metadata_reg_3_BTB_target;
  reg         T_NT_reg_0;
  reg         T_NT_reg_1;
  reg         T_NT_reg_2;
  reg         T_NT_reg_3;
  reg  [15:0] GHR_reg;
  wire        use_RAS =
    T_NT_reg_3
      ? metadata_reg_3_Ret
      : T_NT_reg_2
          ? metadata_reg_2_Ret
          : T_NT_reg_1 ? metadata_reg_1_Ret : T_NT_reg_0 & metadata_reg_0_Ret;
  wire [31:0] metadata_out_instruction_PC =
    T_NT_reg_3
      ? metadata_reg_3_instruction_PC
      : T_NT_reg_2
          ? metadata_reg_2_instruction_PC
          : T_NT_reg_1
              ? metadata_reg_1_instruction_PC
              : T_NT_reg_0 ? metadata_reg_0_instruction_PC : 32'h0;
  reg  [31:0] PC_next_reg;
  wire        PC_mismatch = PC_expected != io_fetch_packet_bits_fetch_PC & inputs_valid;
  reg  [31:0] PC_next_REG;
  wire [31:0] PC_next =
    (T_NT_reg_3
       ? metadata_reg_3_JALR
       : T_NT_reg_2
           ? metadata_reg_2_JALR
           : T_NT_reg_1 ? metadata_reg_1_JALR : T_NT_reg_0 & metadata_reg_0_JALR)
    & ~use_RAS
      ? (T_NT_reg_3
           ? metadata_reg_3_BTB_target
           : T_NT_reg_2
               ? metadata_reg_2_BTB_target
               : T_NT_reg_1
                   ? metadata_reg_1_BTB_target
                   : T_NT_reg_0 ? metadata_reg_0_BTB_target : 32'h0)
      : use_RAS
          ? (T_NT_reg_3
               ? metadata_reg_3_RAS
               : T_NT_reg_2
                   ? metadata_reg_2_RAS
                   : T_NT_reg_1
                       ? metadata_reg_1_RAS
                       : T_NT_reg_0 ? metadata_reg_0_RAS : 32'h0)
          : (T_NT_reg_3
               ? metadata_reg_3_BR
               : T_NT_reg_2
                   ? metadata_reg_2_BR
                   : T_NT_reg_1 ? metadata_reg_1_BR : T_NT_reg_0 & metadata_reg_0_BR)
            | (T_NT_reg_3
                 ? metadata_reg_3_JAL
                 : T_NT_reg_2
                     ? metadata_reg_2_JAL
                     : T_NT_reg_1 ? metadata_reg_1_JAL : T_NT_reg_0 & metadata_reg_0_JAL)
              ? metadata_out_instruction_PC
                + (T_NT_reg_3
                     ? metadata_reg_3_Imm
                     : T_NT_reg_2
                         ? metadata_reg_2_Imm
                         : T_NT_reg_1
                             ? metadata_reg_1_Imm
                             : T_NT_reg_0 ? metadata_reg_0_Imm : 32'h0)
              : PC_next_REG;
  reg         PC_next_reg_REG;
  reg         PC_expected_REG;
  assign PC_expected = PC_expected_REG ? PC_next : PC_next_reg;
  reg  [31:0] io_final_fetch_packet_bits_instructions_0_REG_instruction;
  reg  [3:0]  io_final_fetch_packet_bits_instructions_0_REG_packet_index;
  reg  [5:0]  io_final_fetch_packet_bits_instructions_0_REG_ROB_index;
  reg         io_final_fetch_packet_bits_valid_bits_0_REG;
  reg         io_final_fetch_packet_bits_valid_bits_0_REG_1;
  wire        io_final_fetch_packet_bits_valid_bits_0_0 =
    io_final_fetch_packet_bits_valid_bits_0_REG
    & io_final_fetch_packet_bits_valid_bits_0_REG_1;
  reg  [31:0] io_final_fetch_packet_bits_instructions_1_REG_instruction;
  reg  [3:0]  io_final_fetch_packet_bits_instructions_1_REG_packet_index;
  reg  [5:0]  io_final_fetch_packet_bits_instructions_1_REG_ROB_index;
  reg         io_final_fetch_packet_bits_valid_bits_1_REG;
  reg         io_final_fetch_packet_bits_valid_bits_1_REG_1;
  wire        io_final_fetch_packet_bits_valid_bits_1_0 =
    io_final_fetch_packet_bits_valid_bits_1_REG
    & io_final_fetch_packet_bits_valid_bits_1_REG_1;
  reg  [31:0] io_final_fetch_packet_bits_instructions_2_REG_instruction;
  reg  [3:0]  io_final_fetch_packet_bits_instructions_2_REG_packet_index;
  reg  [5:0]  io_final_fetch_packet_bits_instructions_2_REG_ROB_index;
  reg         io_final_fetch_packet_bits_valid_bits_2_REG;
  reg         io_final_fetch_packet_bits_valid_bits_2_REG_1;
  wire        io_final_fetch_packet_bits_valid_bits_2_0 =
    io_final_fetch_packet_bits_valid_bits_2_REG
    & io_final_fetch_packet_bits_valid_bits_2_REG_1;
  reg  [31:0] io_final_fetch_packet_bits_instructions_3_REG_instruction;
  reg  [3:0]  io_final_fetch_packet_bits_instructions_3_REG_packet_index;
  reg  [5:0]  io_final_fetch_packet_bits_instructions_3_REG_ROB_index;
  reg         io_final_fetch_packet_bits_valid_bits_3_REG;
  reg         io_final_fetch_packet_bits_valid_bits_3_REG_1;
  wire        io_final_fetch_packet_bits_valid_bits_3_0 =
    io_final_fetch_packet_bits_valid_bits_3_REG
    & io_final_fetch_packet_bits_valid_bits_3_REG_1;
  reg  [6:0]  io_predictions_0_bits_NEXT_REG;
  reg  [6:0]  io_predictions_0_bits_TOS_REG;
  reg  [6:0]  io_predictions_1_bits_NEXT_REG;
  reg  [6:0]  io_predictions_1_bits_TOS_REG;
  reg  [6:0]  io_predictions_2_bits_NEXT_REG;
  reg  [6:0]  io_predictions_2_bits_TOS_REG;
  reg  [6:0]  io_predictions_3_bits_NEXT_REG;
  reg  [6:0]  io_predictions_3_bits_TOS_REG;
  always @(posedge clock) begin
    automatic logic stage_1_valid = io_fetch_packet_valid & ~PC_mismatch;
    metadata_reg_0_JAL <= _decoders_0_io_metadata_JAL;
    metadata_reg_0_JALR <= _decoders_0_io_metadata_JALR;
    metadata_reg_0_BR <= _decoders_0_io_metadata_BR;
    metadata_reg_0_Call <= _decoders_0_io_metadata_Call;
    metadata_reg_0_Ret <= _decoders_0_io_metadata_Ret;
    metadata_reg_0_Imm <= _decoders_0_io_metadata_Imm;
    metadata_reg_0_instruction_PC <= _decoders_0_io_metadata_instruction_PC;
    metadata_reg_0_RAS <= _decoders_0_io_metadata_RAS;
    metadata_reg_0_BTB_target <= _decoders_0_io_metadata_BTB_target;
    metadata_reg_1_JAL <= _decoders_1_io_metadata_JAL;
    metadata_reg_1_JALR <= _decoders_1_io_metadata_JALR;
    metadata_reg_1_BR <= _decoders_1_io_metadata_BR;
    metadata_reg_1_Call <= _decoders_1_io_metadata_Call;
    metadata_reg_1_Ret <= _decoders_1_io_metadata_Ret;
    metadata_reg_1_Imm <= _decoders_1_io_metadata_Imm;
    metadata_reg_1_instruction_PC <= _decoders_1_io_metadata_instruction_PC;
    metadata_reg_1_RAS <= _decoders_1_io_metadata_RAS;
    metadata_reg_1_BTB_target <= _decoders_1_io_metadata_BTB_target;
    metadata_reg_2_JAL <= _decoders_2_io_metadata_JAL;
    metadata_reg_2_JALR <= _decoders_2_io_metadata_JALR;
    metadata_reg_2_BR <= _decoders_2_io_metadata_BR;
    metadata_reg_2_Call <= _decoders_2_io_metadata_Call;
    metadata_reg_2_Ret <= _decoders_2_io_metadata_Ret;
    metadata_reg_2_Imm <= _decoders_2_io_metadata_Imm;
    metadata_reg_2_instruction_PC <= _decoders_2_io_metadata_instruction_PC;
    metadata_reg_2_RAS <= _decoders_2_io_metadata_RAS;
    metadata_reg_2_BTB_target <= _decoders_2_io_metadata_BTB_target;
    metadata_reg_3_JAL <= _decoders_3_io_metadata_JAL;
    metadata_reg_3_JALR <= _decoders_3_io_metadata_JALR;
    metadata_reg_3_BR <= _decoders_3_io_metadata_BR;
    metadata_reg_3_Call <= _decoders_3_io_metadata_Call;
    metadata_reg_3_Ret <= _decoders_3_io_metadata_Ret;
    metadata_reg_3_Imm <= _decoders_3_io_metadata_Imm;
    metadata_reg_3_instruction_PC <= _decoders_3_io_metadata_instruction_PC;
    metadata_reg_3_RAS <= _decoders_3_io_metadata_RAS;
    metadata_reg_3_BTB_target <= _decoders_3_io_metadata_BTB_target;
    T_NT_reg_0 <= _decoders_0_io_T_NT;
    T_NT_reg_1 <= _decoders_1_io_T_NT;
    T_NT_reg_2 <= _decoders_2_io_T_NT;
    T_NT_reg_3 <= _decoders_3_io_T_NT;
    GHR_reg <= io_prediction_bits_GHR;
    PC_next_REG <= io_fetch_packet_bits_fetch_PC + 32'h10;
    PC_next_reg_REG <= stage_1_valid;
    PC_expected_REG <= stage_1_valid;
    io_final_fetch_packet_bits_instructions_0_REG_instruction <=
      io_fetch_packet_bits_instructions_0_instruction;
    io_final_fetch_packet_bits_instructions_0_REG_packet_index <=
      io_fetch_packet_bits_instructions_0_packet_index;
    io_final_fetch_packet_bits_instructions_0_REG_ROB_index <=
      io_fetch_packet_bits_instructions_0_ROB_index;
    io_final_fetch_packet_bits_valid_bits_0_REG <=
      _decoder_validator_io_instruction_validity[0];
    io_final_fetch_packet_bits_valid_bits_0_REG_1 <= inputs_valid;
    io_final_fetch_packet_bits_instructions_1_REG_instruction <=
      io_fetch_packet_bits_instructions_1_instruction;
    io_final_fetch_packet_bits_instructions_1_REG_packet_index <=
      io_fetch_packet_bits_instructions_1_packet_index;
    io_final_fetch_packet_bits_instructions_1_REG_ROB_index <=
      io_fetch_packet_bits_instructions_1_ROB_index;
    io_final_fetch_packet_bits_valid_bits_1_REG <=
      _decoder_validator_io_instruction_validity[1];
    io_final_fetch_packet_bits_valid_bits_1_REG_1 <= inputs_valid;
    io_final_fetch_packet_bits_instructions_2_REG_instruction <=
      io_fetch_packet_bits_instructions_2_instruction;
    io_final_fetch_packet_bits_instructions_2_REG_packet_index <=
      io_fetch_packet_bits_instructions_2_packet_index;
    io_final_fetch_packet_bits_instructions_2_REG_ROB_index <=
      io_fetch_packet_bits_instructions_2_ROB_index;
    io_final_fetch_packet_bits_valid_bits_2_REG <=
      _decoder_validator_io_instruction_validity[2];
    io_final_fetch_packet_bits_valid_bits_2_REG_1 <= inputs_valid;
    io_final_fetch_packet_bits_instructions_3_REG_instruction <=
      io_fetch_packet_bits_instructions_3_instruction;
    io_final_fetch_packet_bits_instructions_3_REG_packet_index <=
      io_fetch_packet_bits_instructions_3_packet_index;
    io_final_fetch_packet_bits_instructions_3_REG_ROB_index <=
      io_fetch_packet_bits_instructions_3_ROB_index;
    io_final_fetch_packet_bits_valid_bits_3_REG <=
      _decoder_validator_io_instruction_validity[3];
    io_final_fetch_packet_bits_valid_bits_3_REG_1 <= inputs_valid;
    io_predictions_0_bits_NEXT_REG <= io_RAS_read_NEXT;
    io_predictions_0_bits_TOS_REG <= io_RAS_read_TOS;
    io_predictions_1_bits_NEXT_REG <= io_RAS_read_NEXT;
    io_predictions_1_bits_TOS_REG <= io_RAS_read_TOS;
    io_predictions_2_bits_NEXT_REG <= io_RAS_read_NEXT;
    io_predictions_2_bits_TOS_REG <= io_RAS_read_TOS;
    io_predictions_3_bits_NEXT_REG <= io_RAS_read_NEXT;
    io_predictions_3_bits_TOS_REG <= io_RAS_read_TOS;
    if (reset)
      PC_next_reg <= 32'h0;
    else if (PC_next_reg_REG)
      PC_next_reg <= PC_next;
  end // always @(posedge)
  branch_decoder decoders_0 (
    .io_fetch_PC                (io_fetch_packet_bits_fetch_PC),
    .io_instruction             (io_fetch_packet_bits_instructions_0_instruction),
    .io_valid                   (io_fetch_packet_bits_valid_bits_0),
    .io_prediction_bits_hit     (io_prediction_bits_hit),
    .io_prediction_bits_target  (io_prediction_bits_target),
    .io_prediction_bits_br_mask (io_prediction_bits_br_mask),
    .io_RAS_read_ret_addr       (io_RAS_read_ret_addr),
    .io_T_NT                    (_decoders_0_io_T_NT),
    .io_metadata_JAL            (_decoders_0_io_metadata_JAL),
    .io_metadata_JALR           (_decoders_0_io_metadata_JALR),
    .io_metadata_BR             (_decoders_0_io_metadata_BR),
    .io_metadata_Call           (_decoders_0_io_metadata_Call),
    .io_metadata_Ret            (_decoders_0_io_metadata_Ret),
    .io_metadata_Imm            (_decoders_0_io_metadata_Imm),
    .io_metadata_instruction_PC (_decoders_0_io_metadata_instruction_PC),
    .io_metadata_RAS            (_decoders_0_io_metadata_RAS),
    .io_metadata_BTB_target     (_decoders_0_io_metadata_BTB_target)
  );
  branch_decoder_1 decoders_1 (
    .io_fetch_PC                (io_fetch_packet_bits_fetch_PC),
    .io_instruction             (io_fetch_packet_bits_instructions_1_instruction),
    .io_valid                   (io_fetch_packet_bits_valid_bits_1),
    .io_prediction_bits_hit     (io_prediction_bits_hit),
    .io_prediction_bits_target  (io_prediction_bits_target),
    .io_prediction_bits_br_mask (io_prediction_bits_br_mask),
    .io_RAS_read_ret_addr       (io_RAS_read_ret_addr),
    .io_T_NT                    (_decoders_1_io_T_NT),
    .io_metadata_JAL            (_decoders_1_io_metadata_JAL),
    .io_metadata_JALR           (_decoders_1_io_metadata_JALR),
    .io_metadata_BR             (_decoders_1_io_metadata_BR),
    .io_metadata_Call           (_decoders_1_io_metadata_Call),
    .io_metadata_Ret            (_decoders_1_io_metadata_Ret),
    .io_metadata_Imm            (_decoders_1_io_metadata_Imm),
    .io_metadata_instruction_PC (_decoders_1_io_metadata_instruction_PC),
    .io_metadata_RAS            (_decoders_1_io_metadata_RAS),
    .io_metadata_BTB_target     (_decoders_1_io_metadata_BTB_target)
  );
  branch_decoder_2 decoders_2 (
    .io_fetch_PC                (io_fetch_packet_bits_fetch_PC),
    .io_instruction             (io_fetch_packet_bits_instructions_2_instruction),
    .io_valid                   (io_fetch_packet_bits_valid_bits_2),
    .io_prediction_bits_hit     (io_prediction_bits_hit),
    .io_prediction_bits_target  (io_prediction_bits_target),
    .io_prediction_bits_br_mask (io_prediction_bits_br_mask),
    .io_RAS_read_ret_addr       (io_RAS_read_ret_addr),
    .io_T_NT                    (_decoders_2_io_T_NT),
    .io_metadata_JAL            (_decoders_2_io_metadata_JAL),
    .io_metadata_JALR           (_decoders_2_io_metadata_JALR),
    .io_metadata_BR             (_decoders_2_io_metadata_BR),
    .io_metadata_Call           (_decoders_2_io_metadata_Call),
    .io_metadata_Ret            (_decoders_2_io_metadata_Ret),
    .io_metadata_Imm            (_decoders_2_io_metadata_Imm),
    .io_metadata_instruction_PC (_decoders_2_io_metadata_instruction_PC),
    .io_metadata_RAS            (_decoders_2_io_metadata_RAS),
    .io_metadata_BTB_target     (_decoders_2_io_metadata_BTB_target)
  );
  branch_decoder_3 decoders_3 (
    .io_fetch_PC                (io_fetch_packet_bits_fetch_PC),
    .io_instruction             (io_fetch_packet_bits_instructions_3_instruction),
    .io_valid                   (io_fetch_packet_bits_valid_bits_3),
    .io_prediction_bits_hit     (io_prediction_bits_hit),
    .io_prediction_bits_target  (io_prediction_bits_target),
    .io_prediction_bits_br_mask (io_prediction_bits_br_mask),
    .io_RAS_read_ret_addr       (io_RAS_read_ret_addr),
    .io_T_NT                    (_decoders_3_io_T_NT),
    .io_metadata_JAL            (_decoders_3_io_metadata_JAL),
    .io_metadata_JALR           (_decoders_3_io_metadata_JALR),
    .io_metadata_BR             (_decoders_3_io_metadata_BR),
    .io_metadata_Call           (_decoders_3_io_metadata_Call),
    .io_metadata_Ret            (_decoders_3_io_metadata_Ret),
    .io_metadata_Imm            (_decoders_3_io_metadata_Imm),
    .io_metadata_instruction_PC (_decoders_3_io_metadata_instruction_PC),
    .io_metadata_RAS            (_decoders_3_io_metadata_RAS),
    .io_metadata_BTB_target     (_decoders_3_io_metadata_BTB_target)
  );
  decoder_validator decoder_validator (
    .io_instruction_T_NT_mask
      ({_decoders_3_io_T_NT,
        _decoders_2_io_T_NT,
        _decoders_1_io_T_NT,
        _decoders_0_io_T_NT}),
    .io_instruction_validity  (_decoder_validator_io_instruction_validity)
  );
  assign io_prediction_ready = io_final_fetch_packet_ready & ~PC_mismatch;
  assign io_fetch_packet_ready = io_final_fetch_packet_ready & ~PC_mismatch;
  assign io_kill = PC_mismatch;
  assign io_revert_valid = PC_mismatch;
  assign io_revert_bits_GHR = GHR_reg;
  assign io_revert_bits_PC = PC_expected;
  assign io_final_fetch_packet_valid =
    inputs_valid & PC_expected == io_fetch_packet_bits_fetch_PC;
  assign io_final_fetch_packet_bits_fetch_PC = io_fetch_packet_bits_fetch_PC;
  assign io_final_fetch_packet_bits_valid_bits_0 =
    io_final_fetch_packet_bits_valid_bits_0_0;
  assign io_final_fetch_packet_bits_valid_bits_1 =
    io_final_fetch_packet_bits_valid_bits_1_0;
  assign io_final_fetch_packet_bits_valid_bits_2 =
    io_final_fetch_packet_bits_valid_bits_2_0;
  assign io_final_fetch_packet_bits_valid_bits_3 =
    io_final_fetch_packet_bits_valid_bits_3_0;
  assign io_final_fetch_packet_bits_instructions_0_instruction =
    io_final_fetch_packet_bits_instructions_0_REG_instruction;
  assign io_final_fetch_packet_bits_instructions_0_packet_index =
    io_final_fetch_packet_bits_instructions_0_REG_packet_index;
  assign io_final_fetch_packet_bits_instructions_0_ROB_index =
    io_final_fetch_packet_bits_instructions_0_REG_ROB_index;
  assign io_final_fetch_packet_bits_instructions_1_instruction =
    io_final_fetch_packet_bits_instructions_1_REG_instruction;
  assign io_final_fetch_packet_bits_instructions_1_packet_index =
    io_final_fetch_packet_bits_instructions_1_REG_packet_index;
  assign io_final_fetch_packet_bits_instructions_1_ROB_index =
    io_final_fetch_packet_bits_instructions_1_REG_ROB_index;
  assign io_final_fetch_packet_bits_instructions_2_instruction =
    io_final_fetch_packet_bits_instructions_2_REG_instruction;
  assign io_final_fetch_packet_bits_instructions_2_packet_index =
    io_final_fetch_packet_bits_instructions_2_REG_packet_index;
  assign io_final_fetch_packet_bits_instructions_2_ROB_index =
    io_final_fetch_packet_bits_instructions_2_REG_ROB_index;
  assign io_final_fetch_packet_bits_instructions_3_instruction =
    io_final_fetch_packet_bits_instructions_3_REG_instruction;
  assign io_final_fetch_packet_bits_instructions_3_packet_index =
    io_final_fetch_packet_bits_instructions_3_REG_packet_index;
  assign io_final_fetch_packet_bits_instructions_3_ROB_index =
    io_final_fetch_packet_bits_instructions_3_REG_ROB_index;
  assign io_RAS_update_call_addr = metadata_out_instruction_PC;
  assign io_RAS_update_call =
    T_NT_reg_3
      ? metadata_reg_3_Call
      : T_NT_reg_2
          ? metadata_reg_2_Call
          : T_NT_reg_1 ? metadata_reg_1_Call : T_NT_reg_0 & metadata_reg_0_Call;
  assign io_RAS_update_ret = use_RAS;
  assign io_predictions_0_valid =
    io_final_fetch_packet_bits_valid_bits_0_0
    & (metadata_reg_0_JAL | metadata_reg_0_JALR | metadata_reg_0_BR);
  assign io_predictions_0_bits_valid = 1'h0;
  assign io_predictions_0_bits_instruction_PC = io_fetch_packet_bits_fetch_PC;
  assign io_predictions_0_bits_is_misprediction = 1'h0;
  assign io_predictions_0_bits_predicted_expected_PC = PC_expected;
  assign io_predictions_0_bits_GHR = GHR_reg;
  assign io_predictions_0_bits_NEXT = io_predictions_0_bits_NEXT_REG;
  assign io_predictions_0_bits_TOS = io_predictions_0_bits_TOS_REG;
  assign io_predictions_0_bits_RAT_IDX = 4'h0;
  assign io_predictions_1_valid =
    io_final_fetch_packet_bits_valid_bits_1_0
    & (metadata_reg_1_JAL | metadata_reg_1_JALR | metadata_reg_1_BR);
  assign io_predictions_1_bits_valid = 1'h0;
  assign io_predictions_1_bits_instruction_PC = io_fetch_packet_bits_fetch_PC + 32'h4;
  assign io_predictions_1_bits_is_misprediction = 1'h0;
  assign io_predictions_1_bits_predicted_expected_PC = PC_expected;
  assign io_predictions_1_bits_GHR = GHR_reg;
  assign io_predictions_1_bits_NEXT = io_predictions_1_bits_NEXT_REG;
  assign io_predictions_1_bits_TOS = io_predictions_1_bits_TOS_REG;
  assign io_predictions_1_bits_RAT_IDX = 4'h0;
  assign io_predictions_2_valid =
    io_final_fetch_packet_bits_valid_bits_2_0
    & (metadata_reg_2_JAL | metadata_reg_2_JALR | metadata_reg_2_BR);
  assign io_predictions_2_bits_valid = 1'h0;
  assign io_predictions_2_bits_instruction_PC = io_fetch_packet_bits_fetch_PC + 32'h8;
  assign io_predictions_2_bits_is_misprediction = 1'h0;
  assign io_predictions_2_bits_predicted_expected_PC = PC_expected;
  assign io_predictions_2_bits_GHR = GHR_reg;
  assign io_predictions_2_bits_NEXT = io_predictions_2_bits_NEXT_REG;
  assign io_predictions_2_bits_TOS = io_predictions_2_bits_TOS_REG;
  assign io_predictions_2_bits_RAT_IDX = 4'h0;
  assign io_predictions_3_valid =
    io_final_fetch_packet_bits_valid_bits_3_0
    & (metadata_reg_3_JAL | metadata_reg_3_JALR | metadata_reg_3_BR);
  assign io_predictions_3_bits_valid = 1'h0;
  assign io_predictions_3_bits_instruction_PC = io_fetch_packet_bits_fetch_PC + 32'hC;
  assign io_predictions_3_bits_is_misprediction = 1'h0;
  assign io_predictions_3_bits_predicted_expected_PC = PC_expected;
  assign io_predictions_3_bits_GHR = GHR_reg;
  assign io_predictions_3_bits_NEXT = io_predictions_3_bits_NEXT_REG;
  assign io_predictions_3_bits_TOS = io_predictions_3_bits_TOS_REG;
  assign io_predictions_3_bits_RAT_IDX = 4'h0;
endmodule

