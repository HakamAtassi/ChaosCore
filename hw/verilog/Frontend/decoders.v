// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for prints and assertions.

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module decoder(
  input         clock,
                reset,
  input  [31:0] io_instruction_instruction,
  input  [3:0]  io_instruction_packet_index,
  input  [5:0]  io_instruction_ROB_index,
  output [5:0]  io_decoded_instruction_RD,
  output        io_decoded_instruction_RD_valid,
  output [5:0]  io_decoded_instruction_RS1,
                io_decoded_instruction_RS2,
  output [31:0] io_decoded_instruction_IMM,
  output [2:0]  io_decoded_instruction_FUNCT3,
  output [3:0]  io_decoded_instruction_packet_index,
  output [5:0]  io_decoded_instruction_ROB_index,
  output [4:0]  io_decoded_instruction_instructionType,
  output [1:0]  io_decoded_instruction_portID,
                io_decoded_instruction_RS_type,
  output        io_decoded_instruction_needs_ALU,
                io_decoded_instruction_needs_branch_unit,
                io_decoded_instruction_SUBTRACT,
                io_decoded_instruction_MULTIPLY,
                io_decoded_instruction_IMMEDIATE,
                io_decoded_instruction_IS_LOAD,
                io_decoded_instruction_IS_STORE
);

  wire       IS_LOAD = io_instruction_instruction[6:2] == 5'h0;
  wire       IMMEDIATE = io_instruction_instruction[6:2] == 5'h4;
  wire       _io_decoded_instruction_RD_valid_T_11 =
    io_instruction_instruction[6:2] == 5'h5;
  wire       IS_STORE = io_instruction_instruction[6:2] == 5'h8;
  wire       _is_INT_T = io_instruction_instruction[6:2] == 5'hC;
  wire       _io_decoded_instruction_RD_valid_T_9 =
    io_instruction_instruction[6:2] == 5'hD;
  wire       _is_INT_T_3 = io_instruction_instruction[6:2] == 5'h18;
  wire       _is_INT_T_7 = io_instruction_instruction[6:2] == 5'h19;
  wire       _is_INT_T_5 = io_instruction_instruction[6:2] == 5'h1B;
  wire       _io_decoded_instruction_RD_valid_T_13 =
    io_instruction_instruction[6:2] == 5'h1C;
  `ifndef SYNTHESIS
    always @(posedge clock) begin
      if (~reset
          & ~(IS_LOAD | io_instruction_instruction[6:2] == 5'h1
              | io_instruction_instruction[6:2] == 5'h2
              | io_instruction_instruction[6:2] == 5'h3 | IMMEDIATE
              | _io_decoded_instruction_RD_valid_T_11
              | io_instruction_instruction[6:2] == 5'h6 | IS_STORE
              | io_instruction_instruction[6:2] == 5'h9
              | io_instruction_instruction[6:2] == 5'hA
              | io_instruction_instruction[6:2] == 5'hB | _is_INT_T
              | _io_decoded_instruction_RD_valid_T_9
              | io_instruction_instruction[6:2] == 5'hE
              | io_instruction_instruction[6:2] == 5'h10
              | io_instruction_instruction[6:2] == 5'h11
              | io_instruction_instruction[6:2] == 5'h12
              | io_instruction_instruction[6:2] == 5'h13
              | io_instruction_instruction[6:2] == 5'h14
              | io_instruction_instruction[6:2] == 5'h16 | _is_INT_T_3 | _is_INT_T_7
              | _is_INT_T_5 | _io_decoded_instruction_RD_valid_T_13
              | io_instruction_instruction[6:2] == 5'h1E)) begin
        if (`ASSERT_VERBOSE_COND_)
          $error("Assertion failed: Enum state must be valid, got %d!\n    at decoder.scala:66 assert(valid, \"Enum state must be valid, got %%%%d!\", opcode(6,2))\n",
                 io_instruction_instruction[6:2]);
        if (`STOP_COND_)
          $fatal;
      end
    end // always @(posedge)
  `endif // not def SYNTHESIS
  wire       needs_branch_unit = _is_INT_T_3 | _is_INT_T_5 | _is_INT_T_7;
  wire       needs_ALU =
    _is_INT_T
    & (io_instruction_instruction[27] | io_instruction_instruction[31:25] == 7'h0)
    | IMMEDIATE;
  reg  [1:0] ALU_port;
  always @(posedge clock) begin
    if (reset)
      ALU_port <= 2'h0;
    else if (needs_ALU) begin
      if (ALU_port == 2'h2)
        ALU_port <= 2'h0;
      else
        ALU_port <= ALU_port + 2'h1;
    end
  end // always @(posedge)
  assign io_decoded_instruction_RD = {1'h0, io_instruction_instruction[11:7]};
  assign io_decoded_instruction_RD_valid =
    _is_INT_T | IMMEDIATE | IS_LOAD | _is_INT_T_5 | _is_INT_T_7
    | _io_decoded_instruction_RD_valid_T_9 | _io_decoded_instruction_RD_valid_T_11
    | _io_decoded_instruction_RD_valid_T_13;
  assign io_decoded_instruction_RS1 = {1'h0, io_instruction_instruction[19:15]};
  assign io_decoded_instruction_RS2 = {1'h0, io_instruction_instruction[24:20]};
  assign io_decoded_instruction_IMM =
    io_instruction_instruction[6:0] == 7'h63
      ? {19'h0, io_instruction_instruction[31:25], io_instruction_instruction[11:7], 1'h0}
      : io_instruction_instruction[6:0] == 7'h6F
          ? {11'h0,
             io_instruction_instruction[31],
             io_instruction_instruction[19:12],
             io_instruction_instruction[20],
             io_instruction_instruction[30:21],
             1'h0}
          : io_instruction_instruction[6:0] == 7'h13
            | io_instruction_instruction[6:0] == 7'h3
            | io_instruction_instruction[6:0] == 7'h67
              ? io_instruction_instruction
              : io_instruction_instruction[6:0] == 7'h23
                  ? {20'h0,
                     io_instruction_instruction[31:25],
                     io_instruction_instruction[11:7]}
                  : io_instruction_instruction[6:0] == 7'h33
                      ? {io_instruction_instruction[31:12], 12'h0}
                      : 32'h0;
  assign io_decoded_instruction_FUNCT3 = io_instruction_instruction[14:12];
  assign io_decoded_instruction_packet_index = io_instruction_packet_index;
  assign io_decoded_instruction_ROB_index = io_instruction_ROB_index;
  assign io_decoded_instruction_instructionType = io_instruction_instruction[6:2];
  assign io_decoded_instruction_portID =
    needs_ALU
      ? ALU_port
      : _is_INT_T
        & (io_instruction_instruction[14:12] == 3'h4
           | io_instruction_instruction[14:12] == 3'h5
           | io_instruction_instruction[14:12] == 3'h6
           | (&(io_instruction_instruction[14:12]))) & io_instruction_instruction[25]
          ? 2'h1
          : needs_branch_unit ? 2'h0 : {2{IS_STORE | IS_LOAD}};
  assign io_decoded_instruction_RS_type =
    _is_INT_T | IMMEDIATE | _is_INT_T_3 | _is_INT_T_5 | _is_INT_T_7
      ? 2'h0
      : IS_LOAD | IS_STORE ? 2'h1 : 2'h2;
  assign io_decoded_instruction_needs_ALU = needs_ALU;
  assign io_decoded_instruction_needs_branch_unit = needs_branch_unit;
  assign io_decoded_instruction_SUBTRACT = _is_INT_T & io_instruction_instruction[27];
  assign io_decoded_instruction_MULTIPLY = _is_INT_T & io_instruction_instruction[25];
  assign io_decoded_instruction_IMMEDIATE = IMMEDIATE;
  assign io_decoded_instruction_IS_LOAD = IS_LOAD;
  assign io_decoded_instruction_IS_STORE = IS_STORE;
endmodule

module fetch_packet_decoder(
  input         clock,
                reset,
  output        io_fetch_packet_ready,
  input         io_fetch_packet_valid,
  input  [31:0] io_fetch_packet_bits_fetch_PC,
  input         io_fetch_packet_bits_valid_bits_0,
                io_fetch_packet_bits_valid_bits_1,
                io_fetch_packet_bits_valid_bits_2,
                io_fetch_packet_bits_valid_bits_3,
  input  [31:0] io_fetch_packet_bits_instructions_0_instruction,
  input  [3:0]  io_fetch_packet_bits_instructions_0_packet_index,
  input  [5:0]  io_fetch_packet_bits_instructions_0_ROB_index,
  input  [31:0] io_fetch_packet_bits_instructions_1_instruction,
  input  [3:0]  io_fetch_packet_bits_instructions_1_packet_index,
  input  [5:0]  io_fetch_packet_bits_instructions_1_ROB_index,
  input  [31:0] io_fetch_packet_bits_instructions_2_instruction,
  input  [3:0]  io_fetch_packet_bits_instructions_2_packet_index,
  input  [5:0]  io_fetch_packet_bits_instructions_2_ROB_index,
  input  [31:0] io_fetch_packet_bits_instructions_3_instruction,
  input  [3:0]  io_fetch_packet_bits_instructions_3_packet_index,
  input  [5:0]  io_fetch_packet_bits_instructions_3_ROB_index,
  input         io_decoded_fetch_packet_ready,
  output        io_decoded_fetch_packet_valid,
  output [5:0]  io_decoded_fetch_packet_bits_0_RDold,
  output        io_decoded_fetch_packet_bits_0_RDold_valid,
  output [5:0]  io_decoded_fetch_packet_bits_0_RD,
  output        io_decoded_fetch_packet_bits_0_RD_valid,
  output [5:0]  io_decoded_fetch_packet_bits_0_RS1,
  output        io_decoded_fetch_packet_bits_0_RS1_valid,
  output [5:0]  io_decoded_fetch_packet_bits_0_RS2,
  output        io_decoded_fetch_packet_bits_0_RS2_valid,
  output [31:0] io_decoded_fetch_packet_bits_0_IMM,
  output [2:0]  io_decoded_fetch_packet_bits_0_FUNCT3,
  output [3:0]  io_decoded_fetch_packet_bits_0_packet_index,
  output [5:0]  io_decoded_fetch_packet_bits_0_ROB_index,
  output [4:0]  io_decoded_fetch_packet_bits_0_instructionType,
  output [1:0]  io_decoded_fetch_packet_bits_0_portID,
                io_decoded_fetch_packet_bits_0_RS_type,
  output        io_decoded_fetch_packet_bits_0_needs_ALU,
                io_decoded_fetch_packet_bits_0_needs_branch_unit,
                io_decoded_fetch_packet_bits_0_SUBTRACT,
                io_decoded_fetch_packet_bits_0_MULTIPLY,
                io_decoded_fetch_packet_bits_0_IMMEDIATE,
                io_decoded_fetch_packet_bits_0_IS_LOAD,
                io_decoded_fetch_packet_bits_0_IS_STORE,
  output [5:0]  io_decoded_fetch_packet_bits_1_RDold,
  output        io_decoded_fetch_packet_bits_1_RDold_valid,
  output [5:0]  io_decoded_fetch_packet_bits_1_RD,
  output        io_decoded_fetch_packet_bits_1_RD_valid,
  output [5:0]  io_decoded_fetch_packet_bits_1_RS1,
  output        io_decoded_fetch_packet_bits_1_RS1_valid,
  output [5:0]  io_decoded_fetch_packet_bits_1_RS2,
  output        io_decoded_fetch_packet_bits_1_RS2_valid,
  output [31:0] io_decoded_fetch_packet_bits_1_IMM,
  output [2:0]  io_decoded_fetch_packet_bits_1_FUNCT3,
  output [3:0]  io_decoded_fetch_packet_bits_1_packet_index,
  output [5:0]  io_decoded_fetch_packet_bits_1_ROB_index,
  output [4:0]  io_decoded_fetch_packet_bits_1_instructionType,
  output [1:0]  io_decoded_fetch_packet_bits_1_portID,
                io_decoded_fetch_packet_bits_1_RS_type,
  output        io_decoded_fetch_packet_bits_1_needs_ALU,
                io_decoded_fetch_packet_bits_1_needs_branch_unit,
                io_decoded_fetch_packet_bits_1_SUBTRACT,
                io_decoded_fetch_packet_bits_1_MULTIPLY,
                io_decoded_fetch_packet_bits_1_IMMEDIATE,
                io_decoded_fetch_packet_bits_1_IS_LOAD,
                io_decoded_fetch_packet_bits_1_IS_STORE,
  output [5:0]  io_decoded_fetch_packet_bits_2_RDold,
  output        io_decoded_fetch_packet_bits_2_RDold_valid,
  output [5:0]  io_decoded_fetch_packet_bits_2_RD,
  output        io_decoded_fetch_packet_bits_2_RD_valid,
  output [5:0]  io_decoded_fetch_packet_bits_2_RS1,
  output        io_decoded_fetch_packet_bits_2_RS1_valid,
  output [5:0]  io_decoded_fetch_packet_bits_2_RS2,
  output        io_decoded_fetch_packet_bits_2_RS2_valid,
  output [31:0] io_decoded_fetch_packet_bits_2_IMM,
  output [2:0]  io_decoded_fetch_packet_bits_2_FUNCT3,
  output [3:0]  io_decoded_fetch_packet_bits_2_packet_index,
  output [5:0]  io_decoded_fetch_packet_bits_2_ROB_index,
  output [4:0]  io_decoded_fetch_packet_bits_2_instructionType,
  output [1:0]  io_decoded_fetch_packet_bits_2_portID,
                io_decoded_fetch_packet_bits_2_RS_type,
  output        io_decoded_fetch_packet_bits_2_needs_ALU,
                io_decoded_fetch_packet_bits_2_needs_branch_unit,
                io_decoded_fetch_packet_bits_2_SUBTRACT,
                io_decoded_fetch_packet_bits_2_MULTIPLY,
                io_decoded_fetch_packet_bits_2_IMMEDIATE,
                io_decoded_fetch_packet_bits_2_IS_LOAD,
                io_decoded_fetch_packet_bits_2_IS_STORE,
  output [5:0]  io_decoded_fetch_packet_bits_3_RDold,
  output        io_decoded_fetch_packet_bits_3_RDold_valid,
  output [5:0]  io_decoded_fetch_packet_bits_3_RD,
  output        io_decoded_fetch_packet_bits_3_RD_valid,
  output [5:0]  io_decoded_fetch_packet_bits_3_RS1,
  output        io_decoded_fetch_packet_bits_3_RS1_valid,
  output [5:0]  io_decoded_fetch_packet_bits_3_RS2,
  output        io_decoded_fetch_packet_bits_3_RS2_valid,
  output [31:0] io_decoded_fetch_packet_bits_3_IMM,
  output [2:0]  io_decoded_fetch_packet_bits_3_FUNCT3,
  output [3:0]  io_decoded_fetch_packet_bits_3_packet_index,
  output [5:0]  io_decoded_fetch_packet_bits_3_ROB_index,
  output [4:0]  io_decoded_fetch_packet_bits_3_instructionType,
  output [1:0]  io_decoded_fetch_packet_bits_3_portID,
                io_decoded_fetch_packet_bits_3_RS_type,
  output        io_decoded_fetch_packet_bits_3_needs_ALU,
                io_decoded_fetch_packet_bits_3_needs_branch_unit,
                io_decoded_fetch_packet_bits_3_SUBTRACT,
                io_decoded_fetch_packet_bits_3_MULTIPLY,
                io_decoded_fetch_packet_bits_3_IMMEDIATE,
                io_decoded_fetch_packet_bits_3_IS_LOAD,
                io_decoded_fetch_packet_bits_3_IS_STORE
);

  wire [5:0]  _decoders_3_io_decoded_instruction_RD;
  wire        _decoders_3_io_decoded_instruction_RD_valid;
  wire [5:0]  _decoders_3_io_decoded_instruction_RS1;
  wire [5:0]  _decoders_3_io_decoded_instruction_RS2;
  wire [31:0] _decoders_3_io_decoded_instruction_IMM;
  wire [2:0]  _decoders_3_io_decoded_instruction_FUNCT3;
  wire [3:0]  _decoders_3_io_decoded_instruction_packet_index;
  wire [5:0]  _decoders_3_io_decoded_instruction_ROB_index;
  wire [4:0]  _decoders_3_io_decoded_instruction_instructionType;
  wire [1:0]  _decoders_3_io_decoded_instruction_portID;
  wire [1:0]  _decoders_3_io_decoded_instruction_RS_type;
  wire        _decoders_3_io_decoded_instruction_needs_ALU;
  wire        _decoders_3_io_decoded_instruction_needs_branch_unit;
  wire        _decoders_3_io_decoded_instruction_SUBTRACT;
  wire        _decoders_3_io_decoded_instruction_MULTIPLY;
  wire        _decoders_3_io_decoded_instruction_IMMEDIATE;
  wire        _decoders_3_io_decoded_instruction_IS_LOAD;
  wire        _decoders_3_io_decoded_instruction_IS_STORE;
  wire [5:0]  _decoders_2_io_decoded_instruction_RD;
  wire        _decoders_2_io_decoded_instruction_RD_valid;
  wire [5:0]  _decoders_2_io_decoded_instruction_RS1;
  wire [5:0]  _decoders_2_io_decoded_instruction_RS2;
  wire [31:0] _decoders_2_io_decoded_instruction_IMM;
  wire [2:0]  _decoders_2_io_decoded_instruction_FUNCT3;
  wire [3:0]  _decoders_2_io_decoded_instruction_packet_index;
  wire [5:0]  _decoders_2_io_decoded_instruction_ROB_index;
  wire [4:0]  _decoders_2_io_decoded_instruction_instructionType;
  wire [1:0]  _decoders_2_io_decoded_instruction_portID;
  wire [1:0]  _decoders_2_io_decoded_instruction_RS_type;
  wire        _decoders_2_io_decoded_instruction_needs_ALU;
  wire        _decoders_2_io_decoded_instruction_needs_branch_unit;
  wire        _decoders_2_io_decoded_instruction_SUBTRACT;
  wire        _decoders_2_io_decoded_instruction_MULTIPLY;
  wire        _decoders_2_io_decoded_instruction_IMMEDIATE;
  wire        _decoders_2_io_decoded_instruction_IS_LOAD;
  wire        _decoders_2_io_decoded_instruction_IS_STORE;
  wire [5:0]  _decoders_1_io_decoded_instruction_RD;
  wire        _decoders_1_io_decoded_instruction_RD_valid;
  wire [5:0]  _decoders_1_io_decoded_instruction_RS1;
  wire [5:0]  _decoders_1_io_decoded_instruction_RS2;
  wire [31:0] _decoders_1_io_decoded_instruction_IMM;
  wire [2:0]  _decoders_1_io_decoded_instruction_FUNCT3;
  wire [3:0]  _decoders_1_io_decoded_instruction_packet_index;
  wire [5:0]  _decoders_1_io_decoded_instruction_ROB_index;
  wire [4:0]  _decoders_1_io_decoded_instruction_instructionType;
  wire [1:0]  _decoders_1_io_decoded_instruction_portID;
  wire [1:0]  _decoders_1_io_decoded_instruction_RS_type;
  wire        _decoders_1_io_decoded_instruction_needs_ALU;
  wire        _decoders_1_io_decoded_instruction_needs_branch_unit;
  wire        _decoders_1_io_decoded_instruction_SUBTRACT;
  wire        _decoders_1_io_decoded_instruction_MULTIPLY;
  wire        _decoders_1_io_decoded_instruction_IMMEDIATE;
  wire        _decoders_1_io_decoded_instruction_IS_LOAD;
  wire        _decoders_1_io_decoded_instruction_IS_STORE;
  wire [5:0]  _decoders_0_io_decoded_instruction_RD;
  wire        _decoders_0_io_decoded_instruction_RD_valid;
  wire [5:0]  _decoders_0_io_decoded_instruction_RS1;
  wire [5:0]  _decoders_0_io_decoded_instruction_RS2;
  wire [31:0] _decoders_0_io_decoded_instruction_IMM;
  wire [2:0]  _decoders_0_io_decoded_instruction_FUNCT3;
  wire [3:0]  _decoders_0_io_decoded_instruction_packet_index;
  wire [5:0]  _decoders_0_io_decoded_instruction_ROB_index;
  wire [4:0]  _decoders_0_io_decoded_instruction_instructionType;
  wire [1:0]  _decoders_0_io_decoded_instruction_portID;
  wire [1:0]  _decoders_0_io_decoded_instruction_RS_type;
  wire        _decoders_0_io_decoded_instruction_needs_ALU;
  wire        _decoders_0_io_decoded_instruction_needs_branch_unit;
  wire        _decoders_0_io_decoded_instruction_SUBTRACT;
  wire        _decoders_0_io_decoded_instruction_MULTIPLY;
  wire        _decoders_0_io_decoded_instruction_IMMEDIATE;
  wire        _decoders_0_io_decoded_instruction_IS_LOAD;
  wire        _decoders_0_io_decoded_instruction_IS_STORE;
  reg  [5:0]  io_decoded_fetch_packet_bits_0_REG_RD;
  reg         io_decoded_fetch_packet_bits_0_REG_RD_valid;
  reg  [5:0]  io_decoded_fetch_packet_bits_0_REG_RS1;
  reg  [5:0]  io_decoded_fetch_packet_bits_0_REG_RS2;
  reg  [31:0] io_decoded_fetch_packet_bits_0_REG_IMM;
  reg  [2:0]  io_decoded_fetch_packet_bits_0_REG_FUNCT3;
  reg  [3:0]  io_decoded_fetch_packet_bits_0_REG_packet_index;
  reg  [5:0]  io_decoded_fetch_packet_bits_0_REG_ROB_index;
  reg  [4:0]  io_decoded_fetch_packet_bits_0_REG_instructionType;
  reg  [1:0]  io_decoded_fetch_packet_bits_0_REG_portID;
  reg  [1:0]  io_decoded_fetch_packet_bits_0_REG_RS_type;
  reg         io_decoded_fetch_packet_bits_0_REG_needs_ALU;
  reg         io_decoded_fetch_packet_bits_0_REG_needs_branch_unit;
  reg         io_decoded_fetch_packet_bits_0_REG_SUBTRACT;
  reg         io_decoded_fetch_packet_bits_0_REG_MULTIPLY;
  reg         io_decoded_fetch_packet_bits_0_REG_IMMEDIATE;
  reg         io_decoded_fetch_packet_bits_0_REG_IS_LOAD;
  reg         io_decoded_fetch_packet_bits_0_REG_IS_STORE;
  reg  [5:0]  io_decoded_fetch_packet_bits_1_REG_RD;
  reg         io_decoded_fetch_packet_bits_1_REG_RD_valid;
  reg  [5:0]  io_decoded_fetch_packet_bits_1_REG_RS1;
  reg  [5:0]  io_decoded_fetch_packet_bits_1_REG_RS2;
  reg  [31:0] io_decoded_fetch_packet_bits_1_REG_IMM;
  reg  [2:0]  io_decoded_fetch_packet_bits_1_REG_FUNCT3;
  reg  [3:0]  io_decoded_fetch_packet_bits_1_REG_packet_index;
  reg  [5:0]  io_decoded_fetch_packet_bits_1_REG_ROB_index;
  reg  [4:0]  io_decoded_fetch_packet_bits_1_REG_instructionType;
  reg  [1:0]  io_decoded_fetch_packet_bits_1_REG_portID;
  reg  [1:0]  io_decoded_fetch_packet_bits_1_REG_RS_type;
  reg         io_decoded_fetch_packet_bits_1_REG_needs_ALU;
  reg         io_decoded_fetch_packet_bits_1_REG_needs_branch_unit;
  reg         io_decoded_fetch_packet_bits_1_REG_SUBTRACT;
  reg         io_decoded_fetch_packet_bits_1_REG_MULTIPLY;
  reg         io_decoded_fetch_packet_bits_1_REG_IMMEDIATE;
  reg         io_decoded_fetch_packet_bits_1_REG_IS_LOAD;
  reg         io_decoded_fetch_packet_bits_1_REG_IS_STORE;
  reg  [5:0]  io_decoded_fetch_packet_bits_2_REG_RD;
  reg         io_decoded_fetch_packet_bits_2_REG_RD_valid;
  reg  [5:0]  io_decoded_fetch_packet_bits_2_REG_RS1;
  reg  [5:0]  io_decoded_fetch_packet_bits_2_REG_RS2;
  reg  [31:0] io_decoded_fetch_packet_bits_2_REG_IMM;
  reg  [2:0]  io_decoded_fetch_packet_bits_2_REG_FUNCT3;
  reg  [3:0]  io_decoded_fetch_packet_bits_2_REG_packet_index;
  reg  [5:0]  io_decoded_fetch_packet_bits_2_REG_ROB_index;
  reg  [4:0]  io_decoded_fetch_packet_bits_2_REG_instructionType;
  reg  [1:0]  io_decoded_fetch_packet_bits_2_REG_portID;
  reg  [1:0]  io_decoded_fetch_packet_bits_2_REG_RS_type;
  reg         io_decoded_fetch_packet_bits_2_REG_needs_ALU;
  reg         io_decoded_fetch_packet_bits_2_REG_needs_branch_unit;
  reg         io_decoded_fetch_packet_bits_2_REG_SUBTRACT;
  reg         io_decoded_fetch_packet_bits_2_REG_MULTIPLY;
  reg         io_decoded_fetch_packet_bits_2_REG_IMMEDIATE;
  reg         io_decoded_fetch_packet_bits_2_REG_IS_LOAD;
  reg         io_decoded_fetch_packet_bits_2_REG_IS_STORE;
  reg  [5:0]  io_decoded_fetch_packet_bits_3_REG_RD;
  reg         io_decoded_fetch_packet_bits_3_REG_RD_valid;
  reg  [5:0]  io_decoded_fetch_packet_bits_3_REG_RS1;
  reg  [5:0]  io_decoded_fetch_packet_bits_3_REG_RS2;
  reg  [31:0] io_decoded_fetch_packet_bits_3_REG_IMM;
  reg  [2:0]  io_decoded_fetch_packet_bits_3_REG_FUNCT3;
  reg  [3:0]  io_decoded_fetch_packet_bits_3_REG_packet_index;
  reg  [5:0]  io_decoded_fetch_packet_bits_3_REG_ROB_index;
  reg  [4:0]  io_decoded_fetch_packet_bits_3_REG_instructionType;
  reg  [1:0]  io_decoded_fetch_packet_bits_3_REG_portID;
  reg  [1:0]  io_decoded_fetch_packet_bits_3_REG_RS_type;
  reg         io_decoded_fetch_packet_bits_3_REG_needs_ALU;
  reg         io_decoded_fetch_packet_bits_3_REG_needs_branch_unit;
  reg         io_decoded_fetch_packet_bits_3_REG_SUBTRACT;
  reg         io_decoded_fetch_packet_bits_3_REG_MULTIPLY;
  reg         io_decoded_fetch_packet_bits_3_REG_IMMEDIATE;
  reg         io_decoded_fetch_packet_bits_3_REG_IS_LOAD;
  reg         io_decoded_fetch_packet_bits_3_REG_IS_STORE;
  reg         io_decoded_fetch_packet_valid_REG;
  always @(posedge clock) begin
    io_decoded_fetch_packet_bits_0_REG_RD <= _decoders_0_io_decoded_instruction_RD;
    io_decoded_fetch_packet_bits_0_REG_RD_valid <=
      _decoders_0_io_decoded_instruction_RD_valid;
    io_decoded_fetch_packet_bits_0_REG_RS1 <= _decoders_0_io_decoded_instruction_RS1;
    io_decoded_fetch_packet_bits_0_REG_RS2 <= _decoders_0_io_decoded_instruction_RS2;
    io_decoded_fetch_packet_bits_0_REG_IMM <= _decoders_0_io_decoded_instruction_IMM;
    io_decoded_fetch_packet_bits_0_REG_FUNCT3 <=
      _decoders_0_io_decoded_instruction_FUNCT3;
    io_decoded_fetch_packet_bits_0_REG_packet_index <=
      _decoders_0_io_decoded_instruction_packet_index;
    io_decoded_fetch_packet_bits_0_REG_ROB_index <=
      _decoders_0_io_decoded_instruction_ROB_index;
    io_decoded_fetch_packet_bits_0_REG_instructionType <=
      _decoders_0_io_decoded_instruction_instructionType;
    io_decoded_fetch_packet_bits_0_REG_portID <=
      _decoders_0_io_decoded_instruction_portID;
    io_decoded_fetch_packet_bits_0_REG_RS_type <=
      _decoders_0_io_decoded_instruction_RS_type;
    io_decoded_fetch_packet_bits_0_REG_needs_ALU <=
      _decoders_0_io_decoded_instruction_needs_ALU;
    io_decoded_fetch_packet_bits_0_REG_needs_branch_unit <=
      _decoders_0_io_decoded_instruction_needs_branch_unit;
    io_decoded_fetch_packet_bits_0_REG_SUBTRACT <=
      _decoders_0_io_decoded_instruction_SUBTRACT;
    io_decoded_fetch_packet_bits_0_REG_MULTIPLY <=
      _decoders_0_io_decoded_instruction_MULTIPLY;
    io_decoded_fetch_packet_bits_0_REG_IMMEDIATE <=
      _decoders_0_io_decoded_instruction_IMMEDIATE;
    io_decoded_fetch_packet_bits_0_REG_IS_LOAD <=
      _decoders_0_io_decoded_instruction_IS_LOAD;
    io_decoded_fetch_packet_bits_0_REG_IS_STORE <=
      _decoders_0_io_decoded_instruction_IS_STORE;
    io_decoded_fetch_packet_bits_1_REG_RD <= _decoders_1_io_decoded_instruction_RD;
    io_decoded_fetch_packet_bits_1_REG_RD_valid <=
      _decoders_1_io_decoded_instruction_RD_valid;
    io_decoded_fetch_packet_bits_1_REG_RS1 <= _decoders_1_io_decoded_instruction_RS1;
    io_decoded_fetch_packet_bits_1_REG_RS2 <= _decoders_1_io_decoded_instruction_RS2;
    io_decoded_fetch_packet_bits_1_REG_IMM <= _decoders_1_io_decoded_instruction_IMM;
    io_decoded_fetch_packet_bits_1_REG_FUNCT3 <=
      _decoders_1_io_decoded_instruction_FUNCT3;
    io_decoded_fetch_packet_bits_1_REG_packet_index <=
      _decoders_1_io_decoded_instruction_packet_index;
    io_decoded_fetch_packet_bits_1_REG_ROB_index <=
      _decoders_1_io_decoded_instruction_ROB_index;
    io_decoded_fetch_packet_bits_1_REG_instructionType <=
      _decoders_1_io_decoded_instruction_instructionType;
    io_decoded_fetch_packet_bits_1_REG_portID <=
      _decoders_1_io_decoded_instruction_portID;
    io_decoded_fetch_packet_bits_1_REG_RS_type <=
      _decoders_1_io_decoded_instruction_RS_type;
    io_decoded_fetch_packet_bits_1_REG_needs_ALU <=
      _decoders_1_io_decoded_instruction_needs_ALU;
    io_decoded_fetch_packet_bits_1_REG_needs_branch_unit <=
      _decoders_1_io_decoded_instruction_needs_branch_unit;
    io_decoded_fetch_packet_bits_1_REG_SUBTRACT <=
      _decoders_1_io_decoded_instruction_SUBTRACT;
    io_decoded_fetch_packet_bits_1_REG_MULTIPLY <=
      _decoders_1_io_decoded_instruction_MULTIPLY;
    io_decoded_fetch_packet_bits_1_REG_IMMEDIATE <=
      _decoders_1_io_decoded_instruction_IMMEDIATE;
    io_decoded_fetch_packet_bits_1_REG_IS_LOAD <=
      _decoders_1_io_decoded_instruction_IS_LOAD;
    io_decoded_fetch_packet_bits_1_REG_IS_STORE <=
      _decoders_1_io_decoded_instruction_IS_STORE;
    io_decoded_fetch_packet_bits_2_REG_RD <= _decoders_2_io_decoded_instruction_RD;
    io_decoded_fetch_packet_bits_2_REG_RD_valid <=
      _decoders_2_io_decoded_instruction_RD_valid;
    io_decoded_fetch_packet_bits_2_REG_RS1 <= _decoders_2_io_decoded_instruction_RS1;
    io_decoded_fetch_packet_bits_2_REG_RS2 <= _decoders_2_io_decoded_instruction_RS2;
    io_decoded_fetch_packet_bits_2_REG_IMM <= _decoders_2_io_decoded_instruction_IMM;
    io_decoded_fetch_packet_bits_2_REG_FUNCT3 <=
      _decoders_2_io_decoded_instruction_FUNCT3;
    io_decoded_fetch_packet_bits_2_REG_packet_index <=
      _decoders_2_io_decoded_instruction_packet_index;
    io_decoded_fetch_packet_bits_2_REG_ROB_index <=
      _decoders_2_io_decoded_instruction_ROB_index;
    io_decoded_fetch_packet_bits_2_REG_instructionType <=
      _decoders_2_io_decoded_instruction_instructionType;
    io_decoded_fetch_packet_bits_2_REG_portID <=
      _decoders_2_io_decoded_instruction_portID;
    io_decoded_fetch_packet_bits_2_REG_RS_type <=
      _decoders_2_io_decoded_instruction_RS_type;
    io_decoded_fetch_packet_bits_2_REG_needs_ALU <=
      _decoders_2_io_decoded_instruction_needs_ALU;
    io_decoded_fetch_packet_bits_2_REG_needs_branch_unit <=
      _decoders_2_io_decoded_instruction_needs_branch_unit;
    io_decoded_fetch_packet_bits_2_REG_SUBTRACT <=
      _decoders_2_io_decoded_instruction_SUBTRACT;
    io_decoded_fetch_packet_bits_2_REG_MULTIPLY <=
      _decoders_2_io_decoded_instruction_MULTIPLY;
    io_decoded_fetch_packet_bits_2_REG_IMMEDIATE <=
      _decoders_2_io_decoded_instruction_IMMEDIATE;
    io_decoded_fetch_packet_bits_2_REG_IS_LOAD <=
      _decoders_2_io_decoded_instruction_IS_LOAD;
    io_decoded_fetch_packet_bits_2_REG_IS_STORE <=
      _decoders_2_io_decoded_instruction_IS_STORE;
    io_decoded_fetch_packet_bits_3_REG_RD <= _decoders_3_io_decoded_instruction_RD;
    io_decoded_fetch_packet_bits_3_REG_RD_valid <=
      _decoders_3_io_decoded_instruction_RD_valid;
    io_decoded_fetch_packet_bits_3_REG_RS1 <= _decoders_3_io_decoded_instruction_RS1;
    io_decoded_fetch_packet_bits_3_REG_RS2 <= _decoders_3_io_decoded_instruction_RS2;
    io_decoded_fetch_packet_bits_3_REG_IMM <= _decoders_3_io_decoded_instruction_IMM;
    io_decoded_fetch_packet_bits_3_REG_FUNCT3 <=
      _decoders_3_io_decoded_instruction_FUNCT3;
    io_decoded_fetch_packet_bits_3_REG_packet_index <=
      _decoders_3_io_decoded_instruction_packet_index;
    io_decoded_fetch_packet_bits_3_REG_ROB_index <=
      _decoders_3_io_decoded_instruction_ROB_index;
    io_decoded_fetch_packet_bits_3_REG_instructionType <=
      _decoders_3_io_decoded_instruction_instructionType;
    io_decoded_fetch_packet_bits_3_REG_portID <=
      _decoders_3_io_decoded_instruction_portID;
    io_decoded_fetch_packet_bits_3_REG_RS_type <=
      _decoders_3_io_decoded_instruction_RS_type;
    io_decoded_fetch_packet_bits_3_REG_needs_ALU <=
      _decoders_3_io_decoded_instruction_needs_ALU;
    io_decoded_fetch_packet_bits_3_REG_needs_branch_unit <=
      _decoders_3_io_decoded_instruction_needs_branch_unit;
    io_decoded_fetch_packet_bits_3_REG_SUBTRACT <=
      _decoders_3_io_decoded_instruction_SUBTRACT;
    io_decoded_fetch_packet_bits_3_REG_MULTIPLY <=
      _decoders_3_io_decoded_instruction_MULTIPLY;
    io_decoded_fetch_packet_bits_3_REG_IMMEDIATE <=
      _decoders_3_io_decoded_instruction_IMMEDIATE;
    io_decoded_fetch_packet_bits_3_REG_IS_LOAD <=
      _decoders_3_io_decoded_instruction_IS_LOAD;
    io_decoded_fetch_packet_bits_3_REG_IS_STORE <=
      _decoders_3_io_decoded_instruction_IS_STORE;
    io_decoded_fetch_packet_valid_REG <= io_fetch_packet_valid;
  end // always @(posedge)
  decoder decoders_0 (
    .clock                                    (clock),
    .reset                                    (reset),
    .io_instruction_instruction
      (io_fetch_packet_bits_instructions_0_instruction),
    .io_instruction_packet_index
      (io_fetch_packet_bits_instructions_0_packet_index),
    .io_instruction_ROB_index
      (io_fetch_packet_bits_instructions_0_ROB_index),
    .io_decoded_instruction_RD                (_decoders_0_io_decoded_instruction_RD),
    .io_decoded_instruction_RD_valid
      (_decoders_0_io_decoded_instruction_RD_valid),
    .io_decoded_instruction_RS1               (_decoders_0_io_decoded_instruction_RS1),
    .io_decoded_instruction_RS2               (_decoders_0_io_decoded_instruction_RS2),
    .io_decoded_instruction_IMM               (_decoders_0_io_decoded_instruction_IMM),
    .io_decoded_instruction_FUNCT3            (_decoders_0_io_decoded_instruction_FUNCT3),
    .io_decoded_instruction_packet_index
      (_decoders_0_io_decoded_instruction_packet_index),
    .io_decoded_instruction_ROB_index
      (_decoders_0_io_decoded_instruction_ROB_index),
    .io_decoded_instruction_instructionType
      (_decoders_0_io_decoded_instruction_instructionType),
    .io_decoded_instruction_portID            (_decoders_0_io_decoded_instruction_portID),
    .io_decoded_instruction_RS_type
      (_decoders_0_io_decoded_instruction_RS_type),
    .io_decoded_instruction_needs_ALU
      (_decoders_0_io_decoded_instruction_needs_ALU),
    .io_decoded_instruction_needs_branch_unit
      (_decoders_0_io_decoded_instruction_needs_branch_unit),
    .io_decoded_instruction_SUBTRACT
      (_decoders_0_io_decoded_instruction_SUBTRACT),
    .io_decoded_instruction_MULTIPLY
      (_decoders_0_io_decoded_instruction_MULTIPLY),
    .io_decoded_instruction_IMMEDIATE
      (_decoders_0_io_decoded_instruction_IMMEDIATE),
    .io_decoded_instruction_IS_LOAD
      (_decoders_0_io_decoded_instruction_IS_LOAD),
    .io_decoded_instruction_IS_STORE
      (_decoders_0_io_decoded_instruction_IS_STORE)
  );
  decoder decoders_1 (
    .clock                                    (clock),
    .reset                                    (reset),
    .io_instruction_instruction
      (io_fetch_packet_bits_instructions_1_instruction),
    .io_instruction_packet_index
      (io_fetch_packet_bits_instructions_1_packet_index),
    .io_instruction_ROB_index
      (io_fetch_packet_bits_instructions_1_ROB_index),
    .io_decoded_instruction_RD                (_decoders_1_io_decoded_instruction_RD),
    .io_decoded_instruction_RD_valid
      (_decoders_1_io_decoded_instruction_RD_valid),
    .io_decoded_instruction_RS1               (_decoders_1_io_decoded_instruction_RS1),
    .io_decoded_instruction_RS2               (_decoders_1_io_decoded_instruction_RS2),
    .io_decoded_instruction_IMM               (_decoders_1_io_decoded_instruction_IMM),
    .io_decoded_instruction_FUNCT3            (_decoders_1_io_decoded_instruction_FUNCT3),
    .io_decoded_instruction_packet_index
      (_decoders_1_io_decoded_instruction_packet_index),
    .io_decoded_instruction_ROB_index
      (_decoders_1_io_decoded_instruction_ROB_index),
    .io_decoded_instruction_instructionType
      (_decoders_1_io_decoded_instruction_instructionType),
    .io_decoded_instruction_portID            (_decoders_1_io_decoded_instruction_portID),
    .io_decoded_instruction_RS_type
      (_decoders_1_io_decoded_instruction_RS_type),
    .io_decoded_instruction_needs_ALU
      (_decoders_1_io_decoded_instruction_needs_ALU),
    .io_decoded_instruction_needs_branch_unit
      (_decoders_1_io_decoded_instruction_needs_branch_unit),
    .io_decoded_instruction_SUBTRACT
      (_decoders_1_io_decoded_instruction_SUBTRACT),
    .io_decoded_instruction_MULTIPLY
      (_decoders_1_io_decoded_instruction_MULTIPLY),
    .io_decoded_instruction_IMMEDIATE
      (_decoders_1_io_decoded_instruction_IMMEDIATE),
    .io_decoded_instruction_IS_LOAD
      (_decoders_1_io_decoded_instruction_IS_LOAD),
    .io_decoded_instruction_IS_STORE
      (_decoders_1_io_decoded_instruction_IS_STORE)
  );
  decoder decoders_2 (
    .clock                                    (clock),
    .reset                                    (reset),
    .io_instruction_instruction
      (io_fetch_packet_bits_instructions_2_instruction),
    .io_instruction_packet_index
      (io_fetch_packet_bits_instructions_2_packet_index),
    .io_instruction_ROB_index
      (io_fetch_packet_bits_instructions_2_ROB_index),
    .io_decoded_instruction_RD                (_decoders_2_io_decoded_instruction_RD),
    .io_decoded_instruction_RD_valid
      (_decoders_2_io_decoded_instruction_RD_valid),
    .io_decoded_instruction_RS1               (_decoders_2_io_decoded_instruction_RS1),
    .io_decoded_instruction_RS2               (_decoders_2_io_decoded_instruction_RS2),
    .io_decoded_instruction_IMM               (_decoders_2_io_decoded_instruction_IMM),
    .io_decoded_instruction_FUNCT3            (_decoders_2_io_decoded_instruction_FUNCT3),
    .io_decoded_instruction_packet_index
      (_decoders_2_io_decoded_instruction_packet_index),
    .io_decoded_instruction_ROB_index
      (_decoders_2_io_decoded_instruction_ROB_index),
    .io_decoded_instruction_instructionType
      (_decoders_2_io_decoded_instruction_instructionType),
    .io_decoded_instruction_portID            (_decoders_2_io_decoded_instruction_portID),
    .io_decoded_instruction_RS_type
      (_decoders_2_io_decoded_instruction_RS_type),
    .io_decoded_instruction_needs_ALU
      (_decoders_2_io_decoded_instruction_needs_ALU),
    .io_decoded_instruction_needs_branch_unit
      (_decoders_2_io_decoded_instruction_needs_branch_unit),
    .io_decoded_instruction_SUBTRACT
      (_decoders_2_io_decoded_instruction_SUBTRACT),
    .io_decoded_instruction_MULTIPLY
      (_decoders_2_io_decoded_instruction_MULTIPLY),
    .io_decoded_instruction_IMMEDIATE
      (_decoders_2_io_decoded_instruction_IMMEDIATE),
    .io_decoded_instruction_IS_LOAD
      (_decoders_2_io_decoded_instruction_IS_LOAD),
    .io_decoded_instruction_IS_STORE
      (_decoders_2_io_decoded_instruction_IS_STORE)
  );
  decoder decoders_3 (
    .clock                                    (clock),
    .reset                                    (reset),
    .io_instruction_instruction
      (io_fetch_packet_bits_instructions_3_instruction),
    .io_instruction_packet_index
      (io_fetch_packet_bits_instructions_3_packet_index),
    .io_instruction_ROB_index
      (io_fetch_packet_bits_instructions_3_ROB_index),
    .io_decoded_instruction_RD                (_decoders_3_io_decoded_instruction_RD),
    .io_decoded_instruction_RD_valid
      (_decoders_3_io_decoded_instruction_RD_valid),
    .io_decoded_instruction_RS1               (_decoders_3_io_decoded_instruction_RS1),
    .io_decoded_instruction_RS2               (_decoders_3_io_decoded_instruction_RS2),
    .io_decoded_instruction_IMM               (_decoders_3_io_decoded_instruction_IMM),
    .io_decoded_instruction_FUNCT3            (_decoders_3_io_decoded_instruction_FUNCT3),
    .io_decoded_instruction_packet_index
      (_decoders_3_io_decoded_instruction_packet_index),
    .io_decoded_instruction_ROB_index
      (_decoders_3_io_decoded_instruction_ROB_index),
    .io_decoded_instruction_instructionType
      (_decoders_3_io_decoded_instruction_instructionType),
    .io_decoded_instruction_portID            (_decoders_3_io_decoded_instruction_portID),
    .io_decoded_instruction_RS_type
      (_decoders_3_io_decoded_instruction_RS_type),
    .io_decoded_instruction_needs_ALU
      (_decoders_3_io_decoded_instruction_needs_ALU),
    .io_decoded_instruction_needs_branch_unit
      (_decoders_3_io_decoded_instruction_needs_branch_unit),
    .io_decoded_instruction_SUBTRACT
      (_decoders_3_io_decoded_instruction_SUBTRACT),
    .io_decoded_instruction_MULTIPLY
      (_decoders_3_io_decoded_instruction_MULTIPLY),
    .io_decoded_instruction_IMMEDIATE
      (_decoders_3_io_decoded_instruction_IMMEDIATE),
    .io_decoded_instruction_IS_LOAD
      (_decoders_3_io_decoded_instruction_IS_LOAD),
    .io_decoded_instruction_IS_STORE
      (_decoders_3_io_decoded_instruction_IS_STORE)
  );
  assign io_fetch_packet_ready = 1'h0;
  assign io_decoded_fetch_packet_valid = io_decoded_fetch_packet_valid_REG;
  assign io_decoded_fetch_packet_bits_0_RDold = 6'h0;
  assign io_decoded_fetch_packet_bits_0_RDold_valid = 1'h0;
  assign io_decoded_fetch_packet_bits_0_RD = io_decoded_fetch_packet_bits_0_REG_RD;
  assign io_decoded_fetch_packet_bits_0_RD_valid =
    io_decoded_fetch_packet_bits_0_REG_RD_valid;
  assign io_decoded_fetch_packet_bits_0_RS1 = io_decoded_fetch_packet_bits_0_REG_RS1;
  assign io_decoded_fetch_packet_bits_0_RS1_valid = 1'h1;
  assign io_decoded_fetch_packet_bits_0_RS2 = io_decoded_fetch_packet_bits_0_REG_RS2;
  assign io_decoded_fetch_packet_bits_0_RS2_valid = 1'h1;
  assign io_decoded_fetch_packet_bits_0_IMM = io_decoded_fetch_packet_bits_0_REG_IMM;
  assign io_decoded_fetch_packet_bits_0_FUNCT3 =
    io_decoded_fetch_packet_bits_0_REG_FUNCT3;
  assign io_decoded_fetch_packet_bits_0_packet_index =
    io_decoded_fetch_packet_bits_0_REG_packet_index;
  assign io_decoded_fetch_packet_bits_0_ROB_index =
    io_decoded_fetch_packet_bits_0_REG_ROB_index;
  assign io_decoded_fetch_packet_bits_0_instructionType =
    io_decoded_fetch_packet_bits_0_REG_instructionType;
  assign io_decoded_fetch_packet_bits_0_portID =
    io_decoded_fetch_packet_bits_0_REG_portID;
  assign io_decoded_fetch_packet_bits_0_RS_type =
    io_decoded_fetch_packet_bits_0_REG_RS_type;
  assign io_decoded_fetch_packet_bits_0_needs_ALU =
    io_decoded_fetch_packet_bits_0_REG_needs_ALU;
  assign io_decoded_fetch_packet_bits_0_needs_branch_unit =
    io_decoded_fetch_packet_bits_0_REG_needs_branch_unit;
  assign io_decoded_fetch_packet_bits_0_SUBTRACT =
    io_decoded_fetch_packet_bits_0_REG_SUBTRACT;
  assign io_decoded_fetch_packet_bits_0_MULTIPLY =
    io_decoded_fetch_packet_bits_0_REG_MULTIPLY;
  assign io_decoded_fetch_packet_bits_0_IMMEDIATE =
    io_decoded_fetch_packet_bits_0_REG_IMMEDIATE;
  assign io_decoded_fetch_packet_bits_0_IS_LOAD =
    io_decoded_fetch_packet_bits_0_REG_IS_LOAD;
  assign io_decoded_fetch_packet_bits_0_IS_STORE =
    io_decoded_fetch_packet_bits_0_REG_IS_STORE;
  assign io_decoded_fetch_packet_bits_1_RDold = 6'h0;
  assign io_decoded_fetch_packet_bits_1_RDold_valid = 1'h0;
  assign io_decoded_fetch_packet_bits_1_RD = io_decoded_fetch_packet_bits_1_REG_RD;
  assign io_decoded_fetch_packet_bits_1_RD_valid =
    io_decoded_fetch_packet_bits_1_REG_RD_valid;
  assign io_decoded_fetch_packet_bits_1_RS1 = io_decoded_fetch_packet_bits_1_REG_RS1;
  assign io_decoded_fetch_packet_bits_1_RS1_valid = 1'h1;
  assign io_decoded_fetch_packet_bits_1_RS2 = io_decoded_fetch_packet_bits_1_REG_RS2;
  assign io_decoded_fetch_packet_bits_1_RS2_valid = 1'h1;
  assign io_decoded_fetch_packet_bits_1_IMM = io_decoded_fetch_packet_bits_1_REG_IMM;
  assign io_decoded_fetch_packet_bits_1_FUNCT3 =
    io_decoded_fetch_packet_bits_1_REG_FUNCT3;
  assign io_decoded_fetch_packet_bits_1_packet_index =
    io_decoded_fetch_packet_bits_1_REG_packet_index;
  assign io_decoded_fetch_packet_bits_1_ROB_index =
    io_decoded_fetch_packet_bits_1_REG_ROB_index;
  assign io_decoded_fetch_packet_bits_1_instructionType =
    io_decoded_fetch_packet_bits_1_REG_instructionType;
  assign io_decoded_fetch_packet_bits_1_portID =
    io_decoded_fetch_packet_bits_1_REG_portID;
  assign io_decoded_fetch_packet_bits_1_RS_type =
    io_decoded_fetch_packet_bits_1_REG_RS_type;
  assign io_decoded_fetch_packet_bits_1_needs_ALU =
    io_decoded_fetch_packet_bits_1_REG_needs_ALU;
  assign io_decoded_fetch_packet_bits_1_needs_branch_unit =
    io_decoded_fetch_packet_bits_1_REG_needs_branch_unit;
  assign io_decoded_fetch_packet_bits_1_SUBTRACT =
    io_decoded_fetch_packet_bits_1_REG_SUBTRACT;
  assign io_decoded_fetch_packet_bits_1_MULTIPLY =
    io_decoded_fetch_packet_bits_1_REG_MULTIPLY;
  assign io_decoded_fetch_packet_bits_1_IMMEDIATE =
    io_decoded_fetch_packet_bits_1_REG_IMMEDIATE;
  assign io_decoded_fetch_packet_bits_1_IS_LOAD =
    io_decoded_fetch_packet_bits_1_REG_IS_LOAD;
  assign io_decoded_fetch_packet_bits_1_IS_STORE =
    io_decoded_fetch_packet_bits_1_REG_IS_STORE;
  assign io_decoded_fetch_packet_bits_2_RDold = 6'h0;
  assign io_decoded_fetch_packet_bits_2_RDold_valid = 1'h0;
  assign io_decoded_fetch_packet_bits_2_RD = io_decoded_fetch_packet_bits_2_REG_RD;
  assign io_decoded_fetch_packet_bits_2_RD_valid =
    io_decoded_fetch_packet_bits_2_REG_RD_valid;
  assign io_decoded_fetch_packet_bits_2_RS1 = io_decoded_fetch_packet_bits_2_REG_RS1;
  assign io_decoded_fetch_packet_bits_2_RS1_valid = 1'h1;
  assign io_decoded_fetch_packet_bits_2_RS2 = io_decoded_fetch_packet_bits_2_REG_RS2;
  assign io_decoded_fetch_packet_bits_2_RS2_valid = 1'h1;
  assign io_decoded_fetch_packet_bits_2_IMM = io_decoded_fetch_packet_bits_2_REG_IMM;
  assign io_decoded_fetch_packet_bits_2_FUNCT3 =
    io_decoded_fetch_packet_bits_2_REG_FUNCT3;
  assign io_decoded_fetch_packet_bits_2_packet_index =
    io_decoded_fetch_packet_bits_2_REG_packet_index;
  assign io_decoded_fetch_packet_bits_2_ROB_index =
    io_decoded_fetch_packet_bits_2_REG_ROB_index;
  assign io_decoded_fetch_packet_bits_2_instructionType =
    io_decoded_fetch_packet_bits_2_REG_instructionType;
  assign io_decoded_fetch_packet_bits_2_portID =
    io_decoded_fetch_packet_bits_2_REG_portID;
  assign io_decoded_fetch_packet_bits_2_RS_type =
    io_decoded_fetch_packet_bits_2_REG_RS_type;
  assign io_decoded_fetch_packet_bits_2_needs_ALU =
    io_decoded_fetch_packet_bits_2_REG_needs_ALU;
  assign io_decoded_fetch_packet_bits_2_needs_branch_unit =
    io_decoded_fetch_packet_bits_2_REG_needs_branch_unit;
  assign io_decoded_fetch_packet_bits_2_SUBTRACT =
    io_decoded_fetch_packet_bits_2_REG_SUBTRACT;
  assign io_decoded_fetch_packet_bits_2_MULTIPLY =
    io_decoded_fetch_packet_bits_2_REG_MULTIPLY;
  assign io_decoded_fetch_packet_bits_2_IMMEDIATE =
    io_decoded_fetch_packet_bits_2_REG_IMMEDIATE;
  assign io_decoded_fetch_packet_bits_2_IS_LOAD =
    io_decoded_fetch_packet_bits_2_REG_IS_LOAD;
  assign io_decoded_fetch_packet_bits_2_IS_STORE =
    io_decoded_fetch_packet_bits_2_REG_IS_STORE;
  assign io_decoded_fetch_packet_bits_3_RDold = 6'h0;
  assign io_decoded_fetch_packet_bits_3_RDold_valid = 1'h0;
  assign io_decoded_fetch_packet_bits_3_RD = io_decoded_fetch_packet_bits_3_REG_RD;
  assign io_decoded_fetch_packet_bits_3_RD_valid =
    io_decoded_fetch_packet_bits_3_REG_RD_valid;
  assign io_decoded_fetch_packet_bits_3_RS1 = io_decoded_fetch_packet_bits_3_REG_RS1;
  assign io_decoded_fetch_packet_bits_3_RS1_valid = 1'h1;
  assign io_decoded_fetch_packet_bits_3_RS2 = io_decoded_fetch_packet_bits_3_REG_RS2;
  assign io_decoded_fetch_packet_bits_3_RS2_valid = 1'h1;
  assign io_decoded_fetch_packet_bits_3_IMM = io_decoded_fetch_packet_bits_3_REG_IMM;
  assign io_decoded_fetch_packet_bits_3_FUNCT3 =
    io_decoded_fetch_packet_bits_3_REG_FUNCT3;
  assign io_decoded_fetch_packet_bits_3_packet_index =
    io_decoded_fetch_packet_bits_3_REG_packet_index;
  assign io_decoded_fetch_packet_bits_3_ROB_index =
    io_decoded_fetch_packet_bits_3_REG_ROB_index;
  assign io_decoded_fetch_packet_bits_3_instructionType =
    io_decoded_fetch_packet_bits_3_REG_instructionType;
  assign io_decoded_fetch_packet_bits_3_portID =
    io_decoded_fetch_packet_bits_3_REG_portID;
  assign io_decoded_fetch_packet_bits_3_RS_type =
    io_decoded_fetch_packet_bits_3_REG_RS_type;
  assign io_decoded_fetch_packet_bits_3_needs_ALU =
    io_decoded_fetch_packet_bits_3_REG_needs_ALU;
  assign io_decoded_fetch_packet_bits_3_needs_branch_unit =
    io_decoded_fetch_packet_bits_3_REG_needs_branch_unit;
  assign io_decoded_fetch_packet_bits_3_SUBTRACT =
    io_decoded_fetch_packet_bits_3_REG_SUBTRACT;
  assign io_decoded_fetch_packet_bits_3_MULTIPLY =
    io_decoded_fetch_packet_bits_3_REG_MULTIPLY;
  assign io_decoded_fetch_packet_bits_3_IMMEDIATE =
    io_decoded_fetch_packet_bits_3_REG_IMMEDIATE;
  assign io_decoded_fetch_packet_bits_3_IS_LOAD =
    io_decoded_fetch_packet_bits_3_REG_IS_LOAD;
  assign io_decoded_fetch_packet_bits_3_IS_STORE =
    io_decoded_fetch_packet_bits_3_REG_IS_STORE;
endmodule

