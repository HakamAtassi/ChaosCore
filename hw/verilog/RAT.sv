// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for prints and assertions.

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module RAT(
  input                                                                                                                                                                                                                                                                                                                                                                                                      clock,
                                                                                                                                                                                                                                                                                                                                                                                                             reset,
  input  [3:0][4:0]                                                                                                                                                                                                                                                                                                                                                                                          io_instruction_RS1,
                                                                                                                                                                                                                                                                                                                                                                                                             io_instruction_RS2,
                                                                                                                                                                                                                                                                                                                                                                                                             io_instruction_RD,
  input  [3:0]                                                                                                                                                                                                                                                                                                                                                                                               io_free_list_wr_en,
  input  [3:0][6:0]                                                                                                                                                                                                                                                                                                                                                                                          io_free_list_RD,
  input  struct packed {logic valid; struct packed {logic [31:0] fetch_PC; logic T_NT; logic [5:0] ROB_index; logic [2:0] br_type; logic [1:0] fetch_packet_index; logic is_misprediction; logic exception; logic [31:0] expected_PC; logic [15:0] GHR; logic [6:0] TOS; logic [6:0] NEXT; logic [7:0] free_list_front_pointer; logic [3:0][4:0] RDold; logic [3:0][6:0] RD; logic [3:0] RD_valid; } bits; } io_commit,
  output [3:0][6:0]                                                                                                                                                                                                                                                                                                                                                                                          io_RAT_RD,
                                                                                                                                                                                                                                                                                                                                                                                                             io_RAT_RS1,
                                                                                                                                                                                                                                                                                                                                                                                                             io_RAT_RS2
);

  reg [31:0][6:0] commit_RAT;
  reg [31:0][6:0] speculative_RAT;
  always @(posedge clock) begin
    if (reset) begin
      automatic logic [31:0][6:0] _commit_RAT_WIRE =
        '{7'h0,
          7'h0,
          7'h0,
          7'h0,
          7'h0,
          7'h0,
          7'h0,
          7'h0,
          7'h0,
          7'h0,
          7'h0,
          7'h0,
          7'h0,
          7'h0,
          7'h0,
          7'h0,
          7'h0,
          7'h0,
          7'h0,
          7'h0,
          7'h0,
          7'h0,
          7'h0,
          7'h0,
          7'h0,
          7'h0,
          7'h0,
          7'h0,
          7'h0,
          7'h0,
          7'h0,
          7'h0};
      commit_RAT <= _commit_RAT_WIRE;
      speculative_RAT <= _commit_RAT_WIRE;
    end
    else begin
      automatic logic _GEN =
        io_commit.valid & (io_commit.bits.is_misprediction | io_commit.bits.exception);
      automatic logic _GEN_0;
      automatic logic _GEN_1;
      automatic logic _GEN_2;
      automatic logic _GEN_3 = io_commit.valid & io_commit.bits.RD_valid[2'h3] & ~_GEN;
      _GEN_0 = io_commit.valid & io_commit.bits.RD_valid[2'h0] & ~_GEN;
      _GEN_1 = io_commit.valid & io_commit.bits.RD_valid[2'h1] & ~_GEN;
      _GEN_2 = io_commit.valid & io_commit.bits.RD_valid[2'h2] & ~_GEN;
      if (_GEN_3 & io_commit.bits.RDold[2'h3] == 5'h0)
        commit_RAT[5'h0] <= io_commit.bits.RD[2'h3];
      else if (_GEN_2 & io_commit.bits.RDold[2'h2] == 5'h0)
        commit_RAT[5'h0] <= io_commit.bits.RD[2'h2];
      else if (_GEN_1 & io_commit.bits.RDold[2'h1] == 5'h0)
        commit_RAT[5'h0] <= io_commit.bits.RD[2'h1];
      else if (_GEN_0 & io_commit.bits.RDold[2'h0] == 5'h0)
        commit_RAT[5'h0] <= io_commit.bits.RD[2'h0];
      if (_GEN_3 & io_commit.bits.RDold[2'h3] == 5'h1)
        commit_RAT[5'h1] <= io_commit.bits.RD[2'h3];
      else if (_GEN_2 & io_commit.bits.RDold[2'h2] == 5'h1)
        commit_RAT[5'h1] <= io_commit.bits.RD[2'h2];
      else if (_GEN_1 & io_commit.bits.RDold[2'h1] == 5'h1)
        commit_RAT[5'h1] <= io_commit.bits.RD[2'h1];
      else if (_GEN_0 & io_commit.bits.RDold[2'h0] == 5'h1)
        commit_RAT[5'h1] <= io_commit.bits.RD[2'h0];
      if (_GEN_3 & io_commit.bits.RDold[2'h3] == 5'h2)
        commit_RAT[5'h2] <= io_commit.bits.RD[2'h3];
      else if (_GEN_2 & io_commit.bits.RDold[2'h2] == 5'h2)
        commit_RAT[5'h2] <= io_commit.bits.RD[2'h2];
      else if (_GEN_1 & io_commit.bits.RDold[2'h1] == 5'h2)
        commit_RAT[5'h2] <= io_commit.bits.RD[2'h1];
      else if (_GEN_0 & io_commit.bits.RDold[2'h0] == 5'h2)
        commit_RAT[5'h2] <= io_commit.bits.RD[2'h0];
      if (_GEN_3 & io_commit.bits.RDold[2'h3] == 5'h3)
        commit_RAT[5'h3] <= io_commit.bits.RD[2'h3];
      else if (_GEN_2 & io_commit.bits.RDold[2'h2] == 5'h3)
        commit_RAT[5'h3] <= io_commit.bits.RD[2'h2];
      else if (_GEN_1 & io_commit.bits.RDold[2'h1] == 5'h3)
        commit_RAT[5'h3] <= io_commit.bits.RD[2'h1];
      else if (_GEN_0 & io_commit.bits.RDold[2'h0] == 5'h3)
        commit_RAT[5'h3] <= io_commit.bits.RD[2'h0];
      if (_GEN_3 & io_commit.bits.RDold[2'h3] == 5'h4)
        commit_RAT[5'h4] <= io_commit.bits.RD[2'h3];
      else if (_GEN_2 & io_commit.bits.RDold[2'h2] == 5'h4)
        commit_RAT[5'h4] <= io_commit.bits.RD[2'h2];
      else if (_GEN_1 & io_commit.bits.RDold[2'h1] == 5'h4)
        commit_RAT[5'h4] <= io_commit.bits.RD[2'h1];
      else if (_GEN_0 & io_commit.bits.RDold[2'h0] == 5'h4)
        commit_RAT[5'h4] <= io_commit.bits.RD[2'h0];
      if (_GEN_3 & io_commit.bits.RDold[2'h3] == 5'h5)
        commit_RAT[5'h5] <= io_commit.bits.RD[2'h3];
      else if (_GEN_2 & io_commit.bits.RDold[2'h2] == 5'h5)
        commit_RAT[5'h5] <= io_commit.bits.RD[2'h2];
      else if (_GEN_1 & io_commit.bits.RDold[2'h1] == 5'h5)
        commit_RAT[5'h5] <= io_commit.bits.RD[2'h1];
      else if (_GEN_0 & io_commit.bits.RDold[2'h0] == 5'h5)
        commit_RAT[5'h5] <= io_commit.bits.RD[2'h0];
      if (_GEN_3 & io_commit.bits.RDold[2'h3] == 5'h6)
        commit_RAT[5'h6] <= io_commit.bits.RD[2'h3];
      else if (_GEN_2 & io_commit.bits.RDold[2'h2] == 5'h6)
        commit_RAT[5'h6] <= io_commit.bits.RD[2'h2];
      else if (_GEN_1 & io_commit.bits.RDold[2'h1] == 5'h6)
        commit_RAT[5'h6] <= io_commit.bits.RD[2'h1];
      else if (_GEN_0 & io_commit.bits.RDold[2'h0] == 5'h6)
        commit_RAT[5'h6] <= io_commit.bits.RD[2'h0];
      if (_GEN_3 & io_commit.bits.RDold[2'h3] == 5'h7)
        commit_RAT[5'h7] <= io_commit.bits.RD[2'h3];
      else if (_GEN_2 & io_commit.bits.RDold[2'h2] == 5'h7)
        commit_RAT[5'h7] <= io_commit.bits.RD[2'h2];
      else if (_GEN_1 & io_commit.bits.RDold[2'h1] == 5'h7)
        commit_RAT[5'h7] <= io_commit.bits.RD[2'h1];
      else if (_GEN_0 & io_commit.bits.RDold[2'h0] == 5'h7)
        commit_RAT[5'h7] <= io_commit.bits.RD[2'h0];
      if (_GEN_3 & io_commit.bits.RDold[2'h3] == 5'h8)
        commit_RAT[5'h8] <= io_commit.bits.RD[2'h3];
      else if (_GEN_2 & io_commit.bits.RDold[2'h2] == 5'h8)
        commit_RAT[5'h8] <= io_commit.bits.RD[2'h2];
      else if (_GEN_1 & io_commit.bits.RDold[2'h1] == 5'h8)
        commit_RAT[5'h8] <= io_commit.bits.RD[2'h1];
      else if (_GEN_0 & io_commit.bits.RDold[2'h0] == 5'h8)
        commit_RAT[5'h8] <= io_commit.bits.RD[2'h0];
      if (_GEN_3 & io_commit.bits.RDold[2'h3] == 5'h9)
        commit_RAT[5'h9] <= io_commit.bits.RD[2'h3];
      else if (_GEN_2 & io_commit.bits.RDold[2'h2] == 5'h9)
        commit_RAT[5'h9] <= io_commit.bits.RD[2'h2];
      else if (_GEN_1 & io_commit.bits.RDold[2'h1] == 5'h9)
        commit_RAT[5'h9] <= io_commit.bits.RD[2'h1];
      else if (_GEN_0 & io_commit.bits.RDold[2'h0] == 5'h9)
        commit_RAT[5'h9] <= io_commit.bits.RD[2'h0];
      if (_GEN_3 & io_commit.bits.RDold[2'h3] == 5'hA)
        commit_RAT[5'hA] <= io_commit.bits.RD[2'h3];
      else if (_GEN_2 & io_commit.bits.RDold[2'h2] == 5'hA)
        commit_RAT[5'hA] <= io_commit.bits.RD[2'h2];
      else if (_GEN_1 & io_commit.bits.RDold[2'h1] == 5'hA)
        commit_RAT[5'hA] <= io_commit.bits.RD[2'h1];
      else if (_GEN_0 & io_commit.bits.RDold[2'h0] == 5'hA)
        commit_RAT[5'hA] <= io_commit.bits.RD[2'h0];
      if (_GEN_3 & io_commit.bits.RDold[2'h3] == 5'hB)
        commit_RAT[5'hB] <= io_commit.bits.RD[2'h3];
      else if (_GEN_2 & io_commit.bits.RDold[2'h2] == 5'hB)
        commit_RAT[5'hB] <= io_commit.bits.RD[2'h2];
      else if (_GEN_1 & io_commit.bits.RDold[2'h1] == 5'hB)
        commit_RAT[5'hB] <= io_commit.bits.RD[2'h1];
      else if (_GEN_0 & io_commit.bits.RDold[2'h0] == 5'hB)
        commit_RAT[5'hB] <= io_commit.bits.RD[2'h0];
      if (_GEN_3 & io_commit.bits.RDold[2'h3] == 5'hC)
        commit_RAT[5'hC] <= io_commit.bits.RD[2'h3];
      else if (_GEN_2 & io_commit.bits.RDold[2'h2] == 5'hC)
        commit_RAT[5'hC] <= io_commit.bits.RD[2'h2];
      else if (_GEN_1 & io_commit.bits.RDold[2'h1] == 5'hC)
        commit_RAT[5'hC] <= io_commit.bits.RD[2'h1];
      else if (_GEN_0 & io_commit.bits.RDold[2'h0] == 5'hC)
        commit_RAT[5'hC] <= io_commit.bits.RD[2'h0];
      if (_GEN_3 & io_commit.bits.RDold[2'h3] == 5'hD)
        commit_RAT[5'hD] <= io_commit.bits.RD[2'h3];
      else if (_GEN_2 & io_commit.bits.RDold[2'h2] == 5'hD)
        commit_RAT[5'hD] <= io_commit.bits.RD[2'h2];
      else if (_GEN_1 & io_commit.bits.RDold[2'h1] == 5'hD)
        commit_RAT[5'hD] <= io_commit.bits.RD[2'h1];
      else if (_GEN_0 & io_commit.bits.RDold[2'h0] == 5'hD)
        commit_RAT[5'hD] <= io_commit.bits.RD[2'h0];
      if (_GEN_3 & io_commit.bits.RDold[2'h3] == 5'hE)
        commit_RAT[5'hE] <= io_commit.bits.RD[2'h3];
      else if (_GEN_2 & io_commit.bits.RDold[2'h2] == 5'hE)
        commit_RAT[5'hE] <= io_commit.bits.RD[2'h2];
      else if (_GEN_1 & io_commit.bits.RDold[2'h1] == 5'hE)
        commit_RAT[5'hE] <= io_commit.bits.RD[2'h1];
      else if (_GEN_0 & io_commit.bits.RDold[2'h0] == 5'hE)
        commit_RAT[5'hE] <= io_commit.bits.RD[2'h0];
      if (_GEN_3 & io_commit.bits.RDold[2'h3] == 5'hF)
        commit_RAT[5'hF] <= io_commit.bits.RD[2'h3];
      else if (_GEN_2 & io_commit.bits.RDold[2'h2] == 5'hF)
        commit_RAT[5'hF] <= io_commit.bits.RD[2'h2];
      else if (_GEN_1 & io_commit.bits.RDold[2'h1] == 5'hF)
        commit_RAT[5'hF] <= io_commit.bits.RD[2'h1];
      else if (_GEN_0 & io_commit.bits.RDold[2'h0] == 5'hF)
        commit_RAT[5'hF] <= io_commit.bits.RD[2'h0];
      if (_GEN_3 & io_commit.bits.RDold[2'h3] == 5'h10)
        commit_RAT[5'h10] <= io_commit.bits.RD[2'h3];
      else if (_GEN_2 & io_commit.bits.RDold[2'h2] == 5'h10)
        commit_RAT[5'h10] <= io_commit.bits.RD[2'h2];
      else if (_GEN_1 & io_commit.bits.RDold[2'h1] == 5'h10)
        commit_RAT[5'h10] <= io_commit.bits.RD[2'h1];
      else if (_GEN_0 & io_commit.bits.RDold[2'h0] == 5'h10)
        commit_RAT[5'h10] <= io_commit.bits.RD[2'h0];
      if (_GEN_3 & io_commit.bits.RDold[2'h3] == 5'h11)
        commit_RAT[5'h11] <= io_commit.bits.RD[2'h3];
      else if (_GEN_2 & io_commit.bits.RDold[2'h2] == 5'h11)
        commit_RAT[5'h11] <= io_commit.bits.RD[2'h2];
      else if (_GEN_1 & io_commit.bits.RDold[2'h1] == 5'h11)
        commit_RAT[5'h11] <= io_commit.bits.RD[2'h1];
      else if (_GEN_0 & io_commit.bits.RDold[2'h0] == 5'h11)
        commit_RAT[5'h11] <= io_commit.bits.RD[2'h0];
      if (_GEN_3 & io_commit.bits.RDold[2'h3] == 5'h12)
        commit_RAT[5'h12] <= io_commit.bits.RD[2'h3];
      else if (_GEN_2 & io_commit.bits.RDold[2'h2] == 5'h12)
        commit_RAT[5'h12] <= io_commit.bits.RD[2'h2];
      else if (_GEN_1 & io_commit.bits.RDold[2'h1] == 5'h12)
        commit_RAT[5'h12] <= io_commit.bits.RD[2'h1];
      else if (_GEN_0 & io_commit.bits.RDold[2'h0] == 5'h12)
        commit_RAT[5'h12] <= io_commit.bits.RD[2'h0];
      if (_GEN_3 & io_commit.bits.RDold[2'h3] == 5'h13)
        commit_RAT[5'h13] <= io_commit.bits.RD[2'h3];
      else if (_GEN_2 & io_commit.bits.RDold[2'h2] == 5'h13)
        commit_RAT[5'h13] <= io_commit.bits.RD[2'h2];
      else if (_GEN_1 & io_commit.bits.RDold[2'h1] == 5'h13)
        commit_RAT[5'h13] <= io_commit.bits.RD[2'h1];
      else if (_GEN_0 & io_commit.bits.RDold[2'h0] == 5'h13)
        commit_RAT[5'h13] <= io_commit.bits.RD[2'h0];
      if (_GEN_3 & io_commit.bits.RDold[2'h3] == 5'h14)
        commit_RAT[5'h14] <= io_commit.bits.RD[2'h3];
      else if (_GEN_2 & io_commit.bits.RDold[2'h2] == 5'h14)
        commit_RAT[5'h14] <= io_commit.bits.RD[2'h2];
      else if (_GEN_1 & io_commit.bits.RDold[2'h1] == 5'h14)
        commit_RAT[5'h14] <= io_commit.bits.RD[2'h1];
      else if (_GEN_0 & io_commit.bits.RDold[2'h0] == 5'h14)
        commit_RAT[5'h14] <= io_commit.bits.RD[2'h0];
      if (_GEN_3 & io_commit.bits.RDold[2'h3] == 5'h15)
        commit_RAT[5'h15] <= io_commit.bits.RD[2'h3];
      else if (_GEN_2 & io_commit.bits.RDold[2'h2] == 5'h15)
        commit_RAT[5'h15] <= io_commit.bits.RD[2'h2];
      else if (_GEN_1 & io_commit.bits.RDold[2'h1] == 5'h15)
        commit_RAT[5'h15] <= io_commit.bits.RD[2'h1];
      else if (_GEN_0 & io_commit.bits.RDold[2'h0] == 5'h15)
        commit_RAT[5'h15] <= io_commit.bits.RD[2'h0];
      if (_GEN_3 & io_commit.bits.RDold[2'h3] == 5'h16)
        commit_RAT[5'h16] <= io_commit.bits.RD[2'h3];
      else if (_GEN_2 & io_commit.bits.RDold[2'h2] == 5'h16)
        commit_RAT[5'h16] <= io_commit.bits.RD[2'h2];
      else if (_GEN_1 & io_commit.bits.RDold[2'h1] == 5'h16)
        commit_RAT[5'h16] <= io_commit.bits.RD[2'h1];
      else if (_GEN_0 & io_commit.bits.RDold[2'h0] == 5'h16)
        commit_RAT[5'h16] <= io_commit.bits.RD[2'h0];
      if (_GEN_3 & io_commit.bits.RDold[2'h3] == 5'h17)
        commit_RAT[5'h17] <= io_commit.bits.RD[2'h3];
      else if (_GEN_2 & io_commit.bits.RDold[2'h2] == 5'h17)
        commit_RAT[5'h17] <= io_commit.bits.RD[2'h2];
      else if (_GEN_1 & io_commit.bits.RDold[2'h1] == 5'h17)
        commit_RAT[5'h17] <= io_commit.bits.RD[2'h1];
      else if (_GEN_0 & io_commit.bits.RDold[2'h0] == 5'h17)
        commit_RAT[5'h17] <= io_commit.bits.RD[2'h0];
      if (_GEN_3 & io_commit.bits.RDold[2'h3] == 5'h18)
        commit_RAT[5'h18] <= io_commit.bits.RD[2'h3];
      else if (_GEN_2 & io_commit.bits.RDold[2'h2] == 5'h18)
        commit_RAT[5'h18] <= io_commit.bits.RD[2'h2];
      else if (_GEN_1 & io_commit.bits.RDold[2'h1] == 5'h18)
        commit_RAT[5'h18] <= io_commit.bits.RD[2'h1];
      else if (_GEN_0 & io_commit.bits.RDold[2'h0] == 5'h18)
        commit_RAT[5'h18] <= io_commit.bits.RD[2'h0];
      if (_GEN_3 & io_commit.bits.RDold[2'h3] == 5'h19)
        commit_RAT[5'h19] <= io_commit.bits.RD[2'h3];
      else if (_GEN_2 & io_commit.bits.RDold[2'h2] == 5'h19)
        commit_RAT[5'h19] <= io_commit.bits.RD[2'h2];
      else if (_GEN_1 & io_commit.bits.RDold[2'h1] == 5'h19)
        commit_RAT[5'h19] <= io_commit.bits.RD[2'h1];
      else if (_GEN_0 & io_commit.bits.RDold[2'h0] == 5'h19)
        commit_RAT[5'h19] <= io_commit.bits.RD[2'h0];
      if (_GEN_3 & io_commit.bits.RDold[2'h3] == 5'h1A)
        commit_RAT[5'h1A] <= io_commit.bits.RD[2'h3];
      else if (_GEN_2 & io_commit.bits.RDold[2'h2] == 5'h1A)
        commit_RAT[5'h1A] <= io_commit.bits.RD[2'h2];
      else if (_GEN_1 & io_commit.bits.RDold[2'h1] == 5'h1A)
        commit_RAT[5'h1A] <= io_commit.bits.RD[2'h1];
      else if (_GEN_0 & io_commit.bits.RDold[2'h0] == 5'h1A)
        commit_RAT[5'h1A] <= io_commit.bits.RD[2'h0];
      if (_GEN_3 & io_commit.bits.RDold[2'h3] == 5'h1B)
        commit_RAT[5'h1B] <= io_commit.bits.RD[2'h3];
      else if (_GEN_2 & io_commit.bits.RDold[2'h2] == 5'h1B)
        commit_RAT[5'h1B] <= io_commit.bits.RD[2'h2];
      else if (_GEN_1 & io_commit.bits.RDold[2'h1] == 5'h1B)
        commit_RAT[5'h1B] <= io_commit.bits.RD[2'h1];
      else if (_GEN_0 & io_commit.bits.RDold[2'h0] == 5'h1B)
        commit_RAT[5'h1B] <= io_commit.bits.RD[2'h0];
      if (_GEN_3 & io_commit.bits.RDold[2'h3] == 5'h1C)
        commit_RAT[5'h1C] <= io_commit.bits.RD[2'h3];
      else if (_GEN_2 & io_commit.bits.RDold[2'h2] == 5'h1C)
        commit_RAT[5'h1C] <= io_commit.bits.RD[2'h2];
      else if (_GEN_1 & io_commit.bits.RDold[2'h1] == 5'h1C)
        commit_RAT[5'h1C] <= io_commit.bits.RD[2'h1];
      else if (_GEN_0 & io_commit.bits.RDold[2'h0] == 5'h1C)
        commit_RAT[5'h1C] <= io_commit.bits.RD[2'h0];
      if (_GEN_3 & io_commit.bits.RDold[2'h3] == 5'h1D)
        commit_RAT[5'h1D] <= io_commit.bits.RD[2'h3];
      else if (_GEN_2 & io_commit.bits.RDold[2'h2] == 5'h1D)
        commit_RAT[5'h1D] <= io_commit.bits.RD[2'h2];
      else if (_GEN_1 & io_commit.bits.RDold[2'h1] == 5'h1D)
        commit_RAT[5'h1D] <= io_commit.bits.RD[2'h1];
      else if (_GEN_0 & io_commit.bits.RDold[2'h0] == 5'h1D)
        commit_RAT[5'h1D] <= io_commit.bits.RD[2'h0];
      if (_GEN_3 & io_commit.bits.RDold[2'h3] == 5'h1E)
        commit_RAT[5'h1E] <= io_commit.bits.RD[2'h3];
      else if (_GEN_2 & io_commit.bits.RDold[2'h2] == 5'h1E)
        commit_RAT[5'h1E] <= io_commit.bits.RD[2'h2];
      else if (_GEN_1 & io_commit.bits.RDold[2'h1] == 5'h1E)
        commit_RAT[5'h1E] <= io_commit.bits.RD[2'h1];
      else if (_GEN_0 & io_commit.bits.RDold[2'h0] == 5'h1E)
        commit_RAT[5'h1E] <= io_commit.bits.RD[2'h0];
      if (_GEN_3 & (&io_commit.bits.RDold[2'h3]))
        commit_RAT[5'h1F] <= io_commit.bits.RD[2'h3];
      else if (_GEN_2 & (&io_commit.bits.RDold[2'h2]))
        commit_RAT[5'h1F] <= io_commit.bits.RD[2'h2];
      else if (_GEN_1 & (&io_commit.bits.RDold[2'h1]))
        commit_RAT[5'h1F] <= io_commit.bits.RD[2'h1];
      else if (_GEN_0 & (&io_commit.bits.RDold[2'h0]))
        commit_RAT[5'h1F] <= io_commit.bits.RD[2'h0];
      if (_GEN)
        speculative_RAT <= commit_RAT;
      else begin
        if (io_free_list_wr_en[2'h3] & io_instruction_RD[2'h3] == 5'h0)
          speculative_RAT[5'h0] <= io_free_list_RD[2'h3];
        else if (io_free_list_wr_en[2'h2] & io_instruction_RD[2'h2] == 5'h0)
          speculative_RAT[5'h0] <= io_free_list_RD[2'h2];
        else if (io_free_list_wr_en[2'h1] & io_instruction_RD[2'h1] == 5'h0)
          speculative_RAT[5'h0] <= io_free_list_RD[2'h1];
        else if (io_free_list_wr_en[2'h0] & io_instruction_RD[2'h0] == 5'h0)
          speculative_RAT[5'h0] <= io_free_list_RD[2'h0];
        if (io_free_list_wr_en[2'h3] & io_instruction_RD[2'h3] == 5'h1)
          speculative_RAT[5'h1] <= io_free_list_RD[2'h3];
        else if (io_free_list_wr_en[2'h2] & io_instruction_RD[2'h2] == 5'h1)
          speculative_RAT[5'h1] <= io_free_list_RD[2'h2];
        else if (io_free_list_wr_en[2'h1] & io_instruction_RD[2'h1] == 5'h1)
          speculative_RAT[5'h1] <= io_free_list_RD[2'h1];
        else if (io_free_list_wr_en[2'h0] & io_instruction_RD[2'h0] == 5'h1)
          speculative_RAT[5'h1] <= io_free_list_RD[2'h0];
        if (io_free_list_wr_en[2'h3] & io_instruction_RD[2'h3] == 5'h2)
          speculative_RAT[5'h2] <= io_free_list_RD[2'h3];
        else if (io_free_list_wr_en[2'h2] & io_instruction_RD[2'h2] == 5'h2)
          speculative_RAT[5'h2] <= io_free_list_RD[2'h2];
        else if (io_free_list_wr_en[2'h1] & io_instruction_RD[2'h1] == 5'h2)
          speculative_RAT[5'h2] <= io_free_list_RD[2'h1];
        else if (io_free_list_wr_en[2'h0] & io_instruction_RD[2'h0] == 5'h2)
          speculative_RAT[5'h2] <= io_free_list_RD[2'h0];
        if (io_free_list_wr_en[2'h3] & io_instruction_RD[2'h3] == 5'h3)
          speculative_RAT[5'h3] <= io_free_list_RD[2'h3];
        else if (io_free_list_wr_en[2'h2] & io_instruction_RD[2'h2] == 5'h3)
          speculative_RAT[5'h3] <= io_free_list_RD[2'h2];
        else if (io_free_list_wr_en[2'h1] & io_instruction_RD[2'h1] == 5'h3)
          speculative_RAT[5'h3] <= io_free_list_RD[2'h1];
        else if (io_free_list_wr_en[2'h0] & io_instruction_RD[2'h0] == 5'h3)
          speculative_RAT[5'h3] <= io_free_list_RD[2'h0];
        if (io_free_list_wr_en[2'h3] & io_instruction_RD[2'h3] == 5'h4)
          speculative_RAT[5'h4] <= io_free_list_RD[2'h3];
        else if (io_free_list_wr_en[2'h2] & io_instruction_RD[2'h2] == 5'h4)
          speculative_RAT[5'h4] <= io_free_list_RD[2'h2];
        else if (io_free_list_wr_en[2'h1] & io_instruction_RD[2'h1] == 5'h4)
          speculative_RAT[5'h4] <= io_free_list_RD[2'h1];
        else if (io_free_list_wr_en[2'h0] & io_instruction_RD[2'h0] == 5'h4)
          speculative_RAT[5'h4] <= io_free_list_RD[2'h0];
        if (io_free_list_wr_en[2'h3] & io_instruction_RD[2'h3] == 5'h5)
          speculative_RAT[5'h5] <= io_free_list_RD[2'h3];
        else if (io_free_list_wr_en[2'h2] & io_instruction_RD[2'h2] == 5'h5)
          speculative_RAT[5'h5] <= io_free_list_RD[2'h2];
        else if (io_free_list_wr_en[2'h1] & io_instruction_RD[2'h1] == 5'h5)
          speculative_RAT[5'h5] <= io_free_list_RD[2'h1];
        else if (io_free_list_wr_en[2'h0] & io_instruction_RD[2'h0] == 5'h5)
          speculative_RAT[5'h5] <= io_free_list_RD[2'h0];
        if (io_free_list_wr_en[2'h3] & io_instruction_RD[2'h3] == 5'h6)
          speculative_RAT[5'h6] <= io_free_list_RD[2'h3];
        else if (io_free_list_wr_en[2'h2] & io_instruction_RD[2'h2] == 5'h6)
          speculative_RAT[5'h6] <= io_free_list_RD[2'h2];
        else if (io_free_list_wr_en[2'h1] & io_instruction_RD[2'h1] == 5'h6)
          speculative_RAT[5'h6] <= io_free_list_RD[2'h1];
        else if (io_free_list_wr_en[2'h0] & io_instruction_RD[2'h0] == 5'h6)
          speculative_RAT[5'h6] <= io_free_list_RD[2'h0];
        if (io_free_list_wr_en[2'h3] & io_instruction_RD[2'h3] == 5'h7)
          speculative_RAT[5'h7] <= io_free_list_RD[2'h3];
        else if (io_free_list_wr_en[2'h2] & io_instruction_RD[2'h2] == 5'h7)
          speculative_RAT[5'h7] <= io_free_list_RD[2'h2];
        else if (io_free_list_wr_en[2'h1] & io_instruction_RD[2'h1] == 5'h7)
          speculative_RAT[5'h7] <= io_free_list_RD[2'h1];
        else if (io_free_list_wr_en[2'h0] & io_instruction_RD[2'h0] == 5'h7)
          speculative_RAT[5'h7] <= io_free_list_RD[2'h0];
        if (io_free_list_wr_en[2'h3] & io_instruction_RD[2'h3] == 5'h8)
          speculative_RAT[5'h8] <= io_free_list_RD[2'h3];
        else if (io_free_list_wr_en[2'h2] & io_instruction_RD[2'h2] == 5'h8)
          speculative_RAT[5'h8] <= io_free_list_RD[2'h2];
        else if (io_free_list_wr_en[2'h1] & io_instruction_RD[2'h1] == 5'h8)
          speculative_RAT[5'h8] <= io_free_list_RD[2'h1];
        else if (io_free_list_wr_en[2'h0] & io_instruction_RD[2'h0] == 5'h8)
          speculative_RAT[5'h8] <= io_free_list_RD[2'h0];
        if (io_free_list_wr_en[2'h3] & io_instruction_RD[2'h3] == 5'h9)
          speculative_RAT[5'h9] <= io_free_list_RD[2'h3];
        else if (io_free_list_wr_en[2'h2] & io_instruction_RD[2'h2] == 5'h9)
          speculative_RAT[5'h9] <= io_free_list_RD[2'h2];
        else if (io_free_list_wr_en[2'h1] & io_instruction_RD[2'h1] == 5'h9)
          speculative_RAT[5'h9] <= io_free_list_RD[2'h1];
        else if (io_free_list_wr_en[2'h0] & io_instruction_RD[2'h0] == 5'h9)
          speculative_RAT[5'h9] <= io_free_list_RD[2'h0];
        if (io_free_list_wr_en[2'h3] & io_instruction_RD[2'h3] == 5'hA)
          speculative_RAT[5'hA] <= io_free_list_RD[2'h3];
        else if (io_free_list_wr_en[2'h2] & io_instruction_RD[2'h2] == 5'hA)
          speculative_RAT[5'hA] <= io_free_list_RD[2'h2];
        else if (io_free_list_wr_en[2'h1] & io_instruction_RD[2'h1] == 5'hA)
          speculative_RAT[5'hA] <= io_free_list_RD[2'h1];
        else if (io_free_list_wr_en[2'h0] & io_instruction_RD[2'h0] == 5'hA)
          speculative_RAT[5'hA] <= io_free_list_RD[2'h0];
        if (io_free_list_wr_en[2'h3] & io_instruction_RD[2'h3] == 5'hB)
          speculative_RAT[5'hB] <= io_free_list_RD[2'h3];
        else if (io_free_list_wr_en[2'h2] & io_instruction_RD[2'h2] == 5'hB)
          speculative_RAT[5'hB] <= io_free_list_RD[2'h2];
        else if (io_free_list_wr_en[2'h1] & io_instruction_RD[2'h1] == 5'hB)
          speculative_RAT[5'hB] <= io_free_list_RD[2'h1];
        else if (io_free_list_wr_en[2'h0] & io_instruction_RD[2'h0] == 5'hB)
          speculative_RAT[5'hB] <= io_free_list_RD[2'h0];
        if (io_free_list_wr_en[2'h3] & io_instruction_RD[2'h3] == 5'hC)
          speculative_RAT[5'hC] <= io_free_list_RD[2'h3];
        else if (io_free_list_wr_en[2'h2] & io_instruction_RD[2'h2] == 5'hC)
          speculative_RAT[5'hC] <= io_free_list_RD[2'h2];
        else if (io_free_list_wr_en[2'h1] & io_instruction_RD[2'h1] == 5'hC)
          speculative_RAT[5'hC] <= io_free_list_RD[2'h1];
        else if (io_free_list_wr_en[2'h0] & io_instruction_RD[2'h0] == 5'hC)
          speculative_RAT[5'hC] <= io_free_list_RD[2'h0];
        if (io_free_list_wr_en[2'h3] & io_instruction_RD[2'h3] == 5'hD)
          speculative_RAT[5'hD] <= io_free_list_RD[2'h3];
        else if (io_free_list_wr_en[2'h2] & io_instruction_RD[2'h2] == 5'hD)
          speculative_RAT[5'hD] <= io_free_list_RD[2'h2];
        else if (io_free_list_wr_en[2'h1] & io_instruction_RD[2'h1] == 5'hD)
          speculative_RAT[5'hD] <= io_free_list_RD[2'h1];
        else if (io_free_list_wr_en[2'h0] & io_instruction_RD[2'h0] == 5'hD)
          speculative_RAT[5'hD] <= io_free_list_RD[2'h0];
        if (io_free_list_wr_en[2'h3] & io_instruction_RD[2'h3] == 5'hE)
          speculative_RAT[5'hE] <= io_free_list_RD[2'h3];
        else if (io_free_list_wr_en[2'h2] & io_instruction_RD[2'h2] == 5'hE)
          speculative_RAT[5'hE] <= io_free_list_RD[2'h2];
        else if (io_free_list_wr_en[2'h1] & io_instruction_RD[2'h1] == 5'hE)
          speculative_RAT[5'hE] <= io_free_list_RD[2'h1];
        else if (io_free_list_wr_en[2'h0] & io_instruction_RD[2'h0] == 5'hE)
          speculative_RAT[5'hE] <= io_free_list_RD[2'h0];
        if (io_free_list_wr_en[2'h3] & io_instruction_RD[2'h3] == 5'hF)
          speculative_RAT[5'hF] <= io_free_list_RD[2'h3];
        else if (io_free_list_wr_en[2'h2] & io_instruction_RD[2'h2] == 5'hF)
          speculative_RAT[5'hF] <= io_free_list_RD[2'h2];
        else if (io_free_list_wr_en[2'h1] & io_instruction_RD[2'h1] == 5'hF)
          speculative_RAT[5'hF] <= io_free_list_RD[2'h1];
        else if (io_free_list_wr_en[2'h0] & io_instruction_RD[2'h0] == 5'hF)
          speculative_RAT[5'hF] <= io_free_list_RD[2'h0];
        if (io_free_list_wr_en[2'h3] & io_instruction_RD[2'h3] == 5'h10)
          speculative_RAT[5'h10] <= io_free_list_RD[2'h3];
        else if (io_free_list_wr_en[2'h2] & io_instruction_RD[2'h2] == 5'h10)
          speculative_RAT[5'h10] <= io_free_list_RD[2'h2];
        else if (io_free_list_wr_en[2'h1] & io_instruction_RD[2'h1] == 5'h10)
          speculative_RAT[5'h10] <= io_free_list_RD[2'h1];
        else if (io_free_list_wr_en[2'h0] & io_instruction_RD[2'h0] == 5'h10)
          speculative_RAT[5'h10] <= io_free_list_RD[2'h0];
        if (io_free_list_wr_en[2'h3] & io_instruction_RD[2'h3] == 5'h11)
          speculative_RAT[5'h11] <= io_free_list_RD[2'h3];
        else if (io_free_list_wr_en[2'h2] & io_instruction_RD[2'h2] == 5'h11)
          speculative_RAT[5'h11] <= io_free_list_RD[2'h2];
        else if (io_free_list_wr_en[2'h1] & io_instruction_RD[2'h1] == 5'h11)
          speculative_RAT[5'h11] <= io_free_list_RD[2'h1];
        else if (io_free_list_wr_en[2'h0] & io_instruction_RD[2'h0] == 5'h11)
          speculative_RAT[5'h11] <= io_free_list_RD[2'h0];
        if (io_free_list_wr_en[2'h3] & io_instruction_RD[2'h3] == 5'h12)
          speculative_RAT[5'h12] <= io_free_list_RD[2'h3];
        else if (io_free_list_wr_en[2'h2] & io_instruction_RD[2'h2] == 5'h12)
          speculative_RAT[5'h12] <= io_free_list_RD[2'h2];
        else if (io_free_list_wr_en[2'h1] & io_instruction_RD[2'h1] == 5'h12)
          speculative_RAT[5'h12] <= io_free_list_RD[2'h1];
        else if (io_free_list_wr_en[2'h0] & io_instruction_RD[2'h0] == 5'h12)
          speculative_RAT[5'h12] <= io_free_list_RD[2'h0];
        if (io_free_list_wr_en[2'h3] & io_instruction_RD[2'h3] == 5'h13)
          speculative_RAT[5'h13] <= io_free_list_RD[2'h3];
        else if (io_free_list_wr_en[2'h2] & io_instruction_RD[2'h2] == 5'h13)
          speculative_RAT[5'h13] <= io_free_list_RD[2'h2];
        else if (io_free_list_wr_en[2'h1] & io_instruction_RD[2'h1] == 5'h13)
          speculative_RAT[5'h13] <= io_free_list_RD[2'h1];
        else if (io_free_list_wr_en[2'h0] & io_instruction_RD[2'h0] == 5'h13)
          speculative_RAT[5'h13] <= io_free_list_RD[2'h0];
        if (io_free_list_wr_en[2'h3] & io_instruction_RD[2'h3] == 5'h14)
          speculative_RAT[5'h14] <= io_free_list_RD[2'h3];
        else if (io_free_list_wr_en[2'h2] & io_instruction_RD[2'h2] == 5'h14)
          speculative_RAT[5'h14] <= io_free_list_RD[2'h2];
        else if (io_free_list_wr_en[2'h1] & io_instruction_RD[2'h1] == 5'h14)
          speculative_RAT[5'h14] <= io_free_list_RD[2'h1];
        else if (io_free_list_wr_en[2'h0] & io_instruction_RD[2'h0] == 5'h14)
          speculative_RAT[5'h14] <= io_free_list_RD[2'h0];
        if (io_free_list_wr_en[2'h3] & io_instruction_RD[2'h3] == 5'h15)
          speculative_RAT[5'h15] <= io_free_list_RD[2'h3];
        else if (io_free_list_wr_en[2'h2] & io_instruction_RD[2'h2] == 5'h15)
          speculative_RAT[5'h15] <= io_free_list_RD[2'h2];
        else if (io_free_list_wr_en[2'h1] & io_instruction_RD[2'h1] == 5'h15)
          speculative_RAT[5'h15] <= io_free_list_RD[2'h1];
        else if (io_free_list_wr_en[2'h0] & io_instruction_RD[2'h0] == 5'h15)
          speculative_RAT[5'h15] <= io_free_list_RD[2'h0];
        if (io_free_list_wr_en[2'h3] & io_instruction_RD[2'h3] == 5'h16)
          speculative_RAT[5'h16] <= io_free_list_RD[2'h3];
        else if (io_free_list_wr_en[2'h2] & io_instruction_RD[2'h2] == 5'h16)
          speculative_RAT[5'h16] <= io_free_list_RD[2'h2];
        else if (io_free_list_wr_en[2'h1] & io_instruction_RD[2'h1] == 5'h16)
          speculative_RAT[5'h16] <= io_free_list_RD[2'h1];
        else if (io_free_list_wr_en[2'h0] & io_instruction_RD[2'h0] == 5'h16)
          speculative_RAT[5'h16] <= io_free_list_RD[2'h0];
        if (io_free_list_wr_en[2'h3] & io_instruction_RD[2'h3] == 5'h17)
          speculative_RAT[5'h17] <= io_free_list_RD[2'h3];
        else if (io_free_list_wr_en[2'h2] & io_instruction_RD[2'h2] == 5'h17)
          speculative_RAT[5'h17] <= io_free_list_RD[2'h2];
        else if (io_free_list_wr_en[2'h1] & io_instruction_RD[2'h1] == 5'h17)
          speculative_RAT[5'h17] <= io_free_list_RD[2'h1];
        else if (io_free_list_wr_en[2'h0] & io_instruction_RD[2'h0] == 5'h17)
          speculative_RAT[5'h17] <= io_free_list_RD[2'h0];
        if (io_free_list_wr_en[2'h3] & io_instruction_RD[2'h3] == 5'h18)
          speculative_RAT[5'h18] <= io_free_list_RD[2'h3];
        else if (io_free_list_wr_en[2'h2] & io_instruction_RD[2'h2] == 5'h18)
          speculative_RAT[5'h18] <= io_free_list_RD[2'h2];
        else if (io_free_list_wr_en[2'h1] & io_instruction_RD[2'h1] == 5'h18)
          speculative_RAT[5'h18] <= io_free_list_RD[2'h1];
        else if (io_free_list_wr_en[2'h0] & io_instruction_RD[2'h0] == 5'h18)
          speculative_RAT[5'h18] <= io_free_list_RD[2'h0];
        if (io_free_list_wr_en[2'h3] & io_instruction_RD[2'h3] == 5'h19)
          speculative_RAT[5'h19] <= io_free_list_RD[2'h3];
        else if (io_free_list_wr_en[2'h2] & io_instruction_RD[2'h2] == 5'h19)
          speculative_RAT[5'h19] <= io_free_list_RD[2'h2];
        else if (io_free_list_wr_en[2'h1] & io_instruction_RD[2'h1] == 5'h19)
          speculative_RAT[5'h19] <= io_free_list_RD[2'h1];
        else if (io_free_list_wr_en[2'h0] & io_instruction_RD[2'h0] == 5'h19)
          speculative_RAT[5'h19] <= io_free_list_RD[2'h0];
        if (io_free_list_wr_en[2'h3] & io_instruction_RD[2'h3] == 5'h1A)
          speculative_RAT[5'h1A] <= io_free_list_RD[2'h3];
        else if (io_free_list_wr_en[2'h2] & io_instruction_RD[2'h2] == 5'h1A)
          speculative_RAT[5'h1A] <= io_free_list_RD[2'h2];
        else if (io_free_list_wr_en[2'h1] & io_instruction_RD[2'h1] == 5'h1A)
          speculative_RAT[5'h1A] <= io_free_list_RD[2'h1];
        else if (io_free_list_wr_en[2'h0] & io_instruction_RD[2'h0] == 5'h1A)
          speculative_RAT[5'h1A] <= io_free_list_RD[2'h0];
        if (io_free_list_wr_en[2'h3] & io_instruction_RD[2'h3] == 5'h1B)
          speculative_RAT[5'h1B] <= io_free_list_RD[2'h3];
        else if (io_free_list_wr_en[2'h2] & io_instruction_RD[2'h2] == 5'h1B)
          speculative_RAT[5'h1B] <= io_free_list_RD[2'h2];
        else if (io_free_list_wr_en[2'h1] & io_instruction_RD[2'h1] == 5'h1B)
          speculative_RAT[5'h1B] <= io_free_list_RD[2'h1];
        else if (io_free_list_wr_en[2'h0] & io_instruction_RD[2'h0] == 5'h1B)
          speculative_RAT[5'h1B] <= io_free_list_RD[2'h0];
        if (io_free_list_wr_en[2'h3] & io_instruction_RD[2'h3] == 5'h1C)
          speculative_RAT[5'h1C] <= io_free_list_RD[2'h3];
        else if (io_free_list_wr_en[2'h2] & io_instruction_RD[2'h2] == 5'h1C)
          speculative_RAT[5'h1C] <= io_free_list_RD[2'h2];
        else if (io_free_list_wr_en[2'h1] & io_instruction_RD[2'h1] == 5'h1C)
          speculative_RAT[5'h1C] <= io_free_list_RD[2'h1];
        else if (io_free_list_wr_en[2'h0] & io_instruction_RD[2'h0] == 5'h1C)
          speculative_RAT[5'h1C] <= io_free_list_RD[2'h0];
        if (io_free_list_wr_en[2'h3] & io_instruction_RD[2'h3] == 5'h1D)
          speculative_RAT[5'h1D] <= io_free_list_RD[2'h3];
        else if (io_free_list_wr_en[2'h2] & io_instruction_RD[2'h2] == 5'h1D)
          speculative_RAT[5'h1D] <= io_free_list_RD[2'h2];
        else if (io_free_list_wr_en[2'h1] & io_instruction_RD[2'h1] == 5'h1D)
          speculative_RAT[5'h1D] <= io_free_list_RD[2'h1];
        else if (io_free_list_wr_en[2'h0] & io_instruction_RD[2'h0] == 5'h1D)
          speculative_RAT[5'h1D] <= io_free_list_RD[2'h0];
        if (io_free_list_wr_en[2'h3] & io_instruction_RD[2'h3] == 5'h1E)
          speculative_RAT[5'h1E] <= io_free_list_RD[2'h3];
        else if (io_free_list_wr_en[2'h2] & io_instruction_RD[2'h2] == 5'h1E)
          speculative_RAT[5'h1E] <= io_free_list_RD[2'h2];
        else if (io_free_list_wr_en[2'h1] & io_instruction_RD[2'h1] == 5'h1E)
          speculative_RAT[5'h1E] <= io_free_list_RD[2'h1];
        else if (io_free_list_wr_en[2'h0] & io_instruction_RD[2'h0] == 5'h1E)
          speculative_RAT[5'h1E] <= io_free_list_RD[2'h0];
        if (io_free_list_wr_en[2'h3] & (&io_instruction_RD[2'h3]))
          speculative_RAT[5'h1F] <= io_free_list_RD[2'h3];
        else if (io_free_list_wr_en[2'h2] & (&io_instruction_RD[2'h2]))
          speculative_RAT[5'h1F] <= io_free_list_RD[2'h2];
        else if (io_free_list_wr_en[2'h1] & (&io_instruction_RD[2'h1]))
          speculative_RAT[5'h1F] <= io_free_list_RD[2'h1];
        else if (io_free_list_wr_en[2'h0] & (&io_instruction_RD[2'h0]))
          speculative_RAT[5'h1F] <= io_free_list_RD[2'h0];
      end
    end
  end // always @(posedge)
  assign io_RAT_RD =
    {{speculative_RAT[io_instruction_RD[2'h3]]},
     {speculative_RAT[io_instruction_RD[2'h2]]},
     {speculative_RAT[io_instruction_RD[2'h1]]},
     {speculative_RAT[io_instruction_RD[2'h0]]}};
  assign io_RAT_RS1 =
    {{speculative_RAT[io_instruction_RS1[2'h3]]},
     {speculative_RAT[io_instruction_RS1[2'h2]]},
     {speculative_RAT[io_instruction_RS1[2'h1]]},
     {speculative_RAT[io_instruction_RS1[2'h0]]}};
  assign io_RAT_RS2 =
    {{speculative_RAT[io_instruction_RS2[2'h3]]},
     {speculative_RAT[io_instruction_RS2[2'h2]]},
     {speculative_RAT[io_instruction_RS2[2'h1]]},
     {speculative_RAT[io_instruction_RS2[2'h0]]}};
endmodule

