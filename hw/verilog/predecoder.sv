// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module predecoder(
  input         clock,
                reset,
                io_flush,
  output        io_revert_valid,
  output [31:0] io_revert_bits_PC,
  output        io_prediction_ready,
  input         io_prediction_valid,
                io_prediction_bits_hit,
  input  [31:0] io_prediction_bits_target,
  input  [2:0]  io_prediction_bits_br_type,
  input  [15:0] io_prediction_bits_GHR,
  input         io_prediction_bits_T_NT,
  output        io_fetch_packet_ready,
  input         io_fetch_packet_valid,
  input  [31:0] io_fetch_packet_bits_fetch_PC,
  input         io_fetch_packet_bits_valid_bits_0,
                io_fetch_packet_bits_valid_bits_1,
                io_fetch_packet_bits_valid_bits_2,
                io_fetch_packet_bits_valid_bits_3,
  input  [31:0] io_fetch_packet_bits_instructions_0_instruction,
  input  [3:0]  io_fetch_packet_bits_instructions_0_packet_index,
  input  [5:0]  io_fetch_packet_bits_instructions_0_ROB_index,
  input  [31:0] io_fetch_packet_bits_instructions_1_instruction,
  input  [3:0]  io_fetch_packet_bits_instructions_1_packet_index,
  input  [5:0]  io_fetch_packet_bits_instructions_1_ROB_index,
  input  [31:0] io_fetch_packet_bits_instructions_2_instruction,
  input  [3:0]  io_fetch_packet_bits_instructions_2_packet_index,
  input  [5:0]  io_fetch_packet_bits_instructions_2_ROB_index,
  input  [31:0] io_fetch_packet_bits_instructions_3_instruction,
  input  [3:0]  io_fetch_packet_bits_instructions_3_packet_index,
  input  [5:0]  io_fetch_packet_bits_instructions_3_ROB_index,
  input  [15:0] io_fetch_packet_bits_GHR,
  input  [6:0]  io_fetch_packet_bits_NEXT,
                io_fetch_packet_bits_TOS,
                io_RAS_read_NEXT,
                io_RAS_read_TOS,
  input  [31:0] io_RAS_read_ret_addr,
  input         io_commit_valid,
  input  [31:0] io_commit_bits_fetch_PC,
  input         io_commit_bits_T_NT,
  input  [5:0]  io_commit_bits_ROB_index,
  input  [2:0]  io_commit_bits_br_type,
  input  [1:0]  io_commit_bits_fetch_packet_index,
  input         io_commit_bits_is_misprediction,
                io_commit_bits_exception,
  input  [31:0] io_commit_bits_expected_PC,
  input  [15:0] io_commit_bits_GHR,
  input  [6:0]  io_commit_bits_TOS,
                io_commit_bits_NEXT,
  input  [7:0]  io_commit_bits_free_list_front_pointer,
  input  [4:0]  io_commit_bits_RDold_0,
                io_commit_bits_RDold_1,
                io_commit_bits_RDold_2,
                io_commit_bits_RDold_3,
  input  [6:0]  io_commit_bits_RD_0,
                io_commit_bits_RD_1,
                io_commit_bits_RD_2,
                io_commit_bits_RD_3,
  input         io_commit_bits_RD_valid_0,
                io_commit_bits_RD_valid_1,
                io_commit_bits_RD_valid_2,
                io_commit_bits_RD_valid_3,
                io_predictions_ready,
  output        io_predictions_valid,
                io_predictions_bits_valid,
  output [31:0] io_predictions_bits_fetch_PC,
  output        io_predictions_bits_is_misprediction,
  output [31:0] io_predictions_bits_predicted_PC,
  output [5:0]  io_predictions_bits_ROB_index,
  output        io_predictions_bits_T_NT,
  output [2:0]  io_predictions_bits_br_type,
  output [1:0]  io_predictions_bits_dominant_index,
  output [31:0] io_predictions_bits_resolved_PC,
  input         io_final_fetch_packet_ready,
  output        io_final_fetch_packet_valid,
  output [31:0] io_final_fetch_packet_bits_fetch_PC,
  output        io_final_fetch_packet_bits_valid_bits_0,
                io_final_fetch_packet_bits_valid_bits_1,
                io_final_fetch_packet_bits_valid_bits_2,
                io_final_fetch_packet_bits_valid_bits_3,
  output [31:0] io_final_fetch_packet_bits_instructions_0_instruction,
  output [3:0]  io_final_fetch_packet_bits_instructions_0_packet_index,
  output [5:0]  io_final_fetch_packet_bits_instructions_0_ROB_index,
  output [31:0] io_final_fetch_packet_bits_instructions_1_instruction,
  output [3:0]  io_final_fetch_packet_bits_instructions_1_packet_index,
  output [5:0]  io_final_fetch_packet_bits_instructions_1_ROB_index,
  output [31:0] io_final_fetch_packet_bits_instructions_2_instruction,
  output [3:0]  io_final_fetch_packet_bits_instructions_2_packet_index,
  output [5:0]  io_final_fetch_packet_bits_instructions_2_ROB_index,
  output [31:0] io_final_fetch_packet_bits_instructions_3_instruction,
  output [3:0]  io_final_fetch_packet_bits_instructions_3_packet_index,
  output [5:0]  io_final_fetch_packet_bits_instructions_3_ROB_index,
  output [15:0] io_final_fetch_packet_bits_GHR,
  output [6:0]  io_final_fetch_packet_bits_NEXT,
                io_final_fetch_packet_bits_TOS,
  output [15:0] io_GHR,
  output [31:0] io_RAS_update_call_addr,
  output        io_RAS_update_call,
                io_RAS_update_ret
);

  reg              io_fetch_packet_ready_REG;
  reg              io_prediction_ready_REG;
  wire             is_JALR;
  wire             is_JAL;
  wire             _final_fetch_packet_out_Q_io_enq_ready;
  wire             _is_BTB_taken_T_9 = io_prediction_valid & io_prediction_bits_hit;
  wire             curr_is_JAL =
    io_fetch_packet_bits_instructions_3_instruction[6:2] == 5'h1B
    & io_fetch_packet_bits_valid_bits_3 & io_fetch_packet_valid;
  wire             curr_is_JALR =
    io_fetch_packet_bits_instructions_3_instruction[6:2] == 5'h19
    & io_fetch_packet_bits_valid_bits_3 & io_fetch_packet_valid;
  wire             curr_is_BRANCH =
    io_fetch_packet_bits_instructions_3_instruction[6:2] == 5'h18
    & io_fetch_packet_bits_valid_bits_3 & io_fetch_packet_valid;
  wire             _curr_is_CALL_T_2 =
    io_fetch_packet_bits_instructions_3_instruction[11:7] == 5'h1;
  wire             is_taken =
    curr_is_BRANCH & _is_BTB_taken_T_9 & io_prediction_bits_T_NT
    & io_fetch_packet_bits_valid_bits_3 & io_fetch_packet_valid | curr_is_JALR
    | curr_is_JAL;
  wire             is_control_3 = curr_is_BRANCH | curr_is_JAL | curr_is_JALR;
  wire             curr_is_JAL_1 =
    io_fetch_packet_bits_instructions_2_instruction[6:2] == 5'h1B
    & io_fetch_packet_bits_valid_bits_2 & io_fetch_packet_valid;
  wire             curr_is_JALR_1 =
    io_fetch_packet_bits_instructions_2_instruction[6:2] == 5'h19
    & io_fetch_packet_bits_valid_bits_2 & io_fetch_packet_valid;
  wire             curr_is_BRANCH_1 =
    io_fetch_packet_bits_instructions_2_instruction[6:2] == 5'h18
    & io_fetch_packet_bits_valid_bits_2 & io_fetch_packet_valid;
  wire             _curr_is_CALL_T_6 =
    io_fetch_packet_bits_instructions_2_instruction[11:7] == 5'h1;
  wire             T_NT_2 =
    curr_is_BRANCH_1 & _is_BTB_taken_T_9 & io_prediction_bits_T_NT
    & io_fetch_packet_bits_valid_bits_2 & io_fetch_packet_valid | curr_is_JALR_1
    | curr_is_JAL_1;
  wire             is_control_2 = curr_is_BRANCH_1 | curr_is_JAL_1 | curr_is_JALR_1;
  wire             curr_is_JAL_2 =
    io_fetch_packet_bits_instructions_1_instruction[6:2] == 5'h1B
    & io_fetch_packet_bits_valid_bits_1 & io_fetch_packet_valid;
  wire             curr_is_JALR_2 =
    io_fetch_packet_bits_instructions_1_instruction[6:2] == 5'h19
    & io_fetch_packet_bits_valid_bits_1 & io_fetch_packet_valid;
  wire             curr_is_BRANCH_2 =
    io_fetch_packet_bits_instructions_1_instruction[6:2] == 5'h18
    & io_fetch_packet_bits_valid_bits_1 & io_fetch_packet_valid;
  wire             _curr_is_CALL_T_10 =
    io_fetch_packet_bits_instructions_1_instruction[11:7] == 5'h1;
  wire             T_NT_1 =
    curr_is_BRANCH_2 & _is_BTB_taken_T_9 & io_prediction_bits_T_NT
    & io_fetch_packet_bits_valid_bits_1 & io_fetch_packet_valid | curr_is_JALR_2
    | curr_is_JAL_2;
  wire             curr_is_JAL_3 =
    io_fetch_packet_bits_instructions_0_instruction[6:2] == 5'h1B
    & io_fetch_packet_bits_valid_bits_0 & io_fetch_packet_valid;
  wire             curr_is_JALR_3 =
    io_fetch_packet_bits_instructions_0_instruction[6:2] == 5'h19
    & io_fetch_packet_bits_valid_bits_0 & io_fetch_packet_valid;
  wire             curr_is_BRANCH_3 =
    io_fetch_packet_bits_instructions_0_instruction[6:2] == 5'h18
    & io_fetch_packet_bits_valid_bits_0 & io_fetch_packet_valid;
  wire             _curr_is_CALL_T_14 =
    io_fetch_packet_bits_instructions_0_instruction[11:7] == 5'h1;
  wire             T_NT_0 =
    curr_is_BRANCH_3 & _is_BTB_taken_T_9 & io_prediction_bits_T_NT
    & io_fetch_packet_bits_valid_bits_0 & io_fetch_packet_valid | curr_is_JALR_3
    | curr_is_JAL_3;
  assign is_JAL =
    T_NT_0
      ? curr_is_JAL_3
      : T_NT_1 ? curr_is_JAL_2 : T_NT_2 ? curr_is_JAL_1 : is_taken & curr_is_JAL;
  assign is_JALR =
    T_NT_0
      ? curr_is_JALR_3
      : T_NT_1 ? curr_is_JALR_2 : T_NT_2 ? curr_is_JALR_1 : is_taken & curr_is_JALR;
  wire             is_BRANCH =
    T_NT_0
      ? curr_is_BRANCH_3
      : T_NT_1 ? curr_is_BRANCH_2 : T_NT_2 ? curr_is_BRANCH_1 : is_taken & curr_is_BRANCH;
  wire             is_RET =
    T_NT_0
      ? is_JALR & io_fetch_packet_bits_instructions_0_instruction[11:7] == 5'h0
        & io_fetch_packet_bits_instructions_0_instruction[19:15] == 5'h1
      : T_NT_1
          ? is_JALR & io_fetch_packet_bits_instructions_1_instruction[11:7] == 5'h0
            & io_fetch_packet_bits_instructions_1_instruction[19:15] == 5'h1
          : T_NT_2
              ? is_JALR & io_fetch_packet_bits_instructions_2_instruction[11:7] == 5'h0
                & io_fetch_packet_bits_instructions_2_instruction[19:15] == 5'h1
              : is_taken & is_JALR
                & io_fetch_packet_bits_instructions_3_instruction[11:7] == 5'h0
                & io_fetch_packet_bits_instructions_3_instruction[19:15] == 5'h1;
  wire             is_CALL =
    T_NT_0
      ? is_JALR & _curr_is_CALL_T_14 | is_JAL & _curr_is_CALL_T_14
      : T_NT_1
          ? is_JALR & _curr_is_CALL_T_10 | is_JAL & _curr_is_CALL_T_10
          : T_NT_2
              ? is_JALR & _curr_is_CALL_T_6 | is_JAL & _curr_is_CALL_T_6
              : is_taken & (is_JALR & _curr_is_CALL_T_2 | is_JAL & _curr_is_CALL_T_2);
  wire [1:0]       dominant_branch_index =
    T_NT_0 ? 2'h0 : T_NT_1 ? 2'h1 : {1'h1, ~T_NT_2};
  wire [3:0][31:0] _GEN =
    {{io_fetch_packet_bits_instructions_3_instruction},
     {io_fetch_packet_bits_instructions_2_instruction},
     {io_fetch_packet_bits_instructions_1_instruction},
     {io_fetch_packet_bits_instructions_0_instruction}};
  wire [31:0]      dominant_instruction = _GEN[dominant_branch_index];
  wire [1:0]       _GEN_0 = {1'h0, T_NT_0};
  wire [1:0]       _GEN_1 = {1'h0, T_NT_1};
  wire [31:0]      masked_addr = io_fetch_packet_bits_fetch_PC & 32'hFFFFFFF0;
  wire [8:0]       _GEN_2 = {9{dominant_instruction[31]}};
  wire [20:0]      imm_imm =
    dominant_instruction[6:0] == 7'h63
      ? {{9{dominant_instruction[31]}},
         dominant_instruction[7],
         dominant_instruction[30:25],
         dominant_instruction[11:8],
         1'h0}
      : dominant_instruction[6:0] == 7'h6F
          ? {dominant_instruction[31],
             dominant_instruction[19:12],
             dominant_instruction[20],
             dominant_instruction[30:21],
             1'h0}
          : dominant_instruction[6:0] == 7'h13 | dominant_instruction[6:0] == 7'h3
            | dominant_instruction[6:0] == 7'h67
              ? {_GEN_2, dominant_instruction[31:20]}
              : dominant_instruction[6:0] == 7'h23
                  ? {_GEN_2, dominant_instruction[31:25], dominant_instruction[11:7]}
                  : dominant_instruction[6:0] == 7'h17
                    | dominant_instruction[6:0] == 7'h37
                      ? {dominant_instruction[31], dominant_instruction[31:12]}
                      : 21'h0;
  wire [31:0]      _GEN_3 = {28'h0, dominant_branch_index, 2'h0};
  wire [31:0]      target_address =
    is_RET
      ? io_RAS_read_ret_addr
      : is_JAL
          ? (is_RET | ~is_JAL ? 32'h0 : {{11{imm_imm[20]}}, imm_imm}) + masked_addr
            + _GEN_3
          : is_JALR & io_prediction_bits_hit & io_prediction_valid | is_BRANCH
            & io_prediction_bits_hit & io_prediction_valid
              ? io_prediction_bits_target
              : io_fetch_packet_bits_fetch_PC
                + {26'h0, 6'h10 - {2'h0, io_fetch_packet_bits_fetch_PC[3:0]}};
  reg  [31:0]      expected_next_PC;
  wire             _input_fetch_packet_valid_T =
    io_fetch_packet_ready_REG & io_fetch_packet_valid;
  wire             _input_fetch_packet_valid_T_1 =
    io_prediction_ready_REG & io_prediction_valid;
  wire             output_ready = io_final_fetch_packet_ready & io_predictions_ready;
  wire             input_fetch_packet_valid =
    _input_fetch_packet_valid_T & (_input_fetch_packet_valid_T_1 | ~io_prediction_valid)
    & expected_next_PC == io_fetch_packet_bits_fetch_PC & ~io_flush;
  reg  [15:0]      GHR;
  wire             _push_FTQ_T =
    curr_is_BRANCH_3 | curr_is_JAL_3 | curr_is_JALR_3 | curr_is_BRANCH_2 | curr_is_JAL_2
    | curr_is_JALR_2;
  wire             _GEN_4 = _push_FTQ_T | is_control_2 | is_control_3;
  wire [15:0]      _GEN_5 = {GHR[14:0], T_NT_0 | T_NT_1 | T_NT_2 | is_taken};
  wire             predictions_out_bits_T_NT = T_NT_0 | T_NT_1 | T_NT_2 | is_taken;
  always @(posedge clock) begin
    if (reset) begin
      expected_next_PC <= 32'h0;
      GHR <= 16'h0;
    end
    else begin
      if (io_commit_valid & io_commit_bits_is_misprediction)
        expected_next_PC <= io_commit_bits_fetch_PC;
      else if (input_fetch_packet_valid & _final_fetch_packet_out_Q_io_enq_ready)
        expected_next_PC <= target_address;
      if (io_commit_bits_is_misprediction)
        GHR <= io_commit_bits_GHR;
      else if (_GEN_4)
        GHR <= _GEN_5;
    end
    io_prediction_ready_REG <= output_ready;
    io_fetch_packet_ready_REG <= output_ready;
  end // always @(posedge)
  Queue2_FTQ_entry predictions_out_Q (
    .clock                        (clock),
    .reset                        (reset),
    .io_enq_valid
      ((_push_FTQ_T | is_control_2 | is_control_3) & input_fetch_packet_valid),
    .io_enq_bits_valid            (1'h0),
    .io_enq_bits_fetch_PC         (io_fetch_packet_bits_fetch_PC),
    .io_enq_bits_is_misprediction (1'h0),
    .io_enq_bits_predicted_PC
      (predictions_out_bits_T_NT
         ? target_address
         : io_fetch_packet_bits_fetch_PC + 32'h10),
    .io_enq_bits_ROB_index        (6'h0),
    .io_enq_bits_T_NT             (predictions_out_bits_T_NT),
    .io_enq_bits_br_type
      (is_BRANCH
         ? 3'h1
         : is_RET ? 3'h4 : is_CALL ? 3'h5 : is_JALR ? 3'h3 : {1'h0, is_JAL, 1'h0}),
    .io_enq_bits_dominant_index   (2'h3),
    .io_enq_bits_resolved_PC      (io_fetch_packet_bits_fetch_PC + 32'h10),
    .io_deq_ready                 (output_ready),
    .io_deq_valid                 (io_predictions_valid),
    .io_deq_bits_valid            (io_predictions_bits_valid),
    .io_deq_bits_fetch_PC         (io_predictions_bits_fetch_PC),
    .io_deq_bits_is_misprediction (io_predictions_bits_is_misprediction),
    .io_deq_bits_predicted_PC     (io_predictions_bits_predicted_PC),
    .io_deq_bits_ROB_index        (io_predictions_bits_ROB_index),
    .io_deq_bits_T_NT             (io_predictions_bits_T_NT),
    .io_deq_bits_br_type          (io_predictions_bits_br_type),
    .io_deq_bits_dominant_index   (io_predictions_bits_dominant_index),
    .io_deq_bits_resolved_PC      (io_predictions_bits_resolved_PC),
    .io_flush                     (io_flush)
  );
  Queue2_fetch_packet final_fetch_packet_out_Q (
    .clock                                   (clock),
    .reset                                   (reset),
    .io_enq_ready                            (_final_fetch_packet_out_Q_io_enq_ready),
    .io_enq_valid                            (input_fetch_packet_valid),
    .io_enq_bits_fetch_PC                    (masked_addr),
    .io_enq_bits_valid_bits_0
      (io_fetch_packet_bits_valid_bits_0 & io_fetch_packet_valid),
    .io_enq_bits_valid_bits_1
      (io_fetch_packet_bits_valid_bits_1 & io_fetch_packet_valid & ~T_NT_0),
    .io_enq_bits_valid_bits_2
      (io_fetch_packet_bits_valid_bits_2 & io_fetch_packet_valid & _GEN_0
       + _GEN_1 == 2'h0),
    .io_enq_bits_valid_bits_3
      (io_fetch_packet_bits_valid_bits_3 & io_fetch_packet_valid & _GEN_0 + _GEN_1
       + {1'h0, T_NT_2} == 2'h0),
    .io_enq_bits_instructions_0_instruction
      (io_fetch_packet_bits_instructions_0_instruction),
    .io_enq_bits_instructions_0_packet_index
      (io_fetch_packet_bits_instructions_0_packet_index),
    .io_enq_bits_instructions_0_ROB_index
      (io_fetch_packet_bits_instructions_0_ROB_index),
    .io_enq_bits_instructions_1_instruction
      (io_fetch_packet_bits_instructions_1_instruction),
    .io_enq_bits_instructions_1_packet_index
      (io_fetch_packet_bits_instructions_1_packet_index),
    .io_enq_bits_instructions_1_ROB_index
      (io_fetch_packet_bits_instructions_1_ROB_index),
    .io_enq_bits_instructions_2_instruction
      (io_fetch_packet_bits_instructions_2_instruction),
    .io_enq_bits_instructions_2_packet_index
      (io_fetch_packet_bits_instructions_2_packet_index),
    .io_enq_bits_instructions_2_ROB_index
      (io_fetch_packet_bits_instructions_2_ROB_index),
    .io_enq_bits_instructions_3_instruction
      (io_fetch_packet_bits_instructions_3_instruction),
    .io_enq_bits_instructions_3_packet_index
      (io_fetch_packet_bits_instructions_3_packet_index),
    .io_enq_bits_instructions_3_ROB_index
      (io_fetch_packet_bits_instructions_3_ROB_index),
    .io_enq_bits_GHR                         (GHR),
    .io_enq_bits_NEXT                        (io_RAS_read_NEXT),
    .io_enq_bits_TOS                         (io_RAS_read_TOS),
    .io_deq_ready                            (output_ready),
    .io_deq_valid                            (io_final_fetch_packet_valid),
    .io_deq_bits_fetch_PC                    (io_final_fetch_packet_bits_fetch_PC),
    .io_deq_bits_valid_bits_0                (io_final_fetch_packet_bits_valid_bits_0),
    .io_deq_bits_valid_bits_1                (io_final_fetch_packet_bits_valid_bits_1),
    .io_deq_bits_valid_bits_2                (io_final_fetch_packet_bits_valid_bits_2),
    .io_deq_bits_valid_bits_3                (io_final_fetch_packet_bits_valid_bits_3),
    .io_deq_bits_instructions_0_instruction
      (io_final_fetch_packet_bits_instructions_0_instruction),
    .io_deq_bits_instructions_0_packet_index
      (io_final_fetch_packet_bits_instructions_0_packet_index),
    .io_deq_bits_instructions_0_ROB_index
      (io_final_fetch_packet_bits_instructions_0_ROB_index),
    .io_deq_bits_instructions_1_instruction
      (io_final_fetch_packet_bits_instructions_1_instruction),
    .io_deq_bits_instructions_1_packet_index
      (io_final_fetch_packet_bits_instructions_1_packet_index),
    .io_deq_bits_instructions_1_ROB_index
      (io_final_fetch_packet_bits_instructions_1_ROB_index),
    .io_deq_bits_instructions_2_instruction
      (io_final_fetch_packet_bits_instructions_2_instruction),
    .io_deq_bits_instructions_2_packet_index
      (io_final_fetch_packet_bits_instructions_2_packet_index),
    .io_deq_bits_instructions_2_ROB_index
      (io_final_fetch_packet_bits_instructions_2_ROB_index),
    .io_deq_bits_instructions_3_instruction
      (io_final_fetch_packet_bits_instructions_3_instruction),
    .io_deq_bits_instructions_3_packet_index
      (io_final_fetch_packet_bits_instructions_3_packet_index),
    .io_deq_bits_instructions_3_ROB_index
      (io_final_fetch_packet_bits_instructions_3_ROB_index),
    .io_deq_bits_GHR                         (io_final_fetch_packet_bits_GHR),
    .io_deq_bits_NEXT                        (io_final_fetch_packet_bits_NEXT),
    .io_deq_bits_TOS                         (io_final_fetch_packet_bits_TOS),
    .io_flush                                (io_flush)
  );
  assign io_revert_valid =
    _input_fetch_packet_valid_T & _input_fetch_packet_valid_T_1 & ~io_flush
    & expected_next_PC != io_fetch_packet_bits_fetch_PC;
  assign io_revert_bits_PC = expected_next_PC;
  assign io_prediction_ready = io_prediction_ready_REG;
  assign io_fetch_packet_ready = io_fetch_packet_ready_REG;
  assign io_GHR = _GEN_4 ? _GEN_5 : GHR;
  assign io_RAS_update_call_addr = masked_addr + _GEN_3 + 32'h4;
  assign io_RAS_update_call = is_CALL & input_fetch_packet_valid;
  assign io_RAS_update_ret = is_RET & input_fetch_packet_valid;
endmodule

