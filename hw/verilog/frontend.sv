// Generated by CIRCT firtool-1.76.0
module frontend(
  inputclock,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            reset,
io_flush,
io_memory_request_ready,
  outputio_memory_request_valid,
  output struct packed {logic [31:0] addr; logic [31:0] wr_data; logic wr_en; }io_memory_request_bits,
  output                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    io_memory_response_ready,
  inputio_memory_response_valid,
  input  struct packed {logic [31:0] fetch_PC; logic [3:0] valid_bits; struct packed {logic [31:0] instruction; logic [3:0] packet_index; logic [5:0] ROB_index; }[3:0] instructions; logic [15:0] GHR; logic [6:0] NEXT; logic [6:0] TOS; }io_memory_response_bits,
  input  struct packed {logic valid; struct packed {logic [31:0] fetch_PC; logic T_NT; logic [5:0] ROB_index; logic [2:0] br_type; logic [1:0] fetch_packet_index; logic is_misprediction; logic exception; logic [31:0] expected_PC; logic [15:0] GHR; logic [6:0] TOS; logic [6:0] NEXT; logic [7:0] free_list_front_pointer; logic [3:0][4:0] RDold; logic [3:0][6:0] RD; logic [3:0] RD_valid; } bits; }                                                                                                                                                                                                                                                                                                                                                                io_commit,
  inputio_predictions_ready,
  outputio_predictions_valid,
  output struct packed {logic valid; logic [31:0] fetch_PC; logic is_misprediction; logic [31:0] predicted_PC; logic [5:0] ROB_index; logic T_NT; logic [2:0] br_type; logic [1:0] dominant_index; logic [31:0] resolved_PC; }io_predictions_bits,
  inputio_renamed_decoded_fetch_packet_ready,
  outputio_renamed_decoded_fetch_packet_valid,
  output struct packed {logic [31:0] fetch_PC; struct packed {struct packed {logic RS1_ready; logic RS2_ready; } ready_bits; logic [4:0] RDold; logic [6:0] RD; logic RD_valid; logic [6:0] RS1; logic RS1_valid; logic [6:0] RS2; logic RS2_valid; logic [20:0] IMM; logic [2:0] FUNCT3; logic [1:0] packet_index; logic [5:0] ROB_index; logic [3:0] MOB_index; logic [3:0] FTQ_index; logic [4:0] instructionType; logic [1:0] portID; logic [1:0] RS_type; logic needs_ALU; logic needs_branch_unit; logic needs_CSRs; logic SUBTRACT; logic MULTIPLY; logic IS_IMM; logic [1:0] memory_type; logic [1:0] access_width; }[3:0] decoded_instruction; logic [3:0] valid_bits; logic [15:0] GHR; logic [6:0] TOS; logic [6:0] NEXT; logic [7:0] free_list_front_pointer; } io_renamed_decoded_fetch_packet_bits,
  input  struct packed {logic valid; struct packed {logic [6:0] RD; logic [31:0] RD_data; logic RD_valid; logic [31:0] fetch_PC; logic branch_taken; logic [31:0] target_address; logic branch_valid; logic [31:0] address; logic [1:0] memory_type; logic [1:0] access_width; logic is_unsigned; logic [31:0] wr_data; logic [3:0] MOB_index; logic [5:0] ROB_index; logic [3:0] FTQ_index; logic [1:0] fetch_packet_index; logic exception; } bits; }[3:0]                                                                                                                                                                                                                                                                                                                io_FU_outputs,
  output struct packed {logic valid; struct packed {logic [31:0] PC; } bits; }io_revert
);

  wire _rename_io_predictions_in_ready;
  wire _rename_io_decoded_fetch_packet_ready;
  wire _FTQ_queue_io_enq_ready;
  wire _FTQ_queue_io_deq_valid;
  wire
    struct packed {logic valid; logic [31:0] fetch_PC; logic is_misprediction; logic [31:0] predicted_PC; logic [5:0] ROB_index; logic T_NT; logic [2:0] br_type; logic [1:0] dominant_index; logic [31:0] resolved_PC; }
    _FTQ_queue_io_deq_bits;
  wire _instruction_queue_io_enq_ready;
  wire _instruction_queue_io_deq_valid;
  wire
    struct packed {logic [31:0] fetch_PC; struct packed {struct packed {logic RS1_ready; logic RS2_ready; } ready_bits; logic [4:0] RDold; logic [6:0] RD; logic RD_valid; logic [6:0] RS1; logic RS1_valid; logic [6:0] RS2; logic RS2_valid; logic [20:0] IMM; logic [2:0] FUNCT3; logic [1:0] packet_index; logic [5:0] ROB_index; logic [3:0] MOB_index; logic [3:0] FTQ_index; logic [4:0] instructionType; logic [1:0] portID; logic [1:0] RS_type; logic needs_ALU; logic needs_branch_unit; logic needs_CSRs; logic SUBTRACT; logic MULTIPLY; logic IS_IMM; logic [1:0] memory_type; logic [1:0] access_width; }[3:0] decoded_instruction; logic [3:0] valid_bits; logic [15:0] GHR; logic [6:0] TOS; logic [6:0] NEXT; logic [7:0] free_list_front_pointer; }
    _instruction_queue_io_deq_bits;
  wire _decoders_io_fetch_packet_ready;
  wire _decoders_io_predictions_in_ready;
  wire _decoders_io_decoded_fetch_packet_valid;
  wire
    struct packed {logic [31:0] fetch_PC; struct packed {struct packed {logic RS1_ready; logic RS2_ready; } ready_bits; logic [4:0] RDold; logic [6:0] RD; logic RD_valid; logic [6:0] RS1; logic RS1_valid; logic [6:0] RS2; logic RS2_valid; logic [20:0] IMM; logic [2:0] FUNCT3; logic [1:0] packet_index; logic [5:0] ROB_index; logic [3:0] MOB_index; logic [3:0] FTQ_index; logic [4:0] instructionType; logic [1:0] portID; logic [1:0] RS_type; logic needs_ALU; logic needs_branch_unit; logic needs_CSRs; logic SUBTRACT; logic MULTIPLY; logic IS_IMM; logic [1:0] memory_type; logic [1:0] access_width; }[3:0] decoded_instruction; logic [3:0] valid_bits; logic [15:0] GHR; logic [6:0] TOS; logic [6:0] NEXT; logic [7:0] free_list_front_pointer; }
    _decoders_io_decoded_fetch_packet_bits;
  wire _decoders_io_predictions_out_valid;
  wire
    struct packed {logic valid; logic [31:0] fetch_PC; logic is_misprediction; logic [31:0] predicted_PC; logic [5:0] ROB_index; logic T_NT; logic [2:0] br_type; logic [1:0] dominant_index; logic [31:0] resolved_PC; }
    _decoders_io_predictions_out_bits;
  wire _instruction_fetch_io_fetch_packet_valid;
  wire
    struct packed {logic [31:0] fetch_PC; logic [3:0] valid_bits; struct packed {logic [31:0] instruction; logic [3:0] packet_index; logic [5:0] ROB_index; }[3:0] instructions; logic [15:0] GHR; logic [6:0] NEXT; logic [6:0] TOS; }
    _instruction_fetch_io_fetch_packet_bits;
  wire _instruction_fetch_io_predictions_valid;
  wire
    struct packed {logic valid; logic [31:0] fetch_PC; logic is_misprediction; logic [31:0] predicted_PC; logic [5:0] ROB_index; logic T_NT; logic [2:0] br_type; logic [1:0] dominant_index; logic [31:0] resolved_PC; }
    _instruction_fetch_io_predictions_bits;
  instruction_fetch instruction_fetch (
    .clock                    (clock),
    .reset                    (reset),
    .io_flush                 (io_flush),
    .io_commit                (io_commit),
    .io_memory_response_ready (io_memory_response_ready),
    .io_memory_response_valid (io_memory_response_valid),
    .io_memory_response_bits  (io_memory_response_bits),
    .io_memory_request_ready  (io_memory_request_ready),
    .io_memory_request_valid  (io_memory_request_valid),
    .io_memory_request_bits   (io_memory_request_bits),
    .io_fetch_packet_ready    (_decoders_io_fetch_packet_ready),
    .io_fetch_packet_valid    (_instruction_fetch_io_fetch_packet_valid),
    .io_fetch_packet_bits     (_instruction_fetch_io_fetch_packet_bits),
    .io_predictions_ready     (_decoders_io_predictions_in_ready),
    .io_predictions_valid     (_instruction_fetch_io_predictions_valid),
    .io_predictions_bits      (_instruction_fetch_io_predictions_bits),
    .io_revert                (io_revert)
  );
  fetch_packet_decoder decoders (
    .clock                         (clock),
    .reset                         (reset),
    .io_flush                      (io_flush),
    .io_fetch_packet_ready         (_decoders_io_fetch_packet_ready),
    .io_fetch_packet_valid         (_instruction_fetch_io_fetch_packet_valid),
    .io_fetch_packet_bits          (_instruction_fetch_io_fetch_packet_bits),
    .io_predictions_in_ready       (_decoders_io_predictions_in_ready),
    .io_predictions_in_valid       (_instruction_fetch_io_predictions_valid),
    .io_predictions_in_bits        (_instruction_fetch_io_predictions_bits),
    .io_decoded_fetch_packet_ready (_instruction_queue_io_enq_ready),
    .io_decoded_fetch_packet_valid (_decoders_io_decoded_fetch_packet_valid),
    .io_decoded_fetch_packet_bits  (_decoders_io_decoded_fetch_packet_bits),
    .io_predictions_out_ready      (_FTQ_queue_io_enq_ready),
    .io_predictions_out_valid      (_decoders_io_predictions_out_valid),
    .io_predictions_out_bits       (_decoders_io_predictions_out_bits)
  );
  Queue16_decoded_fetch_packet instruction_queue (
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_instruction_queue_io_enq_ready),
    .io_enq_valid (_decoders_io_decoded_fetch_packet_valid & _FTQ_queue_io_enq_ready),
    .io_enq_bits  (_decoders_io_decoded_fetch_packet_bits),
    .io_deq_ready (_rename_io_decoded_fetch_packet_ready),
    .io_deq_valid (_instruction_queue_io_deq_valid),
    .io_deq_bits  (_instruction_queue_io_deq_bits),
    .io_count     (/* unused */),
    .io_flush     (io_flush)
  );
  Queue16_FTQ_entry FTQ_queue (
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_FTQ_queue_io_enq_ready),
    .io_enq_valid (_decoders_io_predictions_out_valid & _instruction_queue_io_enq_ready),
    .io_enq_bits  (_decoders_io_predictions_out_bits),
    .io_deq_ready (_rename_io_predictions_in_ready),
    .io_deq_valid (_FTQ_queue_io_deq_valid),
    .io_deq_bits  (_FTQ_queue_io_deq_bits),
    .io_count     (/* unused */),
    .io_flush     (io_flush)
  );
  rename rename (
    .clock                                 (clock),
    .reset                                 (reset),
    .io_flush                              (io_flush),
    .io_commit                             (io_commit),
    .io_predictions_in_ready               (_rename_io_predictions_in_ready),
    .io_predictions_in_valid               (_FTQ_queue_io_deq_valid),
    .io_predictions_in_bits                (_FTQ_queue_io_deq_bits),
    .io_predictions_out_ready              (io_predictions_ready),
    .io_predictions_out_valid              (io_predictions_valid),
    .io_predictions_out_bits               (io_predictions_bits),
    .io_decoded_fetch_packet_ready         (_rename_io_decoded_fetch_packet_ready),
    .io_decoded_fetch_packet_valid         (_instruction_queue_io_deq_valid),
    .io_decoded_fetch_packet_bits          (_instruction_queue_io_deq_bits),
    .io_FU_outputs                         (io_FU_outputs),
    .io_renamed_decoded_fetch_packet_ready (io_renamed_decoded_fetch_packet_ready),
    .io_renamed_decoded_fetch_packet_valid (io_renamed_decoded_fetch_packet_valid),
    .io_renamed_decoded_fetch_packet_bits  (io_renamed_decoded_fetch_packet_bits)
  );
endmodule

