// Generated by CIRCT firtool-1.76.0

// Include register initializers in init blocks unless synthesis is set
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for register randomization.

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_
module PC_gen(	// src/main/scala/Frontend/BP/PC_gen.scala:40:7
  input         clock,	// src/main/scala/Frontend/BP/PC_gen.scala:40:7
                reset,	// src/main/scala/Frontend/BP/PC_gen.scala:40:7
                io_commit_valid,	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
  input  [31:0] io_commit_bits_fetch_PC,	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
  input         io_commit_bits_T_NT,	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
  input  [5:0]  io_commit_bits_ROB_index,	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
  input  [2:0]  io_commit_bits_br_type,	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
  input  [1:0]  io_commit_bits_fetch_packet_index,	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
  input         io_commit_bits_is_misprediction,	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
                io_commit_bits_exception,	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
  input  [31:0] io_commit_bits_expected_PC,	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
  input  [15:0] io_commit_bits_GHR,	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
  input  [6:0]  io_commit_bits_TOS,	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
                io_commit_bits_NEXT,	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
  input  [3:0]  io_commit_bits_RAT_index,	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
  input  [7:0]  io_commit_bits_free_list_front_pointer,	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
  input  [6:0]  io_commit_bits_RD_0,	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
                io_commit_bits_RD_1,	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
                io_commit_bits_RD_2,	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
                io_commit_bits_RD_3,	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
  input         io_commit_bits_RD_valid_0,	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
                io_commit_bits_RD_valid_1,	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
                io_commit_bits_RD_valid_2,	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
                io_commit_bits_RD_valid_3,	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
                io_revert_valid,	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
  input  [31:0] io_revert_bits_PC,	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
  output        io_prediction_ready,	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
  input         io_prediction_valid,	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
                io_prediction_bits_hit,	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
  input  [31:0] io_prediction_bits_target,	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
  input  [2:0]  io_prediction_bits_br_type,	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
  input  [15:0] io_prediction_bits_GHR,	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
  input         io_prediction_bits_T_NT,	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
  input  [6:0]  io_RAS_read_NEXT,	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
                io_RAS_read_TOS,	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
  input  [31:0] io_RAS_read_ret_addr,	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
  input         io_PC_next_ready,	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
  output        io_PC_next_valid,	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
  output [31:0] io_PC_next_bits_addr,	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
                io_PC_next_bits_wr_data,	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
  output        io_PC_next_bits_wr_en	// src/main/scala/Frontend/BP/PC_gen.scala:43:16
);

  reg  [31:0] PC_reg;	// src/main/scala/Frontend/BP/PC_gen.scala:55:41
  wire        is_ret = io_prediction_bits_br_type == 3'h4 & io_prediction_valid;	// src/main/scala/Frontend/BP/PC_gen.scala:81:{56,78}
  wire        flushing_event =
    io_commit_valid & io_commit_bits_is_misprediction | io_revert_valid;	// src/main/scala/Frontend/BP/PC_gen.scala:77:45, :84:45
  wire [31:0] PC_mux =
    io_prediction_bits_hit & io_prediction_valid & ~is_ret
      ? io_prediction_bits_target
      : is_ret ? io_RAS_read_ret_addr : PC_reg;	// src/main/scala/Frontend/BP/PC_gen.scala:55:41, :81:78, :82:{52,75,78}, :96:18, :97:16, :98:24, :99:16, :100:40
  always @(posedge clock) begin	// src/main/scala/Frontend/BP/PC_gen.scala:40:7
    if (reset)	// src/main/scala/Frontend/BP/PC_gen.scala:40:7
      PC_reg <= 32'h0;	// src/main/scala/Frontend/BP/PC_gen.scala:55:41
    else if (io_PC_next_ready & ~flushing_event)	// src/main/scala/Frontend/BP/PC_gen.scala:84:45, :112:29, src/main/scala/chisel3/util/Decoupled.scala:51:35
      PC_reg <= PC_mux + {26'h0, 6'h10 - {2'h0, PC_mux[3:0]}};	// src/main/scala/Frontend/BP/PC_gen.scala:55:41, :96:18, :97:16, :98:24, :107:44, src/main/scala/utils.scala:323:47, :324:38
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/Frontend/BP/PC_gen.scala:40:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/Frontend/BP/PC_gen.scala:40:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/Frontend/BP/PC_gen.scala:40:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/Frontend/BP/PC_gen.scala:40:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/Frontend/BP/PC_gen.scala:40:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/Frontend/BP/PC_gen.scala:40:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/Frontend/BP/PC_gen.scala:40:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/Frontend/BP/PC_gen.scala:40:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/Frontend/BP/PC_gen.scala:40:7
        PC_reg = _RANDOM[/*Zero width*/ 1'b0];	// src/main/scala/Frontend/BP/PC_gen.scala:40:7, :55:41
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/Frontend/BP/PC_gen.scala:40:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/Frontend/BP/PC_gen.scala:40:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_prediction_ready = io_PC_next_ready;	// src/main/scala/Frontend/BP/PC_gen.scala:40:7
  assign io_PC_next_valid = ~flushing_event;	// src/main/scala/Frontend/BP/PC_gen.scala:40:7, :84:45, :112:29
  assign io_PC_next_bits_addr = PC_mux;	// src/main/scala/Frontend/BP/PC_gen.scala:40:7, :96:18, :97:16, :98:24
  assign io_PC_next_bits_wr_data = 32'h0;	// src/main/scala/Frontend/BP/PC_gen.scala:40:7, :55:41
  assign io_PC_next_bits_wr_en = 1'h0;	// src/main/scala/Frontend/BP/PC_gen.scala:40:7
endmodule

