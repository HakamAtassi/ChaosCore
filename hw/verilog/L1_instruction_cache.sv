// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module L1_instruction_cache(
  input         clock,
                reset,
  output        m_axi_awvalid,
  input         m_axi_awready,
  output [7:0]  m_axi_awid,
  output [31:0] m_axi_awaddr,
  output [7:0]  m_axi_awlen,
  output [2:0]  m_axi_awsize,
  output [1:0]  m_axi_awburst,
  output        m_axi_awlock,
  output [3:0]  m_axi_awcache,
  output [2:0]  m_axi_awprot,
  output [3:0]  m_axi_awqos,
                m_axi_awregion,
  output        m_axi_awuser,
  input         m_axi_wready,
  output        m_axi_wvalid,
  output [31:0] m_axi_wdata,
  output [3:0]  m_axi_wstrb,
  output        m_axi_wlast,
                m_axi_wuser,
                m_axi_bready,
  input         m_axi_bvalid,
  input  [7:0]  m_axi_bid,
  input  [1:0]  m_axi_bresp,
  input         m_axi_buser,
  output        m_axi_arvalid,
  input         m_axi_arready,
  output [7:0]  m_axi_arid,
  output [31:0] m_axi_araddr,
  output [7:0]  m_axi_arlen,
  output [2:0]  m_axi_arsize,
  output [1:0]  m_axi_arburst,
  output        m_axi_arlock,
  output [3:0]  m_axi_arcache,
  output [2:0]  m_axi_arprot,
  output [3:0]  m_axi_arqos,
                m_axi_arregion,
  output        m_axi_aruser,
                m_axi_rready,
  input         m_axi_rvalid,
  input  [7:0]  m_axi_rid,
  input  [31:0] m_axi_rdata,
  input  [1:0]  m_axi_rresp,
  input         m_axi_rlast,
                m_axi_ruser,
  output        io_CPU_request_ready,
  input         io_CPU_request_valid,
  input  [31:0] io_CPU_request_bits_addr,
                io_CPU_request_bits_wr_data,
  input         io_CPU_request_bits_wr_en,
                io_CPU_response_ready,
  output        io_CPU_response_valid,
  output [31:0] io_CPU_response_bits_fetch_PC,
  output        io_CPU_response_bits_valid_bits_0,
                io_CPU_response_bits_valid_bits_1,
                io_CPU_response_bits_valid_bits_2,
                io_CPU_response_bits_valid_bits_3,
  output [31:0] io_CPU_response_bits_instructions_0_instruction,
  output [3:0]  io_CPU_response_bits_instructions_0_packet_index,
  output [5:0]  io_CPU_response_bits_instructions_0_ROB_index,
  output [31:0] io_CPU_response_bits_instructions_1_instruction,
  output [3:0]  io_CPU_response_bits_instructions_1_packet_index,
  output [5:0]  io_CPU_response_bits_instructions_1_ROB_index,
  output [31:0] io_CPU_response_bits_instructions_2_instruction,
  output [3:0]  io_CPU_response_bits_instructions_2_packet_index,
  output [5:0]  io_CPU_response_bits_instructions_2_ROB_index,
  output [31:0] io_CPU_response_bits_instructions_3_instruction,
  output [3:0]  io_CPU_response_bits_instructions_3_packet_index,
  output [5:0]  io_CPU_response_bits_instructions_3_ROB_index,
  output        io_CPU_response_bits_prediction_hit,
  output [31:0] io_CPU_response_bits_prediction_target,
  output [2:0]  io_CPU_response_bits_prediction_br_type,
  output        io_CPU_response_bits_prediction_br_mask_0,
                io_CPU_response_bits_prediction_br_mask_1,
                io_CPU_response_bits_prediction_br_mask_2,
                io_CPU_response_bits_prediction_br_mask_3,
  output [15:0] io_CPU_response_bits_GHR,
  output [6:0]  io_CPU_response_bits_NEXT,
                io_CPU_response_bits_TOS,
  input         io_flush_valid
);

  wire             CPU_response_valid;
  wire             miss;
  wire [1:0]       hit_oh;
  wire             data_way_1_valid;
  wire             data_way_0_valid;
  wire [1:0]       valid_oh;
  wire [5:0]       current_set_decomposed_icache_address_set;
  wire             _GEN;
  wire             m_axi_rready_0;
  wire             _CPU_response_skid_buffer_io_enq_ready;
  wire [3:0]       _validator_io_instruction_output;
  wire [20:0]      _data_memory_1_io_data_out_tag;
  wire [255:0]     _data_memory_1_io_data_out_data;
  wire [20:0]      _data_memory_0_io_data_out_tag;
  wire [255:0]     _data_memory_0_io_data_out_data;
  wire [1:0]       _LRU_memory_io_data_out;
  wire             _final_response_buffer_io_deq_valid;
  wire [255:0]     _final_response_buffer_io_deq_bits_data;
  reg  [31:0]      AXI_AR_buf_araddr;
  reg  [7:0]       AXI_AR_buf_arlen;
  reg  [2:0]       AXI_AR_buf_arsize;
  reg  [255:0]     AXI_AW_DATA_BUFFER;
  reg  [2:0]       AXI_REQUEST_STATE;
  reg              R_done;
  reg              W_done;
  wire             _GEN_0 = AXI_REQUEST_STATE == 3'h2;
  wire             _GEN_1 = AXI_REQUEST_STATE == 3'h3;
  wire             _GEN_2 = AXI_REQUEST_STATE == 3'h4;
  wire             _GEN_3 = AXI_REQUEST_STATE == 3'h5;
  wire             _GEN_4 = AXI_REQUEST_STATE == 3'h1;
  wire             m_axi_bready_0 = AXI_REQUEST_STATE == 3'h6;
  reg  [31:0]      write_counter;
  reg  [255:0]     AXI_read_buffer;
  wire             _GEN_5 = _GEN_3 & ~W_done;
  wire             _GEN_6 = _GEN_5 & ~(|write_counter);
  wire             _GEN_7 = _GEN_3 & ~W_done;
  wire             _GEN_8 = m_axi_rready_0 & m_axi_rvalid;
  wire             _GEN_9 = _GEN_8 & m_axi_rlast;
  wire [255:0]     _GEN_10 = {m_axi_rdata, AXI_read_buffer[255:32]};
  wire             _GEN_11 = _GEN_4 & _GEN_9;
  wire             _GEN_12 = _GEN_0 & ~W_done;
  wire             _GEN_13 = W_done & R_done;
  wire             _GEN_14 = _GEN_0 & _GEN_13;
  assign m_axi_rready_0 = _GEN_1 | _GEN_0 | _GEN_4;
  wire             _GEN_15 = _GEN_2 & ~W_done;
  wire             m_axi_wvalid_0 =
    _GEN_2 ? ~W_done | _GEN_12 | _GEN_7 : _GEN_12 | _GEN_7;
  reg  [2:0]       cache_state;
  reg  [31:0]      fetch_PC_buf_addr;
  reg  [31:0]      replay_address_addr;
  reg  [31:0]      replay_address_wr_data;
  reg              replay_address_wr_en;
  reg              cache_valid;
  reg              valid_mem_0_0;
  reg              valid_mem_0_1;
  reg              valid_mem_1_0;
  reg              valid_mem_1_1;
  reg              valid_mem_2_0;
  reg              valid_mem_2_1;
  reg              valid_mem_3_0;
  reg              valid_mem_3_1;
  reg              valid_mem_4_0;
  reg              valid_mem_4_1;
  reg              valid_mem_5_0;
  reg              valid_mem_5_1;
  reg              valid_mem_6_0;
  reg              valid_mem_6_1;
  reg              valid_mem_7_0;
  reg              valid_mem_7_1;
  reg              valid_mem_8_0;
  reg              valid_mem_8_1;
  reg              valid_mem_9_0;
  reg              valid_mem_9_1;
  reg              valid_mem_10_0;
  reg              valid_mem_10_1;
  reg              valid_mem_11_0;
  reg              valid_mem_11_1;
  reg              valid_mem_12_0;
  reg              valid_mem_12_1;
  reg              valid_mem_13_0;
  reg              valid_mem_13_1;
  reg              valid_mem_14_0;
  reg              valid_mem_14_1;
  reg              valid_mem_15_0;
  reg              valid_mem_15_1;
  reg              valid_mem_16_0;
  reg              valid_mem_16_1;
  reg              valid_mem_17_0;
  reg              valid_mem_17_1;
  reg              valid_mem_18_0;
  reg              valid_mem_18_1;
  reg              valid_mem_19_0;
  reg              valid_mem_19_1;
  reg              valid_mem_20_0;
  reg              valid_mem_20_1;
  reg              valid_mem_21_0;
  reg              valid_mem_21_1;
  reg              valid_mem_22_0;
  reg              valid_mem_22_1;
  reg              valid_mem_23_0;
  reg              valid_mem_23_1;
  reg              valid_mem_24_0;
  reg              valid_mem_24_1;
  reg              valid_mem_25_0;
  reg              valid_mem_25_1;
  reg              valid_mem_26_0;
  reg              valid_mem_26_1;
  reg              valid_mem_27_0;
  reg              valid_mem_27_1;
  reg              valid_mem_28_0;
  reg              valid_mem_28_1;
  reg              valid_mem_29_0;
  reg              valid_mem_29_1;
  reg              valid_mem_30_0;
  reg              valid_mem_30_1;
  reg              valid_mem_31_0;
  reg              valid_mem_31_1;
  reg              valid_mem_32_0;
  reg              valid_mem_32_1;
  reg              valid_mem_33_0;
  reg              valid_mem_33_1;
  reg              valid_mem_34_0;
  reg              valid_mem_34_1;
  reg              valid_mem_35_0;
  reg              valid_mem_35_1;
  reg              valid_mem_36_0;
  reg              valid_mem_36_1;
  reg              valid_mem_37_0;
  reg              valid_mem_37_1;
  reg              valid_mem_38_0;
  reg              valid_mem_38_1;
  reg              valid_mem_39_0;
  reg              valid_mem_39_1;
  reg              valid_mem_40_0;
  reg              valid_mem_40_1;
  reg              valid_mem_41_0;
  reg              valid_mem_41_1;
  reg              valid_mem_42_0;
  reg              valid_mem_42_1;
  reg              valid_mem_43_0;
  reg              valid_mem_43_1;
  reg              valid_mem_44_0;
  reg              valid_mem_44_1;
  reg              valid_mem_45_0;
  reg              valid_mem_45_1;
  reg              valid_mem_46_0;
  reg              valid_mem_46_1;
  reg              valid_mem_47_0;
  reg              valid_mem_47_1;
  reg              valid_mem_48_0;
  reg              valid_mem_48_1;
  reg              valid_mem_49_0;
  reg              valid_mem_49_1;
  reg              valid_mem_50_0;
  reg              valid_mem_50_1;
  reg              valid_mem_51_0;
  reg              valid_mem_51_1;
  reg              valid_mem_52_0;
  reg              valid_mem_52_1;
  reg              valid_mem_53_0;
  reg              valid_mem_53_1;
  reg              valid_mem_54_0;
  reg              valid_mem_54_1;
  reg              valid_mem_55_0;
  reg              valid_mem_55_1;
  reg              valid_mem_56_0;
  reg              valid_mem_56_1;
  reg              valid_mem_57_0;
  reg              valid_mem_57_1;
  reg              valid_mem_58_0;
  reg              valid_mem_58_1;
  reg              valid_mem_59_0;
  reg              valid_mem_59_1;
  reg              valid_mem_60_0;
  reg              valid_mem_60_1;
  reg              valid_mem_61_0;
  reg              valid_mem_61_1;
  reg              valid_mem_62_0;
  reg              valid_mem_62_1;
  reg              valid_mem_63_0;
  reg              valid_mem_63_1;
  wire [31:0]      request_addr = io_CPU_request_bits_addr & 32'hFFFFFFE0;
  wire             _GEN_16 = miss & ~io_flush_valid;
  wire             _GEN_17 = cache_state == 3'h1;
  wire             _GEN_18 = (|cache_state) ? _GEN_17 : _GEN_16;
  wire             m_axi_arvalid_0 =
    (|cache_state) ? _GEN_17 & ~(|AXI_REQUEST_STATE) : _GEN_16 & ~(|AXI_REQUEST_STATE);
  wire             _GEN_19 = cache_state == 3'h2;
  wire             _GEN_20 = cache_state == 3'h3;
  wire             _GEN_21 = ~(|cache_state) | _GEN_17;
  assign _GEN = ~_GEN_21 & (_GEN_19 ? ~io_flush_valid : _GEN_20);
  wire [255:0]     axi_response =
    _GEN_21
      ? 256'h0
      : _GEN_19
          ? (io_flush_valid ? 256'h0 : _final_response_buffer_io_deq_bits_data)
          : _GEN_20 ? _final_response_buffer_io_deq_bits_data : 256'h0;
  wire             axi_response_valid =
    ~_GEN_21
    & (_GEN_19
         ? ~io_flush_valid & _GEN & _final_response_buffer_io_deq_valid
         : _GEN_20 & _GEN & _final_response_buffer_io_deq_valid);
  wire             _current_address_T_1 = (|cache_state) | miss;
  wire [31:0]      current_address_addr =
    _current_address_T_1 ? replay_address_addr : io_CPU_request_bits_addr;
  wire [31:0]      current_address_wr_data =
    _current_address_T_1 ? replay_address_wr_data : io_CPU_request_bits_wr_data;
  wire             current_address_wr_en =
    _current_address_T_1 ? replay_address_wr_en : io_CPU_request_bits_wr_en;
  wire [20:0]      current_packet_tag = current_address_addr[31:11];
  wire [5:0]       current_packet_set = current_address_addr[10:5];
  wire             current_packet_fetch_packet = current_address_addr[4];
  wire [2:0]       current_packet_instruction_offset = current_address_addr[4:2];
  reg  [5:0]       LRU_memory_io_wr_addr_REG;
  wire [63:0]      _GEN_22 =
    {{valid_mem_63_0},
     {valid_mem_62_0},
     {valid_mem_61_0},
     {valid_mem_60_0},
     {valid_mem_59_0},
     {valid_mem_58_0},
     {valid_mem_57_0},
     {valid_mem_56_0},
     {valid_mem_55_0},
     {valid_mem_54_0},
     {valid_mem_53_0},
     {valid_mem_52_0},
     {valid_mem_51_0},
     {valid_mem_50_0},
     {valid_mem_49_0},
     {valid_mem_48_0},
     {valid_mem_47_0},
     {valid_mem_46_0},
     {valid_mem_45_0},
     {valid_mem_44_0},
     {valid_mem_43_0},
     {valid_mem_42_0},
     {valid_mem_41_0},
     {valid_mem_40_0},
     {valid_mem_39_0},
     {valid_mem_38_0},
     {valid_mem_37_0},
     {valid_mem_36_0},
     {valid_mem_35_0},
     {valid_mem_34_0},
     {valid_mem_33_0},
     {valid_mem_32_0},
     {valid_mem_31_0},
     {valid_mem_30_0},
     {valid_mem_29_0},
     {valid_mem_28_0},
     {valid_mem_27_0},
     {valid_mem_26_0},
     {valid_mem_25_0},
     {valid_mem_24_0},
     {valid_mem_23_0},
     {valid_mem_22_0},
     {valid_mem_21_0},
     {valid_mem_20_0},
     {valid_mem_19_0},
     {valid_mem_18_0},
     {valid_mem_17_0},
     {valid_mem_16_0},
     {valid_mem_15_0},
     {valid_mem_14_0},
     {valid_mem_13_0},
     {valid_mem_12_0},
     {valid_mem_11_0},
     {valid_mem_10_0},
     {valid_mem_9_0},
     {valid_mem_8_0},
     {valid_mem_7_0},
     {valid_mem_6_0},
     {valid_mem_5_0},
     {valid_mem_4_0},
     {valid_mem_3_0},
     {valid_mem_2_0},
     {valid_mem_1_0},
     {valid_mem_0_0}};
  wire             _GEN_23 = _GEN_22[current_set_decomposed_icache_address_set];
  wire [63:0]      _GEN_24 =
    {{valid_mem_63_1},
     {valid_mem_62_1},
     {valid_mem_61_1},
     {valid_mem_60_1},
     {valid_mem_59_1},
     {valid_mem_58_1},
     {valid_mem_57_1},
     {valid_mem_56_1},
     {valid_mem_55_1},
     {valid_mem_54_1},
     {valid_mem_53_1},
     {valid_mem_52_1},
     {valid_mem_51_1},
     {valid_mem_50_1},
     {valid_mem_49_1},
     {valid_mem_48_1},
     {valid_mem_47_1},
     {valid_mem_46_1},
     {valid_mem_45_1},
     {valid_mem_44_1},
     {valid_mem_43_1},
     {valid_mem_42_1},
     {valid_mem_41_1},
     {valid_mem_40_1},
     {valid_mem_39_1},
     {valid_mem_38_1},
     {valid_mem_37_1},
     {valid_mem_36_1},
     {valid_mem_35_1},
     {valid_mem_34_1},
     {valid_mem_33_1},
     {valid_mem_32_1},
     {valid_mem_31_1},
     {valid_mem_30_1},
     {valid_mem_29_1},
     {valid_mem_28_1},
     {valid_mem_27_1},
     {valid_mem_26_1},
     {valid_mem_25_1},
     {valid_mem_24_1},
     {valid_mem_23_1},
     {valid_mem_22_1},
     {valid_mem_21_1},
     {valid_mem_20_1},
     {valid_mem_19_1},
     {valid_mem_18_1},
     {valid_mem_17_1},
     {valid_mem_16_1},
     {valid_mem_15_1},
     {valid_mem_14_1},
     {valid_mem_13_1},
     {valid_mem_12_1},
     {valid_mem_11_1},
     {valid_mem_10_1},
     {valid_mem_9_1},
     {valid_mem_8_1},
     {valid_mem_7_1},
     {valid_mem_6_1},
     {valid_mem_5_1},
     {valid_mem_4_1},
     {valid_mem_3_1},
     {valid_mem_2_1},
     {valid_mem_1_1},
     {valid_mem_0_1}};
  wire             _GEN_25 = _GEN_24[current_set_decomposed_icache_address_set];
  wire [1:0]       allocate_way =
    ~(|valid_oh) | _LRU_memory_io_data_out[1] ? 2'h2 : {1'h0, _LRU_memory_io_data_out[0]};
  assign current_set_decomposed_icache_address_set = replay_address_addr[10:5];
  reg              REG_0;
  reg              REG_1;
  assign valid_oh = {REG_1, REG_0};
  wire             _data_memory_1_io_wr_en_T_2 = cache_state == 3'h2;
  wire             _data_memory_0_io_wr_en_T_3 =
    axi_response_valid & allocate_way[0] & _data_memory_1_io_wr_en_T_2;
  wire             _data_memory_1_io_wr_en_T_3 =
    axi_response_valid & allocate_way[1] & _data_memory_1_io_wr_en_T_2;
  reg  [20:0]      hit_oh_vec_0_REG;
  wire             hit_oh_vec_0 =
    _data_memory_0_io_data_out_tag == hit_oh_vec_0_REG & data_way_0_valid;
  assign data_way_0_valid = allocate_way[0] & _data_memory_0_io_wr_en_T_3 | _GEN_23;
  reg  [20:0]      hit_oh_vec_1_REG;
  wire             hit_oh_vec_1 =
    _data_memory_1_io_data_out_tag == hit_oh_vec_1_REG & data_way_1_valid;
  assign data_way_1_valid = allocate_way[1] & _data_memory_1_io_wr_en_T_3 | _GEN_25;
  assign hit_oh = {hit_oh_vec_1, hit_oh_vec_0};
  wire             replay_valid = cache_state == 3'h4;
  reg              hit_REG;
  reg              hit_REG_1;
  reg              hit_REG_2;
  reg  [31:0]      hit_REG_3;
  wire             hit =
    (|hit_oh) & (hit_REG | replay_valid) & ~hit_REG_1 & ~hit_REG_2 & (|valid_oh)
    & io_CPU_request_bits_addr == hit_REG_3;
  reg              miss_REG;
  reg              miss_REG_1;
  reg              miss_REG_2;
  reg  [31:0]      miss_REG_3;
  assign miss =
    ~(|hit_oh) & (miss_REG | replay_valid) & ~miss_REG_1 & ~miss_REG_2 | ~(|valid_oh)
    | io_CPU_request_bits_addr != miss_REG_3;
  wire [255:0]     hit_instruction_data =
    hit_oh_vec_1
      ? _data_memory_1_io_data_out_data
      : hit_oh_vec_0 ? _data_memory_0_io_data_out_data : 256'h0;
  wire [31:0]      instruction_vec_0 = hit_instruction_data[31:0];
  wire [31:0]      instruction_vec_1 = hit_instruction_data[63:32];
  wire [31:0]      instruction_vec_2 = hit_instruction_data[95:64];
  wire [31:0]      instruction_vec_3 = hit_instruction_data[127:96];
  wire [31:0]      instruction_vec_4 = hit_instruction_data[159:128];
  wire [31:0]      instruction_vec_5 = hit_instruction_data[191:160];
  wire [31:0]      instruction_vec_6 = hit_instruction_data[223:192];
  wire [31:0]      instruction_vec_7 = hit_instruction_data[255:224];
  reg              CPU_response_bits_instructions_0_instruction_REG;
  wire [7:0][31:0] _GEN_26 =
    {{instruction_vec_7},
     {instruction_vec_6},
     {instruction_vec_5},
     {instruction_vec_4},
     {instruction_vec_3},
     {instruction_vec_2},
     {instruction_vec_1},
     {instruction_vec_0}};
  reg              CPU_response_bits_instructions_1_instruction_REG;
  reg              CPU_response_bits_instructions_2_instruction_REG;
  reg              CPU_response_bits_instructions_3_instruction_REG;
  reg              CPU_response_valid_REG;
  assign CPU_response_valid =
    (cache_valid | hit) & ~(io_flush_valid | CPU_response_valid_REG);
  wire             io_CPU_request_ready_0 = ~(|cache_state) & ~miss;
  always @(posedge clock) begin
    automatic logic _GEN_27 = ~W_done & m_axi_wready & m_axi_wvalid_0;
    automatic logic _GEN_28;
    automatic logic _GEN_29;
    automatic logic _GEN_30;
    automatic logic _GEN_31;
    automatic logic _miss_T_2 = io_CPU_request_ready_0 & io_CPU_request_valid;
    _GEN_28 = _GEN_3 & _GEN_27;
    _GEN_29 = ~R_done & _GEN_8;
    _GEN_30 = _GEN_0 & _GEN_27;
    _GEN_31 = _GEN_2 & _GEN_27;
    AXI_AR_buf_araddr <= _GEN_18 ? request_addr : 32'h0;
    AXI_AR_buf_arlen <= _GEN_18 ? 8'h7 : 8'h0;
    AXI_AR_buf_arsize <= {1'h0, (|cache_state) ? _GEN_17 : _GEN_16, 1'h0};
    if (_GEN_31 | _GEN_30 | _GEN_28)
      AXI_AW_DATA_BUFFER <= {32'h0, AXI_AW_DATA_BUFFER[255:32]};
    if (_GEN_1) begin
      if (_GEN_9)
        AXI_read_buffer <= 256'h0;
      else if (_GEN_29)
        AXI_read_buffer <= _GEN_10;
      else if (_GEN_0) begin
        if (_GEN_13)
          AXI_read_buffer <= 256'h0;
        else if (_GEN_29)
          AXI_read_buffer <= _GEN_10;
        else if (_GEN_4) begin
          if (_GEN_9)
            AXI_read_buffer <= 256'h0;
          else if (_GEN_8)
            AXI_read_buffer <= _GEN_10;
        end
      end
      else if (_GEN_4) begin
        if (_GEN_9)
          AXI_read_buffer <= 256'h0;
        else if (_GEN_8)
          AXI_read_buffer <= _GEN_10;
      end
    end
    else if (_GEN_0) begin
      if (_GEN_13)
        AXI_read_buffer <= 256'h0;
      else if (_GEN_29)
        AXI_read_buffer <= _GEN_10;
      else if (_GEN_4) begin
        if (_GEN_9)
          AXI_read_buffer <= 256'h0;
        else if (_GEN_8)
          AXI_read_buffer <= _GEN_10;
      end
    end
    else if (_GEN_4) begin
      if (_GEN_9)
        AXI_read_buffer <= 256'h0;
      else if (_GEN_8)
        AXI_read_buffer <= _GEN_10;
    end
    LRU_memory_io_wr_addr_REG <= current_packet_set;
    REG_0 <= _GEN_23;
    REG_1 <= _GEN_25;
    hit_oh_vec_0_REG <= current_packet_tag;
    hit_oh_vec_1_REG <= current_packet_tag;
    hit_REG <= _miss_T_2 & ~(|cache_state);
    hit_REG_1 <= io_flush_valid;
    hit_REG_2 <= reset;
    hit_REG_3 <= io_CPU_request_bits_addr;
    miss_REG <= _miss_T_2;
    miss_REG_1 <= io_flush_valid;
    miss_REG_2 <= reset;
    miss_REG_3 <= io_CPU_request_bits_addr;
    CPU_response_bits_instructions_0_instruction_REG <= current_packet_fetch_packet;
    CPU_response_bits_instructions_1_instruction_REG <= current_packet_fetch_packet;
    CPU_response_bits_instructions_2_instruction_REG <= current_packet_fetch_packet;
    CPU_response_bits_instructions_3_instruction_REG <= current_packet_fetch_packet;
    CPU_response_valid_REG <= io_flush_valid;
    if (reset) begin
      AXI_REQUEST_STATE <= 3'h0;
      R_done <= 1'h0;
      W_done <= 1'h0;
      write_counter <= 32'h0;
      cache_state <= 3'h0;
      fetch_PC_buf_addr <= 32'h0;
      replay_address_addr <= 32'h0;
      replay_address_wr_data <= 32'h0;
      replay_address_wr_en <= 1'h0;
      cache_valid <= 1'h0;
      valid_mem_0_0 <= 1'h0;
      valid_mem_0_1 <= 1'h0;
      valid_mem_1_0 <= 1'h0;
      valid_mem_1_1 <= 1'h0;
      valid_mem_2_0 <= 1'h0;
      valid_mem_2_1 <= 1'h0;
      valid_mem_3_0 <= 1'h0;
      valid_mem_3_1 <= 1'h0;
      valid_mem_4_0 <= 1'h0;
      valid_mem_4_1 <= 1'h0;
      valid_mem_5_0 <= 1'h0;
      valid_mem_5_1 <= 1'h0;
      valid_mem_6_0 <= 1'h0;
      valid_mem_6_1 <= 1'h0;
      valid_mem_7_0 <= 1'h0;
      valid_mem_7_1 <= 1'h0;
      valid_mem_8_0 <= 1'h0;
      valid_mem_8_1 <= 1'h0;
      valid_mem_9_0 <= 1'h0;
      valid_mem_9_1 <= 1'h0;
      valid_mem_10_0 <= 1'h0;
      valid_mem_10_1 <= 1'h0;
      valid_mem_11_0 <= 1'h0;
      valid_mem_11_1 <= 1'h0;
      valid_mem_12_0 <= 1'h0;
      valid_mem_12_1 <= 1'h0;
      valid_mem_13_0 <= 1'h0;
      valid_mem_13_1 <= 1'h0;
      valid_mem_14_0 <= 1'h0;
      valid_mem_14_1 <= 1'h0;
      valid_mem_15_0 <= 1'h0;
      valid_mem_15_1 <= 1'h0;
      valid_mem_16_0 <= 1'h0;
      valid_mem_16_1 <= 1'h0;
      valid_mem_17_0 <= 1'h0;
      valid_mem_17_1 <= 1'h0;
      valid_mem_18_0 <= 1'h0;
      valid_mem_18_1 <= 1'h0;
      valid_mem_19_0 <= 1'h0;
      valid_mem_19_1 <= 1'h0;
      valid_mem_20_0 <= 1'h0;
      valid_mem_20_1 <= 1'h0;
      valid_mem_21_0 <= 1'h0;
      valid_mem_21_1 <= 1'h0;
      valid_mem_22_0 <= 1'h0;
      valid_mem_22_1 <= 1'h0;
      valid_mem_23_0 <= 1'h0;
      valid_mem_23_1 <= 1'h0;
      valid_mem_24_0 <= 1'h0;
      valid_mem_24_1 <= 1'h0;
      valid_mem_25_0 <= 1'h0;
      valid_mem_25_1 <= 1'h0;
      valid_mem_26_0 <= 1'h0;
      valid_mem_26_1 <= 1'h0;
      valid_mem_27_0 <= 1'h0;
      valid_mem_27_1 <= 1'h0;
      valid_mem_28_0 <= 1'h0;
      valid_mem_28_1 <= 1'h0;
      valid_mem_29_0 <= 1'h0;
      valid_mem_29_1 <= 1'h0;
      valid_mem_30_0 <= 1'h0;
      valid_mem_30_1 <= 1'h0;
      valid_mem_31_0 <= 1'h0;
      valid_mem_31_1 <= 1'h0;
      valid_mem_32_0 <= 1'h0;
      valid_mem_32_1 <= 1'h0;
      valid_mem_33_0 <= 1'h0;
      valid_mem_33_1 <= 1'h0;
      valid_mem_34_0 <= 1'h0;
      valid_mem_34_1 <= 1'h0;
      valid_mem_35_0 <= 1'h0;
      valid_mem_35_1 <= 1'h0;
      valid_mem_36_0 <= 1'h0;
      valid_mem_36_1 <= 1'h0;
      valid_mem_37_0 <= 1'h0;
      valid_mem_37_1 <= 1'h0;
      valid_mem_38_0 <= 1'h0;
      valid_mem_38_1 <= 1'h0;
      valid_mem_39_0 <= 1'h0;
      valid_mem_39_1 <= 1'h0;
      valid_mem_40_0 <= 1'h0;
      valid_mem_40_1 <= 1'h0;
      valid_mem_41_0 <= 1'h0;
      valid_mem_41_1 <= 1'h0;
      valid_mem_42_0 <= 1'h0;
      valid_mem_42_1 <= 1'h0;
      valid_mem_43_0 <= 1'h0;
      valid_mem_43_1 <= 1'h0;
      valid_mem_44_0 <= 1'h0;
      valid_mem_44_1 <= 1'h0;
      valid_mem_45_0 <= 1'h0;
      valid_mem_45_1 <= 1'h0;
      valid_mem_46_0 <= 1'h0;
      valid_mem_46_1 <= 1'h0;
      valid_mem_47_0 <= 1'h0;
      valid_mem_47_1 <= 1'h0;
      valid_mem_48_0 <= 1'h0;
      valid_mem_48_1 <= 1'h0;
      valid_mem_49_0 <= 1'h0;
      valid_mem_49_1 <= 1'h0;
      valid_mem_50_0 <= 1'h0;
      valid_mem_50_1 <= 1'h0;
      valid_mem_51_0 <= 1'h0;
      valid_mem_51_1 <= 1'h0;
      valid_mem_52_0 <= 1'h0;
      valid_mem_52_1 <= 1'h0;
      valid_mem_53_0 <= 1'h0;
      valid_mem_53_1 <= 1'h0;
      valid_mem_54_0 <= 1'h0;
      valid_mem_54_1 <= 1'h0;
      valid_mem_55_0 <= 1'h0;
      valid_mem_55_1 <= 1'h0;
      valid_mem_56_0 <= 1'h0;
      valid_mem_56_1 <= 1'h0;
      valid_mem_57_0 <= 1'h0;
      valid_mem_57_1 <= 1'h0;
      valid_mem_58_0 <= 1'h0;
      valid_mem_58_1 <= 1'h0;
      valid_mem_59_0 <= 1'h0;
      valid_mem_59_1 <= 1'h0;
      valid_mem_60_0 <= 1'h0;
      valid_mem_60_1 <= 1'h0;
      valid_mem_61_0 <= 1'h0;
      valid_mem_61_1 <= 1'h0;
      valid_mem_62_0 <= 1'h0;
      valid_mem_62_1 <= 1'h0;
      valid_mem_63_0 <= 1'h0;
      valid_mem_63_1 <= 1'h0;
    end
    else begin
      automatic logic _GEN_32;
      automatic logic _GEN_33;
      automatic logic _valid_mem_0_T_2;
      automatic logic _valid_mem_1_T_2;
      _GEN_32 = m_axi_arready & m_axi_arvalid_0;
      _GEN_33 =
        cache_state == 3'h4
        & (io_flush_valid | CPU_response_valid & _CPU_response_skid_buffer_io_enq_ready);
      _valid_mem_0_T_2 = allocate_way[0] & _data_memory_0_io_wr_en_T_3 | _GEN_23;
      _valid_mem_1_T_2 = allocate_way[1] & _data_memory_1_io_wr_en_T_3 | _GEN_25;
      if (|AXI_REQUEST_STATE) begin
        automatic logic [7:0][2:0] _GEN_34;
        _GEN_34 =
          {{AXI_REQUEST_STATE},
           {m_axi_bready_0 & m_axi_bvalid ? 3'h0 : 3'h6},
           {_GEN_32 ? 3'h2 : 3'h5},
           {{1'h1, W_done, 1'h0}},
           {R_done ? 3'h0 : 3'h3},
           {{R_done & W_done, 2'h2}},
           {3'h1},
           {AXI_REQUEST_STATE}};
        AXI_REQUEST_STATE <= _GEN_34[AXI_REQUEST_STATE];
      end
      else if (_GEN_32)
        AXI_REQUEST_STATE <= 3'h3;
      else
        AXI_REQUEST_STATE <= 3'h0;
      if (_GEN_1 & _GEN_29 | _GEN_0 & _GEN_29)
        R_done <= m_axi_rlast;
      else if (~(|AXI_REQUEST_STATE))
        R_done <= ~m_axi_arvalid_0;
      if (_GEN_15)
        W_done <= ~(|write_counter);
      else if (_GEN_0 & ~W_done | _GEN_5) begin
        if (_GEN_15)
          W_done <= ~(|write_counter);
        else if (_GEN_12)
          W_done <= ~(|write_counter);
        else
          W_done <= _GEN_6;
      end
      else
        W_done <= ~(|AXI_REQUEST_STATE) | W_done;
      if (_GEN_31)
        write_counter <= write_counter - 32'h1;
      else if (_GEN_30)
        write_counter <= write_counter - 32'h1;
      else if (_GEN_28)
        write_counter <= write_counter - 32'h1;
      if (|cache_state) begin
        if (_GEN_17) begin
          if (m_axi_arready & m_axi_arvalid_0)
            cache_state <= 3'h2;
        end
        else if (_GEN_19) begin
          if (io_flush_valid)
            cache_state <= 3'h3;
          else if (axi_response_valid)
            cache_state <= 3'h4;
        end
        else if (_GEN_20 ? axi_response_valid : _GEN_33)
          cache_state <= 3'h0;
      end
      else begin
        if (_GEN_16) begin
          if (m_axi_arready & m_axi_arvalid_0)
            cache_state <= 3'h2;
          else
            cache_state <= 3'h1;
        end
        fetch_PC_buf_addr <= io_CPU_request_bits_addr;
        replay_address_addr <= io_CPU_request_bits_addr;
        replay_address_wr_data <= io_CPU_request_bits_wr_data;
        replay_address_wr_en <= io_CPU_request_bits_wr_en;
      end
      if (~_GEN_21) begin
        if (_GEN_19)
          cache_valid <= ~io_flush_valid & cache_valid;
        else
          cache_valid <= (_GEN_20 | ~_GEN_33) & cache_valid;
      end
      if (current_set_decomposed_icache_address_set == 6'h0) begin
        valid_mem_0_0 <= _valid_mem_0_T_2;
        valid_mem_0_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h1) begin
        valid_mem_1_0 <= _valid_mem_0_T_2;
        valid_mem_1_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h2) begin
        valid_mem_2_0 <= _valid_mem_0_T_2;
        valid_mem_2_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h3) begin
        valid_mem_3_0 <= _valid_mem_0_T_2;
        valid_mem_3_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h4) begin
        valid_mem_4_0 <= _valid_mem_0_T_2;
        valid_mem_4_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h5) begin
        valid_mem_5_0 <= _valid_mem_0_T_2;
        valid_mem_5_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h6) begin
        valid_mem_6_0 <= _valid_mem_0_T_2;
        valid_mem_6_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h7) begin
        valid_mem_7_0 <= _valid_mem_0_T_2;
        valid_mem_7_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h8) begin
        valid_mem_8_0 <= _valid_mem_0_T_2;
        valid_mem_8_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h9) begin
        valid_mem_9_0 <= _valid_mem_0_T_2;
        valid_mem_9_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'hA) begin
        valid_mem_10_0 <= _valid_mem_0_T_2;
        valid_mem_10_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'hB) begin
        valid_mem_11_0 <= _valid_mem_0_T_2;
        valid_mem_11_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'hC) begin
        valid_mem_12_0 <= _valid_mem_0_T_2;
        valid_mem_12_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'hD) begin
        valid_mem_13_0 <= _valid_mem_0_T_2;
        valid_mem_13_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'hE) begin
        valid_mem_14_0 <= _valid_mem_0_T_2;
        valid_mem_14_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'hF) begin
        valid_mem_15_0 <= _valid_mem_0_T_2;
        valid_mem_15_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h10) begin
        valid_mem_16_0 <= _valid_mem_0_T_2;
        valid_mem_16_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h11) begin
        valid_mem_17_0 <= _valid_mem_0_T_2;
        valid_mem_17_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h12) begin
        valid_mem_18_0 <= _valid_mem_0_T_2;
        valid_mem_18_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h13) begin
        valid_mem_19_0 <= _valid_mem_0_T_2;
        valid_mem_19_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h14) begin
        valid_mem_20_0 <= _valid_mem_0_T_2;
        valid_mem_20_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h15) begin
        valid_mem_21_0 <= _valid_mem_0_T_2;
        valid_mem_21_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h16) begin
        valid_mem_22_0 <= _valid_mem_0_T_2;
        valid_mem_22_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h17) begin
        valid_mem_23_0 <= _valid_mem_0_T_2;
        valid_mem_23_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h18) begin
        valid_mem_24_0 <= _valid_mem_0_T_2;
        valid_mem_24_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h19) begin
        valid_mem_25_0 <= _valid_mem_0_T_2;
        valid_mem_25_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h1A) begin
        valid_mem_26_0 <= _valid_mem_0_T_2;
        valid_mem_26_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h1B) begin
        valid_mem_27_0 <= _valid_mem_0_T_2;
        valid_mem_27_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h1C) begin
        valid_mem_28_0 <= _valid_mem_0_T_2;
        valid_mem_28_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h1D) begin
        valid_mem_29_0 <= _valid_mem_0_T_2;
        valid_mem_29_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h1E) begin
        valid_mem_30_0 <= _valid_mem_0_T_2;
        valid_mem_30_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h1F) begin
        valid_mem_31_0 <= _valid_mem_0_T_2;
        valid_mem_31_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h20) begin
        valid_mem_32_0 <= _valid_mem_0_T_2;
        valid_mem_32_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h21) begin
        valid_mem_33_0 <= _valid_mem_0_T_2;
        valid_mem_33_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h22) begin
        valid_mem_34_0 <= _valid_mem_0_T_2;
        valid_mem_34_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h23) begin
        valid_mem_35_0 <= _valid_mem_0_T_2;
        valid_mem_35_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h24) begin
        valid_mem_36_0 <= _valid_mem_0_T_2;
        valid_mem_36_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h25) begin
        valid_mem_37_0 <= _valid_mem_0_T_2;
        valid_mem_37_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h26) begin
        valid_mem_38_0 <= _valid_mem_0_T_2;
        valid_mem_38_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h27) begin
        valid_mem_39_0 <= _valid_mem_0_T_2;
        valid_mem_39_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h28) begin
        valid_mem_40_0 <= _valid_mem_0_T_2;
        valid_mem_40_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h29) begin
        valid_mem_41_0 <= _valid_mem_0_T_2;
        valid_mem_41_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h2A) begin
        valid_mem_42_0 <= _valid_mem_0_T_2;
        valid_mem_42_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h2B) begin
        valid_mem_43_0 <= _valid_mem_0_T_2;
        valid_mem_43_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h2C) begin
        valid_mem_44_0 <= _valid_mem_0_T_2;
        valid_mem_44_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h2D) begin
        valid_mem_45_0 <= _valid_mem_0_T_2;
        valid_mem_45_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h2E) begin
        valid_mem_46_0 <= _valid_mem_0_T_2;
        valid_mem_46_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h2F) begin
        valid_mem_47_0 <= _valid_mem_0_T_2;
        valid_mem_47_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h30) begin
        valid_mem_48_0 <= _valid_mem_0_T_2;
        valid_mem_48_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h31) begin
        valid_mem_49_0 <= _valid_mem_0_T_2;
        valid_mem_49_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h32) begin
        valid_mem_50_0 <= _valid_mem_0_T_2;
        valid_mem_50_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h33) begin
        valid_mem_51_0 <= _valid_mem_0_T_2;
        valid_mem_51_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h34) begin
        valid_mem_52_0 <= _valid_mem_0_T_2;
        valid_mem_52_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h35) begin
        valid_mem_53_0 <= _valid_mem_0_T_2;
        valid_mem_53_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h36) begin
        valid_mem_54_0 <= _valid_mem_0_T_2;
        valid_mem_54_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h37) begin
        valid_mem_55_0 <= _valid_mem_0_T_2;
        valid_mem_55_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h38) begin
        valid_mem_56_0 <= _valid_mem_0_T_2;
        valid_mem_56_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h39) begin
        valid_mem_57_0 <= _valid_mem_0_T_2;
        valid_mem_57_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h3A) begin
        valid_mem_58_0 <= _valid_mem_0_T_2;
        valid_mem_58_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h3B) begin
        valid_mem_59_0 <= _valid_mem_0_T_2;
        valid_mem_59_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h3C) begin
        valid_mem_60_0 <= _valid_mem_0_T_2;
        valid_mem_60_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h3D) begin
        valid_mem_61_0 <= _valid_mem_0_T_2;
        valid_mem_61_1 <= _valid_mem_1_T_2;
      end
      if (current_set_decomposed_icache_address_set == 6'h3E) begin
        valid_mem_62_0 <= _valid_mem_0_T_2;
        valid_mem_62_1 <= _valid_mem_1_T_2;
      end
      if (&current_set_decomposed_icache_address_set) begin
        valid_mem_63_0 <= _valid_mem_0_T_2;
        valid_mem_63_1 <= _valid_mem_1_T_2;
      end
    end
  end // always @(posedge)
  Queue1_final_AXI_response final_response_buffer (
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (/* unused */),
    .io_enq_valid     (_GEN_1 ? _GEN_9 | _GEN_14 | _GEN_11 : _GEN_14 | _GEN_11),
    .io_enq_bits_data (_GEN_1 & _GEN_9 | ~_GEN_14 ? _GEN_10 : AXI_read_buffer),
    .io_enq_bits_ID   (m_axi_rid),
    .io_deq_ready     (_GEN),
    .io_deq_valid     (_final_response_buffer_io_deq_valid),
    .io_deq_bits_data (_final_response_buffer_io_deq_bits_data),
    .io_deq_bits_ID   (/* unused */),
    .io_count         (/* unused */)
  );
  SDPReadWriteSmem_1 LRU_memory (
    .clock       (clock),
    .reset       (reset),
    .io_rd_addr  (current_packet_set),
    .io_data_out (_LRU_memory_io_data_out),
    .io_wr_addr  (LRU_memory_io_wr_addr_REG),
    .io_wr_en    (hit),
    .io_data_in
      ((|valid_oh)
         ? (_GEN_25
              ? (_GEN_23
                   ? {2{(_LRU_memory_io_data_out | hit_oh) != 2'h3}}
                     & _LRU_memory_io_data_out | hit_oh
                   : 2'h1)
              : 2'h2)
         : 2'h1)
  );
  icache_ReadWriteSmem data_memory_0 (
    .clock            (clock),
    .io_wr_en         (_data_memory_0_io_wr_en_T_3),
    .io_addr          (current_packet_set),
    .io_data_in_tag   (replay_address_addr[31:11]),
    .io_data_in_data  (axi_response),
    .io_data_out_tag  (_data_memory_0_io_data_out_tag),
    .io_data_out_data (_data_memory_0_io_data_out_data)
  );
  icache_ReadWriteSmem data_memory_1 (
    .clock            (clock),
    .io_wr_en         (_data_memory_1_io_wr_en_T_3),
    .io_addr          (current_packet_set),
    .io_data_in_tag   (replay_address_addr[31:11]),
    .io_data_in_data  (axi_response),
    .io_data_out_tag  (_data_memory_1_io_data_out_tag),
    .io_data_out_data (_data_memory_1_io_data_out_data)
  );
  instruction_validator validator (
    .io_instruction_index  (fetch_PC_buf_addr[3:2]),
    .io_instruction_output (_validator_io_instruction_output)
  );
  Queue2_fetch_packet CPU_response_skid_buffer (
    .clock                                   (clock),
    .reset                                   (reset),
    .io_enq_ready                            (_CPU_response_skid_buffer_io_enq_ready),
    .io_enq_valid                            (CPU_response_valid),
    .io_enq_bits_fetch_PC                    (fetch_PC_buf_addr),
    .io_enq_bits_valid_bits_0
      (_validator_io_instruction_output[3] & CPU_response_valid),
    .io_enq_bits_valid_bits_1
      (_validator_io_instruction_output[2] & CPU_response_valid),
    .io_enq_bits_valid_bits_2
      (_validator_io_instruction_output[1] & CPU_response_valid),
    .io_enq_bits_valid_bits_3
      (_validator_io_instruction_output[0] & CPU_response_valid),
    .io_enq_bits_instructions_0_instruction
      (_GEN_26[{CPU_response_bits_instructions_0_instruction_REG, 2'h0}]),
    .io_enq_bits_instructions_0_packet_index (4'h0),
    .io_enq_bits_instructions_0_ROB_index    (6'h0),
    .io_enq_bits_instructions_1_instruction
      (_GEN_26[{CPU_response_bits_instructions_1_instruction_REG, 2'h0} + 3'h1]),
    .io_enq_bits_instructions_1_packet_index (4'h1),
    .io_enq_bits_instructions_1_ROB_index    (6'h0),
    .io_enq_bits_instructions_2_instruction
      (_GEN_26[{CPU_response_bits_instructions_2_instruction_REG, 2'h0} + 3'h2]),
    .io_enq_bits_instructions_2_packet_index (4'h2),
    .io_enq_bits_instructions_2_ROB_index    (6'h0),
    .io_enq_bits_instructions_3_instruction
      (_GEN_26[{CPU_response_bits_instructions_3_instruction_REG, 2'h0} + 3'h3]),
    .io_enq_bits_instructions_3_packet_index (4'h3),
    .io_enq_bits_instructions_3_ROB_index    (6'h0),
    .io_enq_bits_prediction_hit              (1'h0),
    .io_enq_bits_prediction_target           (32'h0),
    .io_enq_bits_prediction_br_type          (3'h0),
    .io_enq_bits_prediction_br_mask_0        (1'h0),
    .io_enq_bits_prediction_br_mask_1        (1'h0),
    .io_enq_bits_prediction_br_mask_2        (1'h0),
    .io_enq_bits_prediction_br_mask_3        (1'h0),
    .io_enq_bits_GHR                         (16'h0),
    .io_enq_bits_NEXT                        (7'h0),
    .io_enq_bits_TOS                         (7'h0),
    .io_deq_ready                            (io_CPU_response_ready),
    .io_deq_valid                            (io_CPU_response_valid),
    .io_deq_bits_fetch_PC                    (io_CPU_response_bits_fetch_PC),
    .io_deq_bits_valid_bits_0                (io_CPU_response_bits_valid_bits_0),
    .io_deq_bits_valid_bits_1                (io_CPU_response_bits_valid_bits_1),
    .io_deq_bits_valid_bits_2                (io_CPU_response_bits_valid_bits_2),
    .io_deq_bits_valid_bits_3                (io_CPU_response_bits_valid_bits_3),
    .io_deq_bits_instructions_0_instruction
      (io_CPU_response_bits_instructions_0_instruction),
    .io_deq_bits_instructions_0_packet_index
      (io_CPU_response_bits_instructions_0_packet_index),
    .io_deq_bits_instructions_0_ROB_index
      (io_CPU_response_bits_instructions_0_ROB_index),
    .io_deq_bits_instructions_1_instruction
      (io_CPU_response_bits_instructions_1_instruction),
    .io_deq_bits_instructions_1_packet_index
      (io_CPU_response_bits_instructions_1_packet_index),
    .io_deq_bits_instructions_1_ROB_index
      (io_CPU_response_bits_instructions_1_ROB_index),
    .io_deq_bits_instructions_2_instruction
      (io_CPU_response_bits_instructions_2_instruction),
    .io_deq_bits_instructions_2_packet_index
      (io_CPU_response_bits_instructions_2_packet_index),
    .io_deq_bits_instructions_2_ROB_index
      (io_CPU_response_bits_instructions_2_ROB_index),
    .io_deq_bits_instructions_3_instruction
      (io_CPU_response_bits_instructions_3_instruction),
    .io_deq_bits_instructions_3_packet_index
      (io_CPU_response_bits_instructions_3_packet_index),
    .io_deq_bits_instructions_3_ROB_index
      (io_CPU_response_bits_instructions_3_ROB_index),
    .io_deq_bits_prediction_hit              (io_CPU_response_bits_prediction_hit),
    .io_deq_bits_prediction_target           (io_CPU_response_bits_prediction_target),
    .io_deq_bits_prediction_br_type          (io_CPU_response_bits_prediction_br_type),
    .io_deq_bits_prediction_br_mask_0        (io_CPU_response_bits_prediction_br_mask_0),
    .io_deq_bits_prediction_br_mask_1        (io_CPU_response_bits_prediction_br_mask_1),
    .io_deq_bits_prediction_br_mask_2        (io_CPU_response_bits_prediction_br_mask_2),
    .io_deq_bits_prediction_br_mask_3        (io_CPU_response_bits_prediction_br_mask_3),
    .io_deq_bits_GHR                         (io_CPU_response_bits_GHR),
    .io_deq_bits_NEXT                        (io_CPU_response_bits_NEXT),
    .io_deq_bits_TOS                         (io_CPU_response_bits_TOS),
    .io_count                                (/* unused */),
    .io_flush                                (io_flush_valid)
  );
  assign m_axi_awvalid = 1'h0;
  assign m_axi_awid = 8'h0;
  assign m_axi_awaddr = 32'h0;
  assign m_axi_awlen = 8'h0;
  assign m_axi_awsize = 3'h0;
  assign m_axi_awburst = {1'h0, _GEN_4};
  assign m_axi_awlock = 1'h0;
  assign m_axi_awcache = 4'h0;
  assign m_axi_awprot = 3'h0;
  assign m_axi_awqos = 4'h0;
  assign m_axi_awregion = 4'h0;
  assign m_axi_awuser = 1'h0;
  assign m_axi_wvalid = m_axi_wvalid_0;
  assign m_axi_wdata =
    _GEN_15
      ? AXI_AW_DATA_BUFFER[31:0]
      : _GEN_12 ? AXI_AW_DATA_BUFFER[31:0] : _GEN_5 ? AXI_AW_DATA_BUFFER[31:0] : 32'h0;
  assign m_axi_wstrb = _GEN_15 ? 4'hF : _GEN_0 ? {4{~W_done | _GEN_5}} : {4{_GEN_5}};
  assign m_axi_wlast = _GEN_15 ? ~(|write_counter) : _GEN_12 ? ~(|write_counter) : _GEN_6;
  assign m_axi_wuser = 1'h0;
  assign m_axi_bready = m_axi_bready_0;
  assign m_axi_arvalid = m_axi_arvalid_0;
  assign m_axi_arid = 8'h0;
  assign m_axi_araddr = _GEN_18 ? request_addr : _GEN_3 ? AXI_AR_buf_araddr : 32'h0;
  assign m_axi_arlen = _GEN_18 ? 8'h7 : _GEN_3 ? AXI_AR_buf_arlen : 8'h0;
  assign m_axi_arsize = _GEN_18 ? 3'h2 : _GEN_3 ? AXI_AR_buf_arsize : 3'h0;
  assign m_axi_arburst = {1'h0, (|cache_state) ? _GEN_17 | _GEN_3 : _GEN_16 | _GEN_3};
  assign m_axi_arlock = 1'h0;
  assign m_axi_arcache = 4'h0;
  assign m_axi_arprot = 3'h0;
  assign m_axi_arqos = 4'h0;
  assign m_axi_arregion = 4'h0;
  assign m_axi_aruser = 1'h0;
  assign m_axi_rready = m_axi_rready_0;
  assign io_CPU_request_ready = io_CPU_request_ready_0;
endmodule

