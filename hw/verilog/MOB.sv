// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module MOB(
  inputclock,
reset,
io_flush,
  output                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                io_reserve_0_ready,
  inputio_reserve_0_valid,
  input  struct packed {struct packed {logic RS1_ready; logic RS2_ready; } ready_bits; logic [4:0] RDold; logic [6:0] RD; logic RD_valid; logic [6:0] RS1; logic RS1_valid; logic [6:0] RS2; logic RS2_valid; logic [20:0] IMM; logic [2:0] FUNCT3; logic [1:0] packet_index; logic [5:0] ROB_index; logic [3:0] MOB_index; logic [3:0] FTQ_index; logic [4:0] instructionType; logic [1:0] portID; logic [1:0] RS_type; logic needs_ALU; logic needs_branch_unit; logic needs_CSRs; logic SUBTRACT; logic MULTIPLY; logic IS_IMM; logic [1:0] memory_type; logic [1:0] access_width; } io_reserve_0_bits,
  outputio_reserve_1_ready,
  inputio_reserve_1_valid,
  input  struct packed {struct packed {logic RS1_ready; logic RS2_ready; } ready_bits; logic [4:0] RDold; logic [6:0] RD; logic RD_valid; logic [6:0] RS1; logic RS1_valid; logic [6:0] RS2; logic RS2_valid; logic [20:0] IMM; logic [2:0] FUNCT3; logic [1:0] packet_index; logic [5:0] ROB_index; logic [3:0] MOB_index; logic [3:0] FTQ_index; logic [4:0] instructionType; logic [1:0] portID; logic [1:0] RS_type; logic needs_ALU; logic needs_branch_unit; logic needs_CSRs; logic SUBTRACT; logic MULTIPLY; logic IS_IMM; logic [1:0] memory_type; logic [1:0] access_width; } io_reserve_1_bits,
  outputio_reserve_2_ready,
  inputio_reserve_2_valid,
  input  struct packed {struct packed {logic RS1_ready; logic RS2_ready; } ready_bits; logic [4:0] RDold; logic [6:0] RD; logic RD_valid; logic [6:0] RS1; logic RS1_valid; logic [6:0] RS2; logic RS2_valid; logic [20:0] IMM; logic [2:0] FUNCT3; logic [1:0] packet_index; logic [5:0] ROB_index; logic [3:0] MOB_index; logic [3:0] FTQ_index; logic [4:0] instructionType; logic [1:0] portID; logic [1:0] RS_type; logic needs_ALU; logic needs_branch_unit; logic needs_CSRs; logic SUBTRACT; logic MULTIPLY; logic IS_IMM; logic [1:0] memory_type; logic [1:0] access_width; } io_reserve_2_bits,
  outputio_reserve_3_ready,
  inputio_reserve_3_valid,
  input  struct packed {struct packed {logic RS1_ready; logic RS2_ready; } ready_bits; logic [4:0] RDold; logic [6:0] RD; logic RD_valid; logic [6:0] RS1; logic RS1_valid; logic [6:0] RS2; logic RS2_valid; logic [20:0] IMM; logic [2:0] FUNCT3; logic [1:0] packet_index; logic [5:0] ROB_index; logic [3:0] MOB_index; logic [3:0] FTQ_index; logic [4:0] instructionType; logic [1:0] portID; logic [1:0] RS_type; logic needs_ALU; logic needs_branch_unit; logic needs_CSRs; logic SUBTRACT; logic MULTIPLY; logic IS_IMM; logic [1:0] memory_type; logic [1:0] access_width; } io_reserve_3_bits,
  output struct packed {logic valid; logic [3:0] bits; }[3:0]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           io_reserved_pointers,
  inputio_fetch_PC,
  input  struct packed {logic valid; struct packed {logic [6:0] RD; logic [31:0] RD_data; logic RD_valid; logic [31:0] fetch_PC; logic branch_taken; logic [31:0] target_address; logic branch_valid; logic [31:0] address; logic [1:0] memory_type; logic [1:0] access_width; logic is_unsigned; logic [31:0] wr_data; logic [3:0] MOB_index; logic [5:0] ROB_index; logic [3:0] FTQ_index; logic [1:0] fetch_packet_index; logic exception; } bits; }                                                                                                                                 io_AGU_output,
  output struct packed {logic valid; struct packed {logic [6:0] RD; logic [31:0] RD_data; logic RD_valid; logic [31:0] fetch_PC; logic branch_taken; logic [31:0] target_address; logic branch_valid; logic [31:0] address; logic [1:0] memory_type; logic [1:0] access_width; logic is_unsigned; logic [31:0] wr_data; logic [3:0] MOB_index; logic [5:0] ROB_index; logic [3:0] FTQ_index; logic [1:0] fetch_packet_index; logic exception; } bits; }                                                                                                                                 io_MOB_output,
  input  struct packed {logic valid; struct packed {logic [31:0] fetch_PC; logic T_NT; logic [5:0] ROB_index; logic [2:0] br_type; logic [1:0] fetch_packet_index; logic is_misprediction; logic exception; logic [31:0] expected_PC; logic [15:0] GHR; logic [6:0] TOS; logic [6:0] NEXT; logic [7:0] free_list_front_pointer; logic [3:0][4:0] RDold; logic [3:0][6:0] RD; logic [3:0] RD_valid; } bits; }                                                                                                                                                                            io_commit,
  input                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 io_backend_memory_request_ready,
  output                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                io_backend_memory_request_valid,
  output struct packed {logic [31:0] addr; logic [31:0] data; logic [1:0] memory_type; logic [1:0] access_width; logic [3:0] MOB_index; }                                                                                                                                                                                                                                                                                                                                                                                                                                               io_backend_memory_request_bits,
  outputio_backend_memory_response_ready,
  inputio_backend_memory_response_valid,
  input  struct packed {logic [31:0] data; logic [3:0] MOB_index; }io_backend_memory_response_bits
);

  wire [3:0][7:0]       _GEN;
  wire [3:0][7:0]       _GEN_0;
  wire [3:0][7:0]       _GEN_1;
  wire [3:0][7:0]       _GEN_2;
  wire [3:0][7:0]       _GEN_3;
  wire [3:0][7:0]       _GEN_4;
  wire [3:0][7:0]       _GEN_5;
  wire [3:0][7:0]       _GEN_6;
  wire [3:0][7:0]       _GEN_7;
  wire [3:0][7:0]       _GEN_8;
  wire [3:0][7:0]       _GEN_9;
  wire [3:0][7:0]       _GEN_10;
  wire [3:0][7:0]       _GEN_11;
  wire [3:0][7:0]       _GEN_12;
  wire [3:0][7:0]       _GEN_13;
  wire [3:0][7:0]       _GEN_14;
  wire [2:0]            _availalbe_MOB_entries_4to2;
  wire [15:0]           possible_FU_stores;
  wire [15:0]           possible_FU_loads;
  wire [15:0]           possible_load_vec;
  wire [3:0]            written_vec;
  wire                  _FU_output_arbiter_io_in_0_ready;
  wire                  _FU_output_arbiter_io_in_1_ready;
  wire                  _FU_output_arbiter_io_out_valid;
  wire
    struct packed {logic [6:0] RD; logic [31:0] RD_data; logic RD_valid; logic [31:0] fetch_PC; logic branch_taken; logic [31:0] target_address; logic branch_valid; logic [31:0] address; logic [1:0] memory_type; logic [1:0] access_width; logic is_unsigned; logic [31:0] wr_data; logic [3:0] MOB_index; logic [5:0] ROB_index; logic [3:0] FTQ_index; logic [1:0] fetch_packet_index; logic exception; }
    _FU_output_arbiter_io_out_bits;
  wire                  _FU_output_store_Q_io_enq_ready;
  wire                  _FU_output_store_Q_io_deq_valid;
  wire
    struct packed {logic [6:0] RD; logic [31:0] RD_data; logic RD_valid; logic [31:0] fetch_PC; logic branch_taken; logic [31:0] target_address; logic branch_valid; logic [31:0] address; logic [1:0] memory_type; logic [1:0] access_width; logic is_unsigned; logic [31:0] wr_data; logic [3:0] MOB_index; logic [5:0] ROB_index; logic [3:0] FTQ_index; logic [1:0] fetch_packet_index; logic exception; }
    _FU_output_store_Q_io_deq_bits;
  wire                  _FU_output_load_Q_io_enq_ready;
  wire                  _FU_output_load_Q_io_deq_valid;
  wire
    struct packed {logic [6:0] RD; logic [31:0] RD_data; logic RD_valid; logic [31:0] fetch_PC; logic branch_taken; logic [31:0] target_address; logic branch_valid; logic [31:0] address; logic [1:0] memory_type; logic [1:0] access_width; logic is_unsigned; logic [31:0] wr_data; logic [3:0] MOB_index; logic [5:0] ROB_index; logic [3:0] FTQ_index; logic [1:0] fetch_packet_index; logic exception; }
    _FU_output_load_Q_io_deq_bits;
  wire [3:0][7:0]       _GEN_15 = '{8'h0, 8'h0, 8'h0, 8'h0};
  reg  [4:0]            front_pointer;
  reg  [4:0]            back_pointer;
  wire [3:0]            front_index = front_pointer[3:0];
  wire [3:0]            back_index = back_pointer[3:0];
  struct packed {logic valid; logic [1:0] memory_type; logic [5:0] ROB_index; logic [1:0] fetch_packet_index; logic [31:0] address; logic [1:0] access_width; logic [6:0] RD; logic [31:0] data; logic data_valid; logic pending; logic completed; logic committed; logic exception; }[15:0]
    MOB;
  wire [15:0][3:0]      age_vector;
  wire [4:0]            _age_vector_0_T_2 = {1'h0, 4'h0 - front_index} % 5'h10;
  wire [4:0]            _age_vector_1_T_2 = {1'h0, 4'h1 - front_index} % 5'h10;
  wire [4:0]            _age_vector_2_T_2 = {1'h0, 4'h2 - front_index} % 5'h10;
  wire [4:0]            _age_vector_3_T_2 = {1'h0, 4'h3 - front_index} % 5'h10;
  wire [4:0]            _age_vector_4_T_2 = {1'h0, 4'h4 - front_index} % 5'h10;
  wire [4:0]            _age_vector_5_T_2 = {1'h0, 4'h5 - front_index} % 5'h10;
  wire [4:0]            _age_vector_6_T_2 = {1'h0, 4'h6 - front_index} % 5'h10;
  wire [4:0]            _age_vector_7_T_2 = {1'h0, 4'h7 - front_index} % 5'h10;
  wire [4:0]            _age_vector_8_T_2 = {1'h0, 4'h8 - front_index} % 5'h10;
  wire [4:0]            _age_vector_9_T_2 = {1'h0, 4'h9 - front_index} % 5'h10;
  wire [4:0]            _age_vector_10_T_2 = {1'h0, 4'hA - front_index} % 5'h10;
  wire [4:0]            _age_vector_11_T_2 = {1'h0, 4'hB - front_index} % 5'h10;
  wire [4:0]            _age_vector_12_T_2 = {1'h0, 4'hC - front_index} % 5'h10;
  wire [4:0]            _age_vector_13_T_2 = {1'h0, 4'hD - front_index} % 5'h10;
  wire [4:0]            _age_vector_14_T_2 = {1'h0, 4'hE - front_index} % 5'h10;
  wire [4:0]            _age_vector_15_T_2 = {1'h0, 4'hF - front_index} % 5'h10;
  assign age_vector =
    {{_age_vector_15_T_2[3:0]},
     {_age_vector_14_T_2[3:0]},
     {_age_vector_13_T_2[3:0]},
     {_age_vector_12_T_2[3:0]},
     {_age_vector_11_T_2[3:0]},
     {_age_vector_10_T_2[3:0]},
     {_age_vector_9_T_2[3:0]},
     {_age_vector_8_T_2[3:0]},
     {_age_vector_7_T_2[3:0]},
     {_age_vector_6_T_2[3:0]},
     {_age_vector_5_T_2[3:0]},
     {_age_vector_4_T_2[3:0]},
     {_age_vector_3_T_2[3:0]},
     {_age_vector_2_T_2[3:0]},
     {_age_vector_1_T_2[3:0]},
     {_age_vector_0_T_2[3:0]}};
  assign written_vec =
    {{io_reserve_3_valid},
     {io_reserve_2_valid},
     {io_reserve_1_valid},
     {io_reserve_0_valid}}
    & {{|_availalbe_MOB_entries_4to2},
       {|_availalbe_MOB_entries_4to2},
       {|_availalbe_MOB_entries_4to2},
       {|_availalbe_MOB_entries_4to2}};
  wire [1:0]            _GEN_16 = {1'h0, written_vec[2'h0]};
  wire [3:0]            _io_reserved_pointers_0_bits_T =
    back_index + {3'h0, written_vec[2'h0] - 1'h1};
  wire [1:0]            _GEN_17 = {1'h0, written_vec[2'h1]};
  wire [3:0]            _io_reserved_pointers_1_bits_T =
    back_index + {2'h0, _GEN_16 + _GEN_17 - 2'h1};
  wire [1:0]            _GEN_18 = {1'h0, written_vec[2'h2]};
  wire [3:0]            _io_reserved_pointers_2_bits_T =
    back_index + {2'h0, _GEN_16 + _GEN_17 + _GEN_18 - 2'h1};
  wire [1:0]            _GEN_19 = {1'h0, written_vec[2'h3]};
  wire [3:0]            _io_reserved_pointers_3_bits_T =
    back_index + {1'h0, {1'h0, _GEN_16 + _GEN_17} + {1'h0, _GEN_18 + _GEN_19} - 3'h1};
  wire [15:0][3:0]      byte_sels;
  wire [15:0][3:0][7:0] wr_bytes;
  wire                  is_load = MOB[4'h0].memory_type == 2'h1;
  wire                  is_store = MOB[4'h0].memory_type == 2'h2;
  wire                  is_load_1 = MOB[4'h1].memory_type == 2'h1;
  wire                  is_store_1 = MOB[4'h1].memory_type == 2'h2;
  wire                  is_load_2 = MOB[4'h2].memory_type == 2'h1;
  wire                  is_store_2 = MOB[4'h2].memory_type == 2'h2;
  wire                  is_load_3 = MOB[4'h3].memory_type == 2'h1;
  wire                  is_store_3 = MOB[4'h3].memory_type == 2'h2;
  wire                  is_load_4 = MOB[4'h4].memory_type == 2'h1;
  wire                  is_store_4 = MOB[4'h4].memory_type == 2'h2;
  wire                  is_load_5 = MOB[4'h5].memory_type == 2'h1;
  wire                  is_store_5 = MOB[4'h5].memory_type == 2'h2;
  wire                  is_load_6 = MOB[4'h6].memory_type == 2'h1;
  wire                  is_store_6 = MOB[4'h6].memory_type == 2'h2;
  wire                  is_load_7 = MOB[4'h7].memory_type == 2'h1;
  wire                  is_store_7 = MOB[4'h7].memory_type == 2'h2;
  wire                  is_load_8 = MOB[4'h8].memory_type == 2'h1;
  wire                  is_store_8 = MOB[4'h8].memory_type == 2'h2;
  wire                  is_load_9 = MOB[4'h9].memory_type == 2'h1;
  wire                  is_store_9 = MOB[4'h9].memory_type == 2'h2;
  wire                  is_load_10 = MOB[4'hA].memory_type == 2'h1;
  wire                  is_store_10 = MOB[4'hA].memory_type == 2'h2;
  wire                  is_load_11 = MOB[4'hB].memory_type == 2'h1;
  wire                  is_store_11 = MOB[4'hB].memory_type == 2'h2;
  wire                  is_load_12 = MOB[4'hC].memory_type == 2'h1;
  wire                  is_store_12 = MOB[4'hC].memory_type == 2'h2;
  wire                  is_load_13 = MOB[4'hD].memory_type == 2'h1;
  wire                  is_store_13 = MOB[4'hD].memory_type == 2'h2;
  wire                  is_load_14 = MOB[4'hE].memory_type == 2'h1;
  wire                  is_store_14 = MOB[4'hE].memory_type == 2'h2;
  wire                  is_load_15 = MOB[4'hF].memory_type == 2'h1;
  wire                  is_store_15 = MOB[4'hF].memory_type == 2'h2;
  wire [15:0]           _GEN_20 =
    {{MOB[4'hF].valid},
     {MOB[4'hE].valid},
     {MOB[4'hD].valid},
     {MOB[4'hC].valid},
     {MOB[4'hB].valid},
     {MOB[4'hA].valid},
     {MOB[4'h9].valid},
     {MOB[4'h8].valid},
     {MOB[4'h7].valid},
     {MOB[4'h6].valid},
     {MOB[4'h5].valid},
     {MOB[4'h4].valid},
     {MOB[4'h3].valid},
     {MOB[4'h2].valid},
     {MOB[4'h1].valid},
     {MOB[4'h0].valid}};
  wire [15:0]           _GEN_21 =
    {{MOB[4'hF].pending},
     {MOB[4'hE].pending},
     {MOB[4'hD].pending},
     {MOB[4'hC].pending},
     {MOB[4'hB].pending},
     {MOB[4'hA].pending},
     {MOB[4'h9].pending},
     {MOB[4'h8].pending},
     {MOB[4'h7].pending},
     {MOB[4'h6].pending},
     {MOB[4'h5].pending},
     {MOB[4'h4].pending},
     {MOB[4'h3].pending},
     {MOB[4'h2].pending},
     {MOB[4'h1].pending},
     {MOB[4'h0].pending}};
  wire [15:0]           _GEN_22 =
    {{is_load_15},
     {is_load_14},
     {is_load_13},
     {is_load_12},
     {is_load_11},
     {is_load_10},
     {is_load_9},
     {is_load_8},
     {is_load_7},
     {is_load_6},
     {is_load_5},
     {is_load_4},
     {is_load_3},
     {is_load_2},
     {is_load_1},
     {is_load}};
  wire [15:0]           _GEN_23 = _GEN_20 & _GEN_21 & _GEN_22;
  assign possible_load_vec = _GEN_23;
  wire                  fire_store =
    MOB[front_index].valid & MOB[front_index].committed & MOB[front_index].pending
    & ~MOB[front_index].exception & MOB[front_index].memory_type == 2'h2;
  wire [3:0]            load_index =
    possible_load_vec[4'h0]
      ? 4'h0
      : possible_load_vec[4'h1]
          ? 4'h1
          : possible_load_vec[4'h2]
              ? 4'h2
              : possible_load_vec[4'h3]
                  ? 4'h3
                  : possible_load_vec[4'h4]
                      ? 4'h4
                      : possible_load_vec[4'h5]
                          ? 4'h5
                          : possible_load_vec[4'h6]
                              ? 4'h6
                              : possible_load_vec[4'h7]
                                  ? 4'h7
                                  : possible_load_vec[4'h8]
                                      ? 4'h8
                                      : possible_load_vec[4'h9]
                                          ? 4'h9
                                          : possible_load_vec[4'hA]
                                              ? 4'hA
                                              : possible_load_vec[4'hB]
                                                  ? 4'hB
                                                  : possible_load_vec[4'hC]
                                                      ? 4'hC
                                                      : possible_load_vec[4'hD]
                                                          ? 4'hD
                                                          : {3'h7,
                                                             ~possible_load_vec[4'hE]};
  wire                  _FU_output_load_Q_io_flush_T =
    io_commit.bits.is_misprediction | io_commit.bits.exception;
  wire [15:0]           _GEN_24 =
    _GEN_20
    & {{~MOB[4'hF].completed},
       {~MOB[4'hE].completed},
       {~MOB[4'hD].completed},
       {~MOB[4'hC].completed},
       {~MOB[4'hB].completed},
       {~MOB[4'hA].completed},
       {~MOB[4'h9].completed},
       {~MOB[4'h8].completed},
       {~MOB[4'h7].completed},
       {~MOB[4'h6].completed},
       {~MOB[4'h5].completed},
       {~MOB[4'h4].completed},
       {~MOB[4'h3].completed},
       {~MOB[4'h2].completed},
       {~MOB[4'h1].completed},
       {~MOB[4'h0].completed}};
  assign possible_FU_loads =
    _GEN_24
    & {{MOB[4'hF].data_valid},
       {MOB[4'hE].data_valid},
       {MOB[4'hD].data_valid},
       {MOB[4'hC].data_valid},
       {MOB[4'hB].data_valid},
       {MOB[4'hA].data_valid},
       {MOB[4'h9].data_valid},
       {MOB[4'h8].data_valid},
       {MOB[4'h7].data_valid},
       {MOB[4'h6].data_valid},
       {MOB[4'h5].data_valid},
       {MOB[4'h4].data_valid},
       {MOB[4'h3].data_valid},
       {MOB[4'h2].data_valid},
       {MOB[4'h1].data_valid},
       {MOB[4'h0].data_valid}} & _GEN_22;
  assign possible_FU_stores =
    _GEN_24 & _GEN_21
    & {{is_store_15},
       {is_store_14},
       {is_store_13},
       {is_store_12},
       {is_store_11},
       {is_store_10},
       {is_store_9},
       {is_store_8},
       {is_store_7},
       {is_store_6},
       {is_store_5},
       {is_store_4},
       {is_store_3},
       {is_store_2},
       {is_store_1},
       {is_store}};
  wire [3:0]            possible_FU_load_index =
    possible_FU_loads[4'h0]
      ? 4'h0
      : possible_FU_loads[4'h1]
          ? 4'h1
          : possible_FU_loads[4'h2]
              ? 4'h2
              : possible_FU_loads[4'h3]
                  ? 4'h3
                  : possible_FU_loads[4'h4]
                      ? 4'h4
                      : possible_FU_loads[4'h5]
                          ? 4'h5
                          : possible_FU_loads[4'h6]
                              ? 4'h6
                              : possible_FU_loads[4'h7]
                                  ? 4'h7
                                  : possible_FU_loads[4'h8]
                                      ? 4'h8
                                      : possible_FU_loads[4'h9]
                                          ? 4'h9
                                          : possible_FU_loads[4'hA]
                                              ? 4'hA
                                              : possible_FU_loads[4'hB]
                                                  ? 4'hB
                                                  : possible_FU_loads[4'hC]
                                                      ? 4'hC
                                                      : possible_FU_loads[4'hD]
                                                          ? 4'hD
                                                          : {3'h7,
                                                             ~possible_FU_loads[4'hE]};
  wire [3:0]            possible_FU_store_index =
    possible_FU_stores[4'h0]
      ? 4'h0
      : possible_FU_stores[4'h1]
          ? 4'h1
          : possible_FU_stores[4'h2]
              ? 4'h2
              : possible_FU_stores[4'h3]
                  ? 4'h3
                  : possible_FU_stores[4'h4]
                      ? 4'h4
                      : possible_FU_stores[4'h5]
                          ? 4'h5
                          : possible_FU_stores[4'h6]
                              ? 4'h6
                              : possible_FU_stores[4'h7]
                                  ? 4'h7
                                  : possible_FU_stores[4'h8]
                                      ? 4'h8
                                      : possible_FU_stores[4'h9]
                                          ? 4'h9
                                          : possible_FU_stores[4'hA]
                                              ? 4'hA
                                              : possible_FU_stores[4'hB]
                                                  ? 4'hB
                                                  : possible_FU_stores[4'hC]
                                                      ? 4'hC
                                                      : possible_FU_stores[4'hD]
                                                          ? 4'hD
                                                          : {3'h7,
                                                             ~possible_FU_stores[4'hE]};
  wire                  _FU_output_store_Q_io_enq_valid_T_14 =
    possible_FU_stores[4'h0] | possible_FU_stores[4'h1] | possible_FU_stores[4'h2]
    | possible_FU_stores[4'h3] | possible_FU_stores[4'h4] | possible_FU_stores[4'h5]
    | possible_FU_stores[4'h6] | possible_FU_stores[4'h7] | possible_FU_stores[4'h8]
    | possible_FU_stores[4'h9] | possible_FU_stores[4'hA] | possible_FU_stores[4'hB]
    | possible_FU_stores[4'hC] | possible_FU_stores[4'hD] | possible_FU_stores[4'hE]
    | possible_FU_stores[4'hF];
  wire [3:0]            response_age =
    age_vector[io_backend_memory_response_bits.MOB_index];
  wire                  _GEN_25 = MOB[4'h0].access_width == 2'h1;
  wire                  _GEN_26 = MOB[4'h0].access_width == 2'h2;
  wire                  _GEN_27 = MOB[4'h0].address[1:0] == 2'h0;
  wire                  _GEN_28 = MOB[4'h0].address[1:0] == 2'h2;
  wire                  _GEN_29 = MOB[4'h1].access_width == 2'h1;
  wire                  _GEN_30 = MOB[4'h1].access_width == 2'h2;
  wire                  _GEN_31 = MOB[4'h1].address[1:0] == 2'h0;
  wire                  _GEN_32 = MOB[4'h1].address[1:0] == 2'h2;
  wire                  _GEN_33 = MOB[4'h2].access_width == 2'h1;
  wire                  _GEN_34 = MOB[4'h2].access_width == 2'h2;
  wire                  _GEN_35 = MOB[4'h2].address[1:0] == 2'h0;
  wire                  _GEN_36 = MOB[4'h2].address[1:0] == 2'h2;
  wire                  _GEN_37 = MOB[4'h3].access_width == 2'h1;
  wire                  _GEN_38 = MOB[4'h3].access_width == 2'h2;
  wire                  _GEN_39 = MOB[4'h3].address[1:0] == 2'h0;
  wire                  _GEN_40 = MOB[4'h3].address[1:0] == 2'h2;
  wire                  _GEN_41 = MOB[4'h4].access_width == 2'h1;
  wire                  _GEN_42 = MOB[4'h4].access_width == 2'h2;
  wire                  _GEN_43 = MOB[4'h4].address[1:0] == 2'h0;
  wire                  _GEN_44 = MOB[4'h4].address[1:0] == 2'h2;
  wire                  _GEN_45 = MOB[4'h5].access_width == 2'h1;
  wire                  _GEN_46 = MOB[4'h5].access_width == 2'h2;
  wire                  _GEN_47 = MOB[4'h5].address[1:0] == 2'h0;
  wire                  _GEN_48 = MOB[4'h5].address[1:0] == 2'h2;
  wire                  _GEN_49 = MOB[4'h6].access_width == 2'h1;
  wire                  _GEN_50 = MOB[4'h6].access_width == 2'h2;
  wire                  _GEN_51 = MOB[4'h6].address[1:0] == 2'h0;
  wire                  _GEN_52 = MOB[4'h6].address[1:0] == 2'h2;
  wire                  _GEN_53 = MOB[4'h7].access_width == 2'h1;
  wire                  _GEN_54 = MOB[4'h7].access_width == 2'h2;
  wire                  _GEN_55 = MOB[4'h7].address[1:0] == 2'h0;
  wire                  _GEN_56 = MOB[4'h7].address[1:0] == 2'h2;
  wire                  _GEN_57 = MOB[4'h8].access_width == 2'h1;
  wire                  _GEN_58 = MOB[4'h8].access_width == 2'h2;
  wire                  _GEN_59 = MOB[4'h8].address[1:0] == 2'h0;
  wire                  _GEN_60 = MOB[4'h8].address[1:0] == 2'h2;
  wire                  _GEN_61 = MOB[4'h9].access_width == 2'h1;
  wire                  _GEN_62 = MOB[4'h9].access_width == 2'h2;
  wire                  _GEN_63 = MOB[4'h9].address[1:0] == 2'h0;
  wire                  _GEN_64 = MOB[4'h9].address[1:0] == 2'h2;
  wire                  _GEN_65 = MOB[4'hA].access_width == 2'h1;
  wire                  _GEN_66 = MOB[4'hA].access_width == 2'h2;
  wire                  _GEN_67 = MOB[4'hA].address[1:0] == 2'h0;
  wire                  _GEN_68 = MOB[4'hA].address[1:0] == 2'h2;
  wire                  _GEN_69 = MOB[4'hB].access_width == 2'h1;
  wire                  _GEN_70 = MOB[4'hB].access_width == 2'h2;
  wire                  _GEN_71 = MOB[4'hB].address[1:0] == 2'h0;
  wire                  _GEN_72 = MOB[4'hB].address[1:0] == 2'h2;
  wire                  _GEN_73 = MOB[4'hC].access_width == 2'h1;
  wire                  _GEN_74 = MOB[4'hC].access_width == 2'h2;
  wire                  _GEN_75 = MOB[4'hC].address[1:0] == 2'h0;
  wire                  _GEN_76 = MOB[4'hC].address[1:0] == 2'h2;
  wire                  _GEN_77 = MOB[4'hD].access_width == 2'h1;
  wire                  _GEN_78 = MOB[4'hD].access_width == 2'h2;
  wire                  _GEN_79 = MOB[4'hD].address[1:0] == 2'h0;
  wire                  _GEN_80 = MOB[4'hD].address[1:0] == 2'h2;
  wire                  _GEN_81 = MOB[4'hE].access_width == 2'h1;
  wire                  _GEN_82 = MOB[4'hE].access_width == 2'h2;
  wire                  _GEN_83 = MOB[4'hE].address[1:0] == 2'h0;
  wire                  _GEN_84 = MOB[4'hE].address[1:0] == 2'h2;
  wire                  _GEN_85 = MOB[4'hF].access_width == 2'h1;
  wire                  _GEN_86 = MOB[4'hF].access_width == 2'h2;
  wire                  _GEN_87 = MOB[4'hF].address[1:0] == 2'h0;
  wire                  _GEN_88 = MOB[4'hF].address[1:0] == 2'h2;
  assign byte_sels =
    {{is_store_15
        ? (_GEN_85
             ? 4'h1 << MOB[4'hF].address[1:0]
             : _GEN_86
                 ? (_GEN_87 ? 4'h3 : _GEN_88 ? 4'hC : 4'h0)
                 : {4{&MOB[4'hF].access_width}})
        : 4'h0},
     {is_store_14
        ? (_GEN_81
             ? 4'h1 << MOB[4'hE].address[1:0]
             : _GEN_82
                 ? (_GEN_83 ? 4'h3 : _GEN_84 ? 4'hC : 4'h0)
                 : {4{&MOB[4'hE].access_width}})
        : 4'h0},
     {is_store_13
        ? (_GEN_77
             ? 4'h1 << MOB[4'hD].address[1:0]
             : _GEN_78
                 ? (_GEN_79 ? 4'h3 : _GEN_80 ? 4'hC : 4'h0)
                 : {4{&MOB[4'hD].access_width}})
        : 4'h0},
     {is_store_12
        ? (_GEN_73
             ? 4'h1 << MOB[4'hC].address[1:0]
             : _GEN_74
                 ? (_GEN_75 ? 4'h3 : _GEN_76 ? 4'hC : 4'h0)
                 : {4{&MOB[4'hC].access_width}})
        : 4'h0},
     {is_store_11
        ? (_GEN_69
             ? 4'h1 << MOB[4'hB].address[1:0]
             : _GEN_70
                 ? (_GEN_71 ? 4'h3 : _GEN_72 ? 4'hC : 4'h0)
                 : {4{&MOB[4'hB].access_width}})
        : 4'h0},
     {is_store_10
        ? (_GEN_65
             ? 4'h1 << MOB[4'hA].address[1:0]
             : _GEN_66
                 ? (_GEN_67 ? 4'h3 : _GEN_68 ? 4'hC : 4'h0)
                 : {4{&MOB[4'hA].access_width}})
        : 4'h0},
     {is_store_9
        ? (_GEN_61
             ? 4'h1 << MOB[4'h9].address[1:0]
             : _GEN_62
                 ? (_GEN_63 ? 4'h3 : _GEN_64 ? 4'hC : 4'h0)
                 : {4{&MOB[4'h9].access_width}})
        : 4'h0},
     {is_store_8
        ? (_GEN_57
             ? 4'h1 << MOB[4'h8].address[1:0]
             : _GEN_58
                 ? (_GEN_59 ? 4'h3 : _GEN_60 ? 4'hC : 4'h0)
                 : {4{&MOB[4'h8].access_width}})
        : 4'h0},
     {is_store_7
        ? (_GEN_53
             ? 4'h1 << MOB[4'h7].address[1:0]
             : _GEN_54
                 ? (_GEN_55 ? 4'h3 : _GEN_56 ? 4'hC : 4'h0)
                 : {4{&MOB[4'h7].access_width}})
        : 4'h0},
     {is_store_6
        ? (_GEN_49
             ? 4'h1 << MOB[4'h6].address[1:0]
             : _GEN_50
                 ? (_GEN_51 ? 4'h3 : _GEN_52 ? 4'hC : 4'h0)
                 : {4{&MOB[4'h6].access_width}})
        : 4'h0},
     {is_store_5
        ? (_GEN_45
             ? 4'h1 << MOB[4'h5].address[1:0]
             : _GEN_46
                 ? (_GEN_47 ? 4'h3 : _GEN_48 ? 4'hC : 4'h0)
                 : {4{&MOB[4'h5].access_width}})
        : 4'h0},
     {is_store_4
        ? (_GEN_41
             ? 4'h1 << MOB[4'h4].address[1:0]
             : _GEN_42
                 ? (_GEN_43 ? 4'h3 : _GEN_44 ? 4'hC : 4'h0)
                 : {4{&MOB[4'h4].access_width}})
        : 4'h0},
     {is_store_3
        ? (_GEN_37
             ? 4'h1 << MOB[4'h3].address[1:0]
             : _GEN_38
                 ? (_GEN_39 ? 4'h3 : _GEN_40 ? 4'hC : 4'h0)
                 : {4{&MOB[4'h3].access_width}})
        : 4'h0},
     {is_store_2
        ? (_GEN_33
             ? 4'h1 << MOB[4'h2].address[1:0]
             : _GEN_34
                 ? (_GEN_35 ? 4'h3 : _GEN_36 ? 4'hC : 4'h0)
                 : {4{&MOB[4'h2].access_width}})
        : 4'h0},
     {is_store_1
        ? (_GEN_29
             ? 4'h1 << MOB[4'h1].address[1:0]
             : _GEN_30
                 ? (_GEN_31 ? 4'h3 : _GEN_32 ? 4'hC : 4'h0)
                 : {4{&MOB[4'h1].access_width}})
        : 4'h0},
     {is_store
        ? (_GEN_25
             ? 4'h1 << MOB[4'h0].address[1:0]
             : _GEN_26
                 ? (_GEN_27 ? 4'h3 : _GEN_28 ? 4'hC : 4'h0)
                 : {4{&MOB[4'h0].access_width}})
        : 4'h0}};
  wire                  _GEN_89 = MOB[4'h0].address[1:0] == 2'h1;
  wire [3:0][7:0]       _GEN_90 =
    {{8'h0}, {MOB[4'h0].data[7:0]}, {MOB[4'h0].data[15:8]}, {8'h0}};
  wire [3:0][7:0]       _GEN_91 =
    {{_GEN_27 ? MOB[4'h0].data[15:8] : _GEN_89 ? MOB[4'h0].data[7:0] : 8'h0},
     {_GEN_27 ? MOB[4'h0].data[15:8] : _GEN_89 ? MOB[4'h0].data[7:0] : 8'h0},
     {_GEN_89 ? MOB[4'h0].data[7:0] : 8'h0},
     {8'h0}};
  wire [3:0][7:0]       _GEN_92 =
    {{8'h0}, {MOB[4'h0].data[7:0]}, {MOB[4'h0].data[15:8]}, {MOB[4'h0].data[23:16]}};
  wire [3:0][7:0]       _GEN_93 =
    {{_GEN_92[MOB[4'h0].address[1:0]]},
     {_GEN_90[MOB[4'h0].address[1:0]]},
     {_GEN_28 ? MOB[4'h0].data[7:0] : 8'h0},
     {8'h0}};
  wire [3:0][7:0]       _GEN_94 =
    {{MOB[4'h0].data[7:0]},
     {MOB[4'h0].data[15:8]},
     {MOB[4'h0].data[23:16]},
     {MOB[4'h0].data[31:24]}};
  wire [3:0][7:0]       _GEN_95 =
    {{_GEN_94[MOB[4'h0].address[1:0]]},
     {_GEN_27 | _GEN_89
        ? 8'h0
        : _GEN_28
            ? MOB[4'h0].data[15:8]
            : (&(MOB[4'h0].address[1:0])) ? MOB[4'h0].data[7:0] : 8'h0},
     {(&(MOB[4'h0].address[1:0])) ? MOB[4'h0].data[7:0] : 8'h0},
     {8'h0}};
  wire                  _GEN_96 = MOB[4'h1].address[1:0] == 2'h1;
  wire [3:0][7:0]       _GEN_97 =
    {{8'h0}, {MOB[4'h1].data[7:0]}, {MOB[4'h1].data[15:8]}, {8'h0}};
  wire [3:0][7:0]       _GEN_98 =
    {{_GEN_31 ? MOB[4'h1].data[15:8] : _GEN_96 ? MOB[4'h1].data[7:0] : 8'h0},
     {_GEN_31 ? MOB[4'h1].data[15:8] : _GEN_96 ? MOB[4'h1].data[7:0] : 8'h0},
     {_GEN_96 ? MOB[4'h1].data[7:0] : 8'h0},
     {8'h0}};
  wire [3:0][7:0]       _GEN_99 =
    {{8'h0}, {MOB[4'h1].data[7:0]}, {MOB[4'h1].data[15:8]}, {MOB[4'h1].data[23:16]}};
  wire [3:0][7:0]       _GEN_100 =
    {{_GEN_99[MOB[4'h1].address[1:0]]},
     {_GEN_97[MOB[4'h1].address[1:0]]},
     {_GEN_32 ? MOB[4'h1].data[7:0] : 8'h0},
     {8'h0}};
  wire [3:0][7:0]       _GEN_101 =
    {{MOB[4'h1].data[7:0]},
     {MOB[4'h1].data[15:8]},
     {MOB[4'h1].data[23:16]},
     {MOB[4'h1].data[31:24]}};
  wire [3:0][7:0]       _GEN_102 =
    {{_GEN_101[MOB[4'h1].address[1:0]]},
     {_GEN_31 | _GEN_96
        ? 8'h0
        : _GEN_32
            ? MOB[4'h1].data[15:8]
            : (&(MOB[4'h1].address[1:0])) ? MOB[4'h1].data[7:0] : 8'h0},
     {(&(MOB[4'h1].address[1:0])) ? MOB[4'h1].data[7:0] : 8'h0},
     {8'h0}};
  wire                  _GEN_103 = MOB[4'h2].address[1:0] == 2'h1;
  wire [3:0][7:0]       _GEN_104 =
    {{8'h0}, {MOB[4'h2].data[7:0]}, {MOB[4'h2].data[15:8]}, {8'h0}};
  wire [3:0][7:0]       _GEN_105 =
    {{_GEN_35 ? MOB[4'h2].data[15:8] : _GEN_103 ? MOB[4'h2].data[7:0] : 8'h0},
     {_GEN_35 ? MOB[4'h2].data[15:8] : _GEN_103 ? MOB[4'h2].data[7:0] : 8'h0},
     {_GEN_103 ? MOB[4'h2].data[7:0] : 8'h0},
     {8'h0}};
  wire [3:0][7:0]       _GEN_106 =
    {{8'h0}, {MOB[4'h2].data[7:0]}, {MOB[4'h2].data[15:8]}, {MOB[4'h2].data[23:16]}};
  wire [3:0][7:0]       _GEN_107 =
    {{_GEN_106[MOB[4'h2].address[1:0]]},
     {_GEN_104[MOB[4'h2].address[1:0]]},
     {_GEN_36 ? MOB[4'h2].data[7:0] : 8'h0},
     {8'h0}};
  wire [3:0][7:0]       _GEN_108 =
    {{MOB[4'h2].data[7:0]},
     {MOB[4'h2].data[15:8]},
     {MOB[4'h2].data[23:16]},
     {MOB[4'h2].data[31:24]}};
  wire [3:0][7:0]       _GEN_109 =
    {{_GEN_108[MOB[4'h2].address[1:0]]},
     {_GEN_35 | _GEN_103
        ? 8'h0
        : _GEN_36
            ? MOB[4'h2].data[15:8]
            : (&(MOB[4'h2].address[1:0])) ? MOB[4'h2].data[7:0] : 8'h0},
     {(&(MOB[4'h2].address[1:0])) ? MOB[4'h2].data[7:0] : 8'h0},
     {8'h0}};
  wire                  _GEN_110 = MOB[4'h3].address[1:0] == 2'h1;
  wire [3:0][7:0]       _GEN_111 =
    {{8'h0}, {MOB[4'h3].data[7:0]}, {MOB[4'h3].data[15:8]}, {8'h0}};
  wire [3:0][7:0]       _GEN_112 =
    {{_GEN_39 ? MOB[4'h3].data[15:8] : _GEN_110 ? MOB[4'h3].data[7:0] : 8'h0},
     {_GEN_39 ? MOB[4'h3].data[15:8] : _GEN_110 ? MOB[4'h3].data[7:0] : 8'h0},
     {_GEN_110 ? MOB[4'h3].data[7:0] : 8'h0},
     {8'h0}};
  wire [3:0][7:0]       _GEN_113 =
    {{8'h0}, {MOB[4'h3].data[7:0]}, {MOB[4'h3].data[15:8]}, {MOB[4'h3].data[23:16]}};
  wire [3:0][7:0]       _GEN_114 =
    {{_GEN_113[MOB[4'h3].address[1:0]]},
     {_GEN_111[MOB[4'h3].address[1:0]]},
     {_GEN_40 ? MOB[4'h3].data[7:0] : 8'h0},
     {8'h0}};
  wire [3:0][7:0]       _GEN_115 =
    {{MOB[4'h3].data[7:0]},
     {MOB[4'h3].data[15:8]},
     {MOB[4'h3].data[23:16]},
     {MOB[4'h3].data[31:24]}};
  wire [3:0][7:0]       _GEN_116 =
    {{_GEN_115[MOB[4'h3].address[1:0]]},
     {_GEN_39 | _GEN_110
        ? 8'h0
        : _GEN_40
            ? MOB[4'h3].data[15:8]
            : (&(MOB[4'h3].address[1:0])) ? MOB[4'h3].data[7:0] : 8'h0},
     {(&(MOB[4'h3].address[1:0])) ? MOB[4'h3].data[7:0] : 8'h0},
     {8'h0}};
  wire                  _GEN_117 = MOB[4'h4].address[1:0] == 2'h1;
  wire [3:0][7:0]       _GEN_118 =
    {{8'h0}, {MOB[4'h4].data[7:0]}, {MOB[4'h4].data[15:8]}, {8'h0}};
  wire [3:0][7:0]       _GEN_119 =
    {{_GEN_43 ? MOB[4'h4].data[15:8] : _GEN_117 ? MOB[4'h4].data[7:0] : 8'h0},
     {_GEN_43 ? MOB[4'h4].data[15:8] : _GEN_117 ? MOB[4'h4].data[7:0] : 8'h0},
     {_GEN_117 ? MOB[4'h4].data[7:0] : 8'h0},
     {8'h0}};
  wire [3:0][7:0]       _GEN_120 =
    {{8'h0}, {MOB[4'h4].data[7:0]}, {MOB[4'h4].data[15:8]}, {MOB[4'h4].data[23:16]}};
  wire [3:0][7:0]       _GEN_121 =
    {{_GEN_120[MOB[4'h4].address[1:0]]},
     {_GEN_118[MOB[4'h4].address[1:0]]},
     {_GEN_44 ? MOB[4'h4].data[7:0] : 8'h0},
     {8'h0}};
  wire [3:0][7:0]       _GEN_122 =
    {{MOB[4'h4].data[7:0]},
     {MOB[4'h4].data[15:8]},
     {MOB[4'h4].data[23:16]},
     {MOB[4'h4].data[31:24]}};
  wire [3:0][7:0]       _GEN_123 =
    {{_GEN_122[MOB[4'h4].address[1:0]]},
     {_GEN_43 | _GEN_117
        ? 8'h0
        : _GEN_44
            ? MOB[4'h4].data[15:8]
            : (&(MOB[4'h4].address[1:0])) ? MOB[4'h4].data[7:0] : 8'h0},
     {(&(MOB[4'h4].address[1:0])) ? MOB[4'h4].data[7:0] : 8'h0},
     {8'h0}};
  wire                  _GEN_124 = MOB[4'h5].address[1:0] == 2'h1;
  wire [3:0][7:0]       _GEN_125 =
    {{8'h0}, {MOB[4'h5].data[7:0]}, {MOB[4'h5].data[15:8]}, {8'h0}};
  wire [3:0][7:0]       _GEN_126 =
    {{_GEN_47 ? MOB[4'h5].data[15:8] : _GEN_124 ? MOB[4'h5].data[7:0] : 8'h0},
     {_GEN_47 ? MOB[4'h5].data[15:8] : _GEN_124 ? MOB[4'h5].data[7:0] : 8'h0},
     {_GEN_124 ? MOB[4'h5].data[7:0] : 8'h0},
     {8'h0}};
  wire [3:0][7:0]       _GEN_127 =
    {{8'h0}, {MOB[4'h5].data[7:0]}, {MOB[4'h5].data[15:8]}, {MOB[4'h5].data[23:16]}};
  wire [3:0][7:0]       _GEN_128 =
    {{_GEN_127[MOB[4'h5].address[1:0]]},
     {_GEN_125[MOB[4'h5].address[1:0]]},
     {_GEN_48 ? MOB[4'h5].data[7:0] : 8'h0},
     {8'h0}};
  wire [3:0][7:0]       _GEN_129 =
    {{MOB[4'h5].data[7:0]},
     {MOB[4'h5].data[15:8]},
     {MOB[4'h5].data[23:16]},
     {MOB[4'h5].data[31:24]}};
  wire [3:0][7:0]       _GEN_130 =
    {{_GEN_129[MOB[4'h5].address[1:0]]},
     {_GEN_47 | _GEN_124
        ? 8'h0
        : _GEN_48
            ? MOB[4'h5].data[15:8]
            : (&(MOB[4'h5].address[1:0])) ? MOB[4'h5].data[7:0] : 8'h0},
     {(&(MOB[4'h5].address[1:0])) ? MOB[4'h5].data[7:0] : 8'h0},
     {8'h0}};
  wire                  _GEN_131 = MOB[4'h6].address[1:0] == 2'h1;
  wire [3:0][7:0]       _GEN_132 =
    {{8'h0}, {MOB[4'h6].data[7:0]}, {MOB[4'h6].data[15:8]}, {8'h0}};
  wire [3:0][7:0]       _GEN_133 =
    {{_GEN_51 ? MOB[4'h6].data[15:8] : _GEN_131 ? MOB[4'h6].data[7:0] : 8'h0},
     {_GEN_51 ? MOB[4'h6].data[15:8] : _GEN_131 ? MOB[4'h6].data[7:0] : 8'h0},
     {_GEN_131 ? MOB[4'h6].data[7:0] : 8'h0},
     {8'h0}};
  wire [3:0][7:0]       _GEN_134 =
    {{8'h0}, {MOB[4'h6].data[7:0]}, {MOB[4'h6].data[15:8]}, {MOB[4'h6].data[23:16]}};
  wire [3:0][7:0]       _GEN_135 =
    {{_GEN_134[MOB[4'h6].address[1:0]]},
     {_GEN_132[MOB[4'h6].address[1:0]]},
     {_GEN_52 ? MOB[4'h6].data[7:0] : 8'h0},
     {8'h0}};
  wire [3:0][7:0]       _GEN_136 =
    {{MOB[4'h6].data[7:0]},
     {MOB[4'h6].data[15:8]},
     {MOB[4'h6].data[23:16]},
     {MOB[4'h6].data[31:24]}};
  wire [3:0][7:0]       _GEN_137 =
    {{_GEN_136[MOB[4'h6].address[1:0]]},
     {_GEN_51 | _GEN_131
        ? 8'h0
        : _GEN_52
            ? MOB[4'h6].data[15:8]
            : (&(MOB[4'h6].address[1:0])) ? MOB[4'h6].data[7:0] : 8'h0},
     {(&(MOB[4'h6].address[1:0])) ? MOB[4'h6].data[7:0] : 8'h0},
     {8'h0}};
  wire                  _GEN_138 = MOB[4'h7].address[1:0] == 2'h1;
  wire [3:0][7:0]       _GEN_139 =
    {{8'h0}, {MOB[4'h7].data[7:0]}, {MOB[4'h7].data[15:8]}, {8'h0}};
  wire [3:0][7:0]       _GEN_140 =
    {{_GEN_55 ? MOB[4'h7].data[15:8] : _GEN_138 ? MOB[4'h7].data[7:0] : 8'h0},
     {_GEN_55 ? MOB[4'h7].data[15:8] : _GEN_138 ? MOB[4'h7].data[7:0] : 8'h0},
     {_GEN_138 ? MOB[4'h7].data[7:0] : 8'h0},
     {8'h0}};
  wire [3:0][7:0]       _GEN_141 =
    {{8'h0}, {MOB[4'h7].data[7:0]}, {MOB[4'h7].data[15:8]}, {MOB[4'h7].data[23:16]}};
  wire [3:0][7:0]       _GEN_142 =
    {{_GEN_141[MOB[4'h7].address[1:0]]},
     {_GEN_139[MOB[4'h7].address[1:0]]},
     {_GEN_56 ? MOB[4'h7].data[7:0] : 8'h0},
     {8'h0}};
  wire [3:0][7:0]       _GEN_143 =
    {{MOB[4'h7].data[7:0]},
     {MOB[4'h7].data[15:8]},
     {MOB[4'h7].data[23:16]},
     {MOB[4'h7].data[31:24]}};
  wire [3:0][7:0]       _GEN_144 =
    {{_GEN_143[MOB[4'h7].address[1:0]]},
     {_GEN_55 | _GEN_138
        ? 8'h0
        : _GEN_56
            ? MOB[4'h7].data[15:8]
            : (&(MOB[4'h7].address[1:0])) ? MOB[4'h7].data[7:0] : 8'h0},
     {(&(MOB[4'h7].address[1:0])) ? MOB[4'h7].data[7:0] : 8'h0},
     {8'h0}};
  wire                  _GEN_145 = MOB[4'h8].address[1:0] == 2'h1;
  wire [3:0][7:0]       _GEN_146 =
    {{8'h0}, {MOB[4'h8].data[7:0]}, {MOB[4'h8].data[15:8]}, {8'h0}};
  wire [3:0][7:0]       _GEN_147 =
    {{_GEN_59 ? MOB[4'h8].data[15:8] : _GEN_145 ? MOB[4'h8].data[7:0] : 8'h0},
     {_GEN_59 ? MOB[4'h8].data[15:8] : _GEN_145 ? MOB[4'h8].data[7:0] : 8'h0},
     {_GEN_145 ? MOB[4'h8].data[7:0] : 8'h0},
     {8'h0}};
  wire [3:0][7:0]       _GEN_148 =
    {{8'h0}, {MOB[4'h8].data[7:0]}, {MOB[4'h8].data[15:8]}, {MOB[4'h8].data[23:16]}};
  wire [3:0][7:0]       _GEN_149 =
    {{_GEN_148[MOB[4'h8].address[1:0]]},
     {_GEN_146[MOB[4'h8].address[1:0]]},
     {_GEN_60 ? MOB[4'h8].data[7:0] : 8'h0},
     {8'h0}};
  wire [3:0][7:0]       _GEN_150 =
    {{MOB[4'h8].data[7:0]},
     {MOB[4'h8].data[15:8]},
     {MOB[4'h8].data[23:16]},
     {MOB[4'h8].data[31:24]}};
  wire [3:0][7:0]       _GEN_151 =
    {{_GEN_150[MOB[4'h8].address[1:0]]},
     {_GEN_59 | _GEN_145
        ? 8'h0
        : _GEN_60
            ? MOB[4'h8].data[15:8]
            : (&(MOB[4'h8].address[1:0])) ? MOB[4'h8].data[7:0] : 8'h0},
     {(&(MOB[4'h8].address[1:0])) ? MOB[4'h8].data[7:0] : 8'h0},
     {8'h0}};
  wire                  _GEN_152 = MOB[4'h9].address[1:0] == 2'h1;
  wire [3:0][7:0]       _GEN_153 =
    {{8'h0}, {MOB[4'h9].data[7:0]}, {MOB[4'h9].data[15:8]}, {8'h0}};
  wire [3:0][7:0]       _GEN_154 =
    {{_GEN_63 ? MOB[4'h9].data[15:8] : _GEN_152 ? MOB[4'h9].data[7:0] : 8'h0},
     {_GEN_63 ? MOB[4'h9].data[15:8] : _GEN_152 ? MOB[4'h9].data[7:0] : 8'h0},
     {_GEN_152 ? MOB[4'h9].data[7:0] : 8'h0},
     {8'h0}};
  wire [3:0][7:0]       _GEN_155 =
    {{8'h0}, {MOB[4'h9].data[7:0]}, {MOB[4'h9].data[15:8]}, {MOB[4'h9].data[23:16]}};
  wire [3:0][7:0]       _GEN_156 =
    {{_GEN_155[MOB[4'h9].address[1:0]]},
     {_GEN_153[MOB[4'h9].address[1:0]]},
     {_GEN_64 ? MOB[4'h9].data[7:0] : 8'h0},
     {8'h0}};
  wire [3:0][7:0]       _GEN_157 =
    {{MOB[4'h9].data[7:0]},
     {MOB[4'h9].data[15:8]},
     {MOB[4'h9].data[23:16]},
     {MOB[4'h9].data[31:24]}};
  wire [3:0][7:0]       _GEN_158 =
    {{_GEN_157[MOB[4'h9].address[1:0]]},
     {_GEN_63 | _GEN_152
        ? 8'h0
        : _GEN_64
            ? MOB[4'h9].data[15:8]
            : (&(MOB[4'h9].address[1:0])) ? MOB[4'h9].data[7:0] : 8'h0},
     {(&(MOB[4'h9].address[1:0])) ? MOB[4'h9].data[7:0] : 8'h0},
     {8'h0}};
  wire                  _GEN_159 = MOB[4'hA].address[1:0] == 2'h1;
  wire [3:0][7:0]       _GEN_160 =
    {{8'h0}, {MOB[4'hA].data[7:0]}, {MOB[4'hA].data[15:8]}, {8'h0}};
  wire [3:0][7:0]       _GEN_161 =
    {{_GEN_67 ? MOB[4'hA].data[15:8] : _GEN_159 ? MOB[4'hA].data[7:0] : 8'h0},
     {_GEN_67 ? MOB[4'hA].data[15:8] : _GEN_159 ? MOB[4'hA].data[7:0] : 8'h0},
     {_GEN_159 ? MOB[4'hA].data[7:0] : 8'h0},
     {8'h0}};
  wire [3:0][7:0]       _GEN_162 =
    {{8'h0}, {MOB[4'hA].data[7:0]}, {MOB[4'hA].data[15:8]}, {MOB[4'hA].data[23:16]}};
  wire [3:0][7:0]       _GEN_163 =
    {{_GEN_162[MOB[4'hA].address[1:0]]},
     {_GEN_160[MOB[4'hA].address[1:0]]},
     {_GEN_68 ? MOB[4'hA].data[7:0] : 8'h0},
     {8'h0}};
  wire [3:0][7:0]       _GEN_164 =
    {{MOB[4'hA].data[7:0]},
     {MOB[4'hA].data[15:8]},
     {MOB[4'hA].data[23:16]},
     {MOB[4'hA].data[31:24]}};
  wire [3:0][7:0]       _GEN_165 =
    {{_GEN_164[MOB[4'hA].address[1:0]]},
     {_GEN_67 | _GEN_159
        ? 8'h0
        : _GEN_68
            ? MOB[4'hA].data[15:8]
            : (&(MOB[4'hA].address[1:0])) ? MOB[4'hA].data[7:0] : 8'h0},
     {(&(MOB[4'hA].address[1:0])) ? MOB[4'hA].data[7:0] : 8'h0},
     {8'h0}};
  wire                  _GEN_166 = MOB[4'hB].address[1:0] == 2'h1;
  wire [3:0][7:0]       _GEN_167 =
    {{8'h0}, {MOB[4'hB].data[7:0]}, {MOB[4'hB].data[15:8]}, {8'h0}};
  wire [3:0][7:0]       _GEN_168 =
    {{_GEN_71 ? MOB[4'hB].data[15:8] : _GEN_166 ? MOB[4'hB].data[7:0] : 8'h0},
     {_GEN_71 ? MOB[4'hB].data[15:8] : _GEN_166 ? MOB[4'hB].data[7:0] : 8'h0},
     {_GEN_166 ? MOB[4'hB].data[7:0] : 8'h0},
     {8'h0}};
  wire [3:0][7:0]       _GEN_169 =
    {{8'h0}, {MOB[4'hB].data[7:0]}, {MOB[4'hB].data[15:8]}, {MOB[4'hB].data[23:16]}};
  wire [3:0][7:0]       _GEN_170 =
    {{_GEN_169[MOB[4'hB].address[1:0]]},
     {_GEN_167[MOB[4'hB].address[1:0]]},
     {_GEN_72 ? MOB[4'hB].data[7:0] : 8'h0},
     {8'h0}};
  wire [3:0][7:0]       _GEN_171 =
    {{MOB[4'hB].data[7:0]},
     {MOB[4'hB].data[15:8]},
     {MOB[4'hB].data[23:16]},
     {MOB[4'hB].data[31:24]}};
  wire [3:0][7:0]       _GEN_172 =
    {{_GEN_171[MOB[4'hB].address[1:0]]},
     {_GEN_71 | _GEN_166
        ? 8'h0
        : _GEN_72
            ? MOB[4'hB].data[15:8]
            : (&(MOB[4'hB].address[1:0])) ? MOB[4'hB].data[7:0] : 8'h0},
     {(&(MOB[4'hB].address[1:0])) ? MOB[4'hB].data[7:0] : 8'h0},
     {8'h0}};
  wire                  _GEN_173 = MOB[4'hC].address[1:0] == 2'h1;
  wire [3:0][7:0]       _GEN_174 =
    {{8'h0}, {MOB[4'hC].data[7:0]}, {MOB[4'hC].data[15:8]}, {8'h0}};
  wire [3:0][7:0]       _GEN_175 =
    {{_GEN_75 ? MOB[4'hC].data[15:8] : _GEN_173 ? MOB[4'hC].data[7:0] : 8'h0},
     {_GEN_75 ? MOB[4'hC].data[15:8] : _GEN_173 ? MOB[4'hC].data[7:0] : 8'h0},
     {_GEN_173 ? MOB[4'hC].data[7:0] : 8'h0},
     {8'h0}};
  wire [3:0][7:0]       _GEN_176 =
    {{8'h0}, {MOB[4'hC].data[7:0]}, {MOB[4'hC].data[15:8]}, {MOB[4'hC].data[23:16]}};
  wire [3:0][7:0]       _GEN_177 =
    {{_GEN_176[MOB[4'hC].address[1:0]]},
     {_GEN_174[MOB[4'hC].address[1:0]]},
     {_GEN_76 ? MOB[4'hC].data[7:0] : 8'h0},
     {8'h0}};
  wire [3:0][7:0]       _GEN_178 =
    {{MOB[4'hC].data[7:0]},
     {MOB[4'hC].data[15:8]},
     {MOB[4'hC].data[23:16]},
     {MOB[4'hC].data[31:24]}};
  wire [3:0][7:0]       _GEN_179 =
    {{_GEN_178[MOB[4'hC].address[1:0]]},
     {_GEN_75 | _GEN_173
        ? 8'h0
        : _GEN_76
            ? MOB[4'hC].data[15:8]
            : (&(MOB[4'hC].address[1:0])) ? MOB[4'hC].data[7:0] : 8'h0},
     {(&(MOB[4'hC].address[1:0])) ? MOB[4'hC].data[7:0] : 8'h0},
     {8'h0}};
  wire                  _GEN_180 = MOB[4'hD].address[1:0] == 2'h1;
  wire [3:0][7:0]       _GEN_181 =
    {{8'h0}, {MOB[4'hD].data[7:0]}, {MOB[4'hD].data[15:8]}, {8'h0}};
  wire [3:0][7:0]       _GEN_182 =
    {{_GEN_79 ? MOB[4'hD].data[15:8] : _GEN_180 ? MOB[4'hD].data[7:0] : 8'h0},
     {_GEN_79 ? MOB[4'hD].data[15:8] : _GEN_180 ? MOB[4'hD].data[7:0] : 8'h0},
     {_GEN_180 ? MOB[4'hD].data[7:0] : 8'h0},
     {8'h0}};
  wire [3:0][7:0]       _GEN_183 =
    {{8'h0}, {MOB[4'hD].data[7:0]}, {MOB[4'hD].data[15:8]}, {MOB[4'hD].data[23:16]}};
  wire [3:0][7:0]       _GEN_184 =
    {{_GEN_183[MOB[4'hD].address[1:0]]},
     {_GEN_181[MOB[4'hD].address[1:0]]},
     {_GEN_80 ? MOB[4'hD].data[7:0] : 8'h0},
     {8'h0}};
  wire [3:0][7:0]       _GEN_185 =
    {{MOB[4'hD].data[7:0]},
     {MOB[4'hD].data[15:8]},
     {MOB[4'hD].data[23:16]},
     {MOB[4'hD].data[31:24]}};
  wire [3:0][7:0]       _GEN_186 =
    {{_GEN_185[MOB[4'hD].address[1:0]]},
     {_GEN_79 | _GEN_180
        ? 8'h0
        : _GEN_80
            ? MOB[4'hD].data[15:8]
            : (&(MOB[4'hD].address[1:0])) ? MOB[4'hD].data[7:0] : 8'h0},
     {(&(MOB[4'hD].address[1:0])) ? MOB[4'hD].data[7:0] : 8'h0},
     {8'h0}};
  wire                  _GEN_187 = MOB[4'hE].address[1:0] == 2'h1;
  wire [3:0][7:0]       _GEN_188 =
    {{8'h0}, {MOB[4'hE].data[7:0]}, {MOB[4'hE].data[15:8]}, {8'h0}};
  wire [3:0][7:0]       _GEN_189 =
    {{_GEN_83 ? MOB[4'hE].data[15:8] : _GEN_187 ? MOB[4'hE].data[7:0] : 8'h0},
     {_GEN_83 ? MOB[4'hE].data[15:8] : _GEN_187 ? MOB[4'hE].data[7:0] : 8'h0},
     {_GEN_187 ? MOB[4'hE].data[7:0] : 8'h0},
     {8'h0}};
  wire [3:0][7:0]       _GEN_190 =
    {{8'h0}, {MOB[4'hE].data[7:0]}, {MOB[4'hE].data[15:8]}, {MOB[4'hE].data[23:16]}};
  wire [3:0][7:0]       _GEN_191 =
    {{_GEN_190[MOB[4'hE].address[1:0]]},
     {_GEN_188[MOB[4'hE].address[1:0]]},
     {_GEN_84 ? MOB[4'hE].data[7:0] : 8'h0},
     {8'h0}};
  wire [3:0][7:0]       _GEN_192 =
    {{MOB[4'hE].data[7:0]},
     {MOB[4'hE].data[15:8]},
     {MOB[4'hE].data[23:16]},
     {MOB[4'hE].data[31:24]}};
  wire [3:0][7:0]       _GEN_193 =
    {{_GEN_192[MOB[4'hE].address[1:0]]},
     {_GEN_83 | _GEN_187
        ? 8'h0
        : _GEN_84
            ? MOB[4'hE].data[15:8]
            : (&(MOB[4'hE].address[1:0])) ? MOB[4'hE].data[7:0] : 8'h0},
     {(&(MOB[4'hE].address[1:0])) ? MOB[4'hE].data[7:0] : 8'h0},
     {8'h0}};
  wire                  _GEN_194 = MOB[4'hF].address[1:0] == 2'h1;
  wire [3:0][7:0]       _GEN_195 =
    {{8'h0}, {MOB[4'hF].data[7:0]}, {MOB[4'hF].data[15:8]}, {8'h0}};
  wire [3:0][7:0]       _GEN_196 =
    {{_GEN_87 ? MOB[4'hF].data[15:8] : _GEN_194 ? MOB[4'hF].data[7:0] : 8'h0},
     {_GEN_87 ? MOB[4'hF].data[15:8] : _GEN_194 ? MOB[4'hF].data[7:0] : 8'h0},
     {_GEN_194 ? MOB[4'hF].data[7:0] : 8'h0},
     {8'h0}};
  wire [3:0][7:0]       _GEN_197 =
    {{8'h0}, {MOB[4'hF].data[7:0]}, {MOB[4'hF].data[15:8]}, {MOB[4'hF].data[23:16]}};
  wire [3:0][7:0]       _GEN_198 =
    {{_GEN_197[MOB[4'hF].address[1:0]]},
     {_GEN_195[MOB[4'hF].address[1:0]]},
     {_GEN_88 ? MOB[4'hF].data[7:0] : 8'h0},
     {8'h0}};
  wire [3:0][7:0]       _GEN_199 =
    {{MOB[4'hF].data[7:0]},
     {MOB[4'hF].data[15:8]},
     {MOB[4'hF].data[23:16]},
     {MOB[4'hF].data[31:24]}};
  wire [3:0][7:0]       _GEN_200 =
    {{_GEN_199[MOB[4'hF].address[1:0]]},
     {_GEN_87 | _GEN_194
        ? 8'h0
        : _GEN_88
            ? MOB[4'hF].data[15:8]
            : (&(MOB[4'hF].address[1:0])) ? MOB[4'hF].data[7:0] : 8'h0},
     {(&(MOB[4'hF].address[1:0])) ? MOB[4'hF].data[7:0] : 8'h0},
     {8'h0}};
  assign wr_bytes =
    {{_GEN},
     {_GEN_0},
     {_GEN_1},
     {_GEN_2},
     {_GEN_3},
     {_GEN_4},
     {_GEN_5},
     {_GEN_6},
     {_GEN_7},
     {_GEN_8},
     {_GEN_9},
     {_GEN_10},
     {_GEN_11},
     {_GEN_12},
     {_GEN_13},
     {_GEN_14}};
  wire
    struct packed {logic valid; logic [1:0] memory_type; logic [5:0] ROB_index; logic [1:0] fetch_packet_index; logic [31:0] address; logic [1:0] access_width; logic [6:0] RD; logic [31:0] data; logic data_valid; logic pending; logic completed; logic committed; logic exception; }
    _GEN_201 = MOB[io_backend_memory_response_bits.MOB_index];
  wire                  _GEN_202 =
    MOB[4'h0].valid & age_vector[4'h0] < response_age
    & MOB[4'h0].address == _GEN_201.address & is_store;
  wire                  _GEN_203 =
    MOB[4'h1].valid & age_vector[4'h1] < response_age
    & MOB[4'h1].address == _GEN_201.address & is_store_1;
  wire                  _GEN_204 =
    MOB[4'h2].valid & age_vector[4'h2] < response_age
    & MOB[4'h2].address == _GEN_201.address & is_store_2;
  wire                  _GEN_205 =
    MOB[4'h3].valid & age_vector[4'h3] < response_age
    & MOB[4'h3].address == _GEN_201.address & is_store_3;
  wire                  _GEN_206 =
    MOB[4'h4].valid & age_vector[4'h4] < response_age
    & MOB[4'h4].address == _GEN_201.address & is_store_4;
  wire                  _GEN_207 =
    MOB[4'h5].valid & age_vector[4'h5] < response_age
    & MOB[4'h5].address == _GEN_201.address & is_store_5;
  wire                  _GEN_208 =
    MOB[4'h6].valid & age_vector[4'h6] < response_age
    & MOB[4'h6].address == _GEN_201.address & is_store_6;
  wire                  _GEN_209 =
    MOB[4'h7].valid & age_vector[4'h7] < response_age
    & MOB[4'h7].address == _GEN_201.address & is_store_7;
  wire                  _GEN_210 =
    MOB[4'h8].valid & age_vector[4'h8] < response_age
    & MOB[4'h8].address == _GEN_201.address & is_store_8;
  wire                  _GEN_211 =
    MOB[4'h9].valid & age_vector[4'h9] < response_age
    & MOB[4'h9].address == _GEN_201.address & is_store_9;
  wire                  _GEN_212 =
    MOB[4'hA].valid & age_vector[4'hA] < response_age
    & MOB[4'hA].address == _GEN_201.address & is_store_10;
  wire                  _GEN_213 =
    MOB[4'hB].valid & age_vector[4'hB] < response_age
    & MOB[4'hB].address == _GEN_201.address & is_store_11;
  wire                  _GEN_214 =
    MOB[4'hC].valid & age_vector[4'hC] < response_age
    & MOB[4'hC].address == _GEN_201.address & is_store_12;
  wire                  _GEN_215 =
    MOB[4'hD].valid & age_vector[4'hD] < response_age
    & MOB[4'hD].address == _GEN_201.address & is_store_13;
  wire                  _GEN_216 =
    MOB[4'hE].valid & age_vector[4'hE] < response_age
    & MOB[4'hE].address == _GEN_201.address & is_store_14;
  wire                  _GEN_217 =
    MOB[4'hF].valid & age_vector[4'hF] < response_age
    & MOB[4'hF].address == _GEN_201.address & is_store_15;
  wire [3:0][7:0]       data_out =
    {{_GEN_217 & byte_sels[4'hF][3]
        ? wr_bytes[4'hF][2'h3]
        : _GEN_216 & byte_sels[4'hE][3]
            ? wr_bytes[4'hE][2'h3]
            : _GEN_215 & byte_sels[4'hD][3]
                ? wr_bytes[4'hD][2'h3]
                : _GEN_214 & byte_sels[4'hC][3]
                    ? wr_bytes[4'hC][2'h3]
                    : _GEN_213 & byte_sels[4'hB][3]
                        ? wr_bytes[4'hB][2'h3]
                        : _GEN_212 & byte_sels[4'hA][3]
                            ? wr_bytes[4'hA][2'h3]
                            : _GEN_211 & byte_sels[4'h9][3]
                                ? wr_bytes[4'h9][2'h3]
                                : _GEN_210 & byte_sels[4'h8][3]
                                    ? wr_bytes[4'h8][2'h3]
                                    : _GEN_209 & byte_sels[4'h7][3]
                                        ? wr_bytes[4'h7][2'h3]
                                        : _GEN_208 & byte_sels[4'h6][3]
                                            ? wr_bytes[4'h6][2'h3]
                                            : _GEN_207 & byte_sels[4'h5][3]
                                                ? wr_bytes[4'h5][2'h3]
                                                : _GEN_206 & byte_sels[4'h4][3]
                                                    ? wr_bytes[4'h4][2'h3]
                                                    : _GEN_205 & byte_sels[4'h3][3]
                                                        ? wr_bytes[4'h3][2'h3]
                                                        : _GEN_204 & byte_sels[4'h2][3]
                                                            ? wr_bytes[4'h2][2'h3]
                                                            : _GEN_203
                                                              & byte_sels[4'h1][3]
                                                                ? wr_bytes[4'h1][2'h3]
                                                                : _GEN_202
                                                                  & byte_sels[4'h0][3]
                                                                    ? wr_bytes[4'h0][2'h3]
                                                                    : 8'h0},
     {_GEN_217 & byte_sels[4'hF][2]
        ? wr_bytes[4'hF][2'h2]
        : _GEN_216 & byte_sels[4'hE][2]
            ? wr_bytes[4'hE][2'h2]
            : _GEN_215 & byte_sels[4'hD][2]
                ? wr_bytes[4'hD][2'h2]
                : _GEN_214 & byte_sels[4'hC][2]
                    ? wr_bytes[4'hC][2'h2]
                    : _GEN_213 & byte_sels[4'hB][2]
                        ? wr_bytes[4'hB][2'h2]
                        : _GEN_212 & byte_sels[4'hA][2]
                            ? wr_bytes[4'hA][2'h2]
                            : _GEN_211 & byte_sels[4'h9][2]
                                ? wr_bytes[4'h9][2'h2]
                                : _GEN_210 & byte_sels[4'h8][2]
                                    ? wr_bytes[4'h8][2'h2]
                                    : _GEN_209 & byte_sels[4'h7][2]
                                        ? wr_bytes[4'h7][2'h2]
                                        : _GEN_208 & byte_sels[4'h6][2]
                                            ? wr_bytes[4'h6][2'h2]
                                            : _GEN_207 & byte_sels[4'h5][2]
                                                ? wr_bytes[4'h5][2'h2]
                                                : _GEN_206 & byte_sels[4'h4][2]
                                                    ? wr_bytes[4'h4][2'h2]
                                                    : _GEN_205 & byte_sels[4'h3][2]
                                                        ? wr_bytes[4'h3][2'h2]
                                                        : _GEN_204 & byte_sels[4'h2][2]
                                                            ? wr_bytes[4'h2][2'h2]
                                                            : _GEN_203
                                                              & byte_sels[4'h1][2]
                                                                ? wr_bytes[4'h1][2'h2]
                                                                : _GEN_202
                                                                  & byte_sels[4'h0][2]
                                                                    ? wr_bytes[4'h0][2'h2]
                                                                    : 8'h0},
     {_GEN_217 & byte_sels[4'hF][1]
        ? wr_bytes[4'hF][2'h1]
        : _GEN_216 & byte_sels[4'hE][1]
            ? wr_bytes[4'hE][2'h1]
            : _GEN_215 & byte_sels[4'hD][1]
                ? wr_bytes[4'hD][2'h1]
                : _GEN_214 & byte_sels[4'hC][1]
                    ? wr_bytes[4'hC][2'h1]
                    : _GEN_213 & byte_sels[4'hB][1]
                        ? wr_bytes[4'hB][2'h1]
                        : _GEN_212 & byte_sels[4'hA][1]
                            ? wr_bytes[4'hA][2'h1]
                            : _GEN_211 & byte_sels[4'h9][1]
                                ? wr_bytes[4'h9][2'h1]
                                : _GEN_210 & byte_sels[4'h8][1]
                                    ? wr_bytes[4'h8][2'h1]
                                    : _GEN_209 & byte_sels[4'h7][1]
                                        ? wr_bytes[4'h7][2'h1]
                                        : _GEN_208 & byte_sels[4'h6][1]
                                            ? wr_bytes[4'h6][2'h1]
                                            : _GEN_207 & byte_sels[4'h5][1]
                                                ? wr_bytes[4'h5][2'h1]
                                                : _GEN_206 & byte_sels[4'h4][1]
                                                    ? wr_bytes[4'h4][2'h1]
                                                    : _GEN_205 & byte_sels[4'h3][1]
                                                        ? wr_bytes[4'h3][2'h1]
                                                        : _GEN_204 & byte_sels[4'h2][1]
                                                            ? wr_bytes[4'h2][2'h1]
                                                            : _GEN_203
                                                              & byte_sels[4'h1][1]
                                                                ? wr_bytes[4'h1][2'h1]
                                                                : _GEN_202
                                                                  & byte_sels[4'h0][1]
                                                                    ? wr_bytes[4'h0][2'h1]
                                                                    : 8'h0},
     {_GEN_217 & byte_sels[4'hF][0]
        ? wr_bytes[4'hF][2'h0]
        : _GEN_216 & byte_sels[4'hE][0]
            ? wr_bytes[4'hE][2'h0]
            : _GEN_215 & byte_sels[4'hD][0]
                ? wr_bytes[4'hD][2'h0]
                : _GEN_214 & byte_sels[4'hC][0]
                    ? wr_bytes[4'hC][2'h0]
                    : _GEN_213 & byte_sels[4'hB][0]
                        ? wr_bytes[4'hB][2'h0]
                        : _GEN_212 & byte_sels[4'hA][0]
                            ? wr_bytes[4'hA][2'h0]
                            : _GEN_211 & byte_sels[4'h9][0]
                                ? wr_bytes[4'h9][2'h0]
                                : _GEN_210 & byte_sels[4'h8][0]
                                    ? wr_bytes[4'h8][2'h0]
                                    : _GEN_209 & byte_sels[4'h7][0]
                                        ? wr_bytes[4'h7][2'h0]
                                        : _GEN_208 & byte_sels[4'h6][0]
                                            ? wr_bytes[4'h6][2'h0]
                                            : _GEN_207 & byte_sels[4'h5][0]
                                                ? wr_bytes[4'h5][2'h0]
                                                : _GEN_206 & byte_sels[4'h4][0]
                                                    ? wr_bytes[4'h4][2'h0]
                                                    : _GEN_205 & byte_sels[4'h3][0]
                                                        ? wr_bytes[4'h3][2'h0]
                                                        : _GEN_204 & byte_sels[4'h2][0]
                                                            ? wr_bytes[4'h2][2'h0]
                                                            : _GEN_203
                                                              & byte_sels[4'h1][0]
                                                                ? wr_bytes[4'h1][2'h0]
                                                                : _GEN_202
                                                                  & byte_sels[4'h0][0]
                                                                    ? wr_bytes[4'h0][2'h0]
                                                                    : 8'h0}};
  wire                  _FU_output_load_Q_io_enq_valid_T_14 =
    possible_FU_loads[4'h0] | possible_FU_loads[4'h1] | possible_FU_loads[4'h2]
    | possible_FU_loads[4'h3] | possible_FU_loads[4'h4] | possible_FU_loads[4'h5]
    | possible_FU_loads[4'h6] | possible_FU_loads[4'h7] | possible_FU_loads[4'h8]
    | possible_FU_loads[4'h9] | possible_FU_loads[4'hA] | possible_FU_loads[4'hB]
    | possible_FU_loads[4'hC] | possible_FU_loads[4'hD] | possible_FU_loads[4'hE]
    | possible_FU_loads[4'hF];
  wire [15:0]           _availalbe_MOB_entries_T_1 =
    ~{MOB[4'h0].valid,
      MOB[4'h1].valid,
      MOB[4'h2].valid,
      MOB[4'h3].valid,
      MOB[4'h4].valid,
      MOB[4'h5].valid,
      MOB[4'h6].valid,
      MOB[4'h7].valid,
      MOB[4'h8].valid,
      MOB[4'h9].valid,
      MOB[4'hA].valid,
      MOB[4'hB].valid,
      MOB[4'hC].valid,
      MOB[4'hD].valid,
      MOB[4'hE].valid,
      MOB[4'hF].valid};
  wire [4:0]            availalbe_MOB_entries =
    {1'h0,
     {1'h0,
      {1'h0,
       {1'h0, _availalbe_MOB_entries_T_1[0]} + {1'h0, _availalbe_MOB_entries_T_1[1]}}
        + {1'h0,
           {1'h0, _availalbe_MOB_entries_T_1[2]} + {1'h0, _availalbe_MOB_entries_T_1[3]}}}
       + {1'h0,
          {1'h0,
           {1'h0, _availalbe_MOB_entries_T_1[4]} + {1'h0, _availalbe_MOB_entries_T_1[5]}}
            + {1'h0,
               {1'h0, _availalbe_MOB_entries_T_1[6]}
                 + {1'h0, _availalbe_MOB_entries_T_1[7]}}}}
    + {1'h0,
       {1'h0,
        {1'h0,
         {1'h0, _availalbe_MOB_entries_T_1[8]} + {1'h0, _availalbe_MOB_entries_T_1[9]}}
          + {1'h0,
             {1'h0, _availalbe_MOB_entries_T_1[10]}
               + {1'h0, _availalbe_MOB_entries_T_1[11]}}}
         + {1'h0,
            {1'h0,
             {1'h0, _availalbe_MOB_entries_T_1[12]}
               + {1'h0, _availalbe_MOB_entries_T_1[13]}}
              + {1'h0,
                 {1'h0, _availalbe_MOB_entries_T_1[14]}
                   + {1'h0, _availalbe_MOB_entries_T_1[15]}}}};
  assign _availalbe_MOB_entries_4to2 = availalbe_MOB_entries[4:2];
  wire
    struct packed {logic [6:0] RD; logic [31:0] RD_data; logic RD_valid; logic [31:0] fetch_PC; logic branch_taken; logic [31:0] target_address; logic branch_valid; logic [31:0] address; logic [1:0] memory_type; logic [1:0] access_width; logic is_unsigned; logic [31:0] wr_data; logic [3:0] MOB_index; logic [5:0] ROB_index; logic [3:0] FTQ_index; logic [1:0] fetch_packet_index; logic exception; }
    _GEN_218 =
    '{RD: MOB[possible_FU_load_index].RD,
      RD_data: MOB[possible_FU_load_index].data,
      RD_valid: (1'h1),
      fetch_PC: (32'h0),
      branch_taken: (1'h0),
      target_address: (32'h0),
      branch_valid: (1'h0),
      address: (32'h0),
      memory_type: (2'h0),
      access_width: (2'h0),
      is_unsigned: (1'h0),
      wr_data: (32'h0),
      MOB_index: (4'h0),
      ROB_index: MOB[possible_FU_load_index].ROB_index,
      FTQ_index: (4'h0),
      fetch_packet_index: MOB[possible_FU_load_index].fetch_packet_index,
      exception: MOB[possible_FU_load_index].exception};
  wire
    struct packed {logic [6:0] RD; logic [31:0] RD_data; logic RD_valid; logic [31:0] fetch_PC; logic branch_taken; logic [31:0] target_address; logic branch_valid; logic [31:0] address; logic [1:0] memory_type; logic [1:0] access_width; logic is_unsigned; logic [31:0] wr_data; logic [3:0] MOB_index; logic [5:0] ROB_index; logic [3:0] FTQ_index; logic [1:0] fetch_packet_index; logic exception; }
    _GEN_219 =
    '{RD: (7'h0),
      RD_data: (32'h0),
      RD_valid: (1'h0),
      fetch_PC: (32'h0),
      branch_taken: (1'h0),
      target_address: (32'h0),
      branch_valid: (1'h0),
      address: (32'h0),
      memory_type: (2'h0),
      access_width: (2'h0),
      is_unsigned: (1'h0),
      wr_data: (32'h0),
      MOB_index: (4'h0),
      ROB_index: MOB[possible_FU_store_index].ROB_index,
      FTQ_index: (4'h0),
      fetch_packet_index: MOB[possible_FU_store_index].fetch_packet_index,
      exception: MOB[possible_FU_store_index].exception};
  wire struct packed {logic valid; logic [3:0] bits; } _GEN_220 =
    '{valid: written_vec[2'h3],
      bits: (written_vec[2'h3] ? _io_reserved_pointers_3_bits_T : 4'h0)};
  wire struct packed {logic valid; logic [3:0] bits; } _GEN_221 =
    '{valid: written_vec[2'h2],
      bits: (written_vec[2'h2] ? _io_reserved_pointers_2_bits_T : 4'h0)};
  wire struct packed {logic valid; logic [3:0] bits; } _GEN_222 =
    '{valid: written_vec[2'h1],
      bits: (written_vec[2'h1] ? _io_reserved_pointers_1_bits_T : 4'h0)};
  wire struct packed {logic valid; logic [3:0] bits; } _GEN_223 =
    '{valid: written_vec[2'h0],
      bits: (written_vec[2'h0] ? _io_reserved_pointers_0_bits_T : 4'h0)};
  assign _GEN_14 =
    is_store
      ? {{_GEN_95[MOB[4'h0].access_width]},
         {_GEN_93[MOB[4'h0].access_width]},
         {_GEN_91[MOB[4'h0].access_width]},
         {_GEN_25
            ? (_GEN_27 ? MOB[4'h0].data[7:0] : 8'h0)
            : _GEN_26
                ? (_GEN_27 ? MOB[4'h0].data[7:0] : 8'h0)
                : (&MOB[4'h0].access_width) & _GEN_27 ? MOB[4'h0].data[7:0] : 8'h0}}
      : _GEN_15;
  assign _GEN_13 =
    is_store_1
      ? {{_GEN_102[MOB[4'h1].access_width]},
         {_GEN_100[MOB[4'h1].access_width]},
         {_GEN_98[MOB[4'h1].access_width]},
         {_GEN_29
            ? (_GEN_31 ? MOB[4'h1].data[7:0] : 8'h0)
            : _GEN_30
                ? (_GEN_31 ? MOB[4'h1].data[7:0] : 8'h0)
                : (&MOB[4'h1].access_width) & _GEN_31 ? MOB[4'h1].data[7:0] : 8'h0}}
      : _GEN_15;
  assign _GEN_12 =
    is_store_2
      ? {{_GEN_109[MOB[4'h2].access_width]},
         {_GEN_107[MOB[4'h2].access_width]},
         {_GEN_105[MOB[4'h2].access_width]},
         {_GEN_33
            ? (_GEN_35 ? MOB[4'h2].data[7:0] : 8'h0)
            : _GEN_34
                ? (_GEN_35 ? MOB[4'h2].data[7:0] : 8'h0)
                : (&MOB[4'h2].access_width) & _GEN_35 ? MOB[4'h2].data[7:0] : 8'h0}}
      : _GEN_15;
  assign _GEN_11 =
    is_store_3
      ? {{_GEN_116[MOB[4'h3].access_width]},
         {_GEN_114[MOB[4'h3].access_width]},
         {_GEN_112[MOB[4'h3].access_width]},
         {_GEN_37
            ? (_GEN_39 ? MOB[4'h3].data[7:0] : 8'h0)
            : _GEN_38
                ? (_GEN_39 ? MOB[4'h3].data[7:0] : 8'h0)
                : (&MOB[4'h3].access_width) & _GEN_39 ? MOB[4'h3].data[7:0] : 8'h0}}
      : _GEN_15;
  assign _GEN_10 =
    is_store_4
      ? {{_GEN_123[MOB[4'h4].access_width]},
         {_GEN_121[MOB[4'h4].access_width]},
         {_GEN_119[MOB[4'h4].access_width]},
         {_GEN_41
            ? (_GEN_43 ? MOB[4'h4].data[7:0] : 8'h0)
            : _GEN_42
                ? (_GEN_43 ? MOB[4'h4].data[7:0] : 8'h0)
                : (&MOB[4'h4].access_width) & _GEN_43 ? MOB[4'h4].data[7:0] : 8'h0}}
      : _GEN_15;
  assign _GEN_9 =
    is_store_5
      ? {{_GEN_130[MOB[4'h5].access_width]},
         {_GEN_128[MOB[4'h5].access_width]},
         {_GEN_126[MOB[4'h5].access_width]},
         {_GEN_45
            ? (_GEN_47 ? MOB[4'h5].data[7:0] : 8'h0)
            : _GEN_46
                ? (_GEN_47 ? MOB[4'h5].data[7:0] : 8'h0)
                : (&MOB[4'h5].access_width) & _GEN_47 ? MOB[4'h5].data[7:0] : 8'h0}}
      : _GEN_15;
  assign _GEN_8 =
    is_store_6
      ? {{_GEN_137[MOB[4'h6].access_width]},
         {_GEN_135[MOB[4'h6].access_width]},
         {_GEN_133[MOB[4'h6].access_width]},
         {_GEN_49
            ? (_GEN_51 ? MOB[4'h6].data[7:0] : 8'h0)
            : _GEN_50
                ? (_GEN_51 ? MOB[4'h6].data[7:0] : 8'h0)
                : (&MOB[4'h6].access_width) & _GEN_51 ? MOB[4'h6].data[7:0] : 8'h0}}
      : _GEN_15;
  assign _GEN_7 =
    is_store_7
      ? {{_GEN_144[MOB[4'h7].access_width]},
         {_GEN_142[MOB[4'h7].access_width]},
         {_GEN_140[MOB[4'h7].access_width]},
         {_GEN_53
            ? (_GEN_55 ? MOB[4'h7].data[7:0] : 8'h0)
            : _GEN_54
                ? (_GEN_55 ? MOB[4'h7].data[7:0] : 8'h0)
                : (&MOB[4'h7].access_width) & _GEN_55 ? MOB[4'h7].data[7:0] : 8'h0}}
      : _GEN_15;
  assign _GEN_6 =
    is_store_8
      ? {{_GEN_151[MOB[4'h8].access_width]},
         {_GEN_149[MOB[4'h8].access_width]},
         {_GEN_147[MOB[4'h8].access_width]},
         {_GEN_57
            ? (_GEN_59 ? MOB[4'h8].data[7:0] : 8'h0)
            : _GEN_58
                ? (_GEN_59 ? MOB[4'h8].data[7:0] : 8'h0)
                : (&MOB[4'h8].access_width) & _GEN_59 ? MOB[4'h8].data[7:0] : 8'h0}}
      : _GEN_15;
  assign _GEN_5 =
    is_store_9
      ? {{_GEN_158[MOB[4'h9].access_width]},
         {_GEN_156[MOB[4'h9].access_width]},
         {_GEN_154[MOB[4'h9].access_width]},
         {_GEN_61
            ? (_GEN_63 ? MOB[4'h9].data[7:0] : 8'h0)
            : _GEN_62
                ? (_GEN_63 ? MOB[4'h9].data[7:0] : 8'h0)
                : (&MOB[4'h9].access_width) & _GEN_63 ? MOB[4'h9].data[7:0] : 8'h0}}
      : _GEN_15;
  assign _GEN_4 =
    is_store_10
      ? {{_GEN_165[MOB[4'hA].access_width]},
         {_GEN_163[MOB[4'hA].access_width]},
         {_GEN_161[MOB[4'hA].access_width]},
         {_GEN_65
            ? (_GEN_67 ? MOB[4'hA].data[7:0] : 8'h0)
            : _GEN_66
                ? (_GEN_67 ? MOB[4'hA].data[7:0] : 8'h0)
                : (&MOB[4'hA].access_width) & _GEN_67 ? MOB[4'hA].data[7:0] : 8'h0}}
      : _GEN_15;
  assign _GEN_3 =
    is_store_11
      ? {{_GEN_172[MOB[4'hB].access_width]},
         {_GEN_170[MOB[4'hB].access_width]},
         {_GEN_168[MOB[4'hB].access_width]},
         {_GEN_69
            ? (_GEN_71 ? MOB[4'hB].data[7:0] : 8'h0)
            : _GEN_70
                ? (_GEN_71 ? MOB[4'hB].data[7:0] : 8'h0)
                : (&MOB[4'hB].access_width) & _GEN_71 ? MOB[4'hB].data[7:0] : 8'h0}}
      : _GEN_15;
  assign _GEN_2 =
    is_store_12
      ? {{_GEN_179[MOB[4'hC].access_width]},
         {_GEN_177[MOB[4'hC].access_width]},
         {_GEN_175[MOB[4'hC].access_width]},
         {_GEN_73
            ? (_GEN_75 ? MOB[4'hC].data[7:0] : 8'h0)
            : _GEN_74
                ? (_GEN_75 ? MOB[4'hC].data[7:0] : 8'h0)
                : (&MOB[4'hC].access_width) & _GEN_75 ? MOB[4'hC].data[7:0] : 8'h0}}
      : _GEN_15;
  assign _GEN_1 =
    is_store_13
      ? {{_GEN_186[MOB[4'hD].access_width]},
         {_GEN_184[MOB[4'hD].access_width]},
         {_GEN_182[MOB[4'hD].access_width]},
         {_GEN_77
            ? (_GEN_79 ? MOB[4'hD].data[7:0] : 8'h0)
            : _GEN_78
                ? (_GEN_79 ? MOB[4'hD].data[7:0] : 8'h0)
                : (&MOB[4'hD].access_width) & _GEN_79 ? MOB[4'hD].data[7:0] : 8'h0}}
      : _GEN_15;
  assign _GEN_0 =
    is_store_14
      ? {{_GEN_193[MOB[4'hE].access_width]},
         {_GEN_191[MOB[4'hE].access_width]},
         {_GEN_189[MOB[4'hE].access_width]},
         {_GEN_81
            ? (_GEN_83 ? MOB[4'hE].data[7:0] : 8'h0)
            : _GEN_82
                ? (_GEN_83 ? MOB[4'hE].data[7:0] : 8'h0)
                : (&MOB[4'hE].access_width) & _GEN_83 ? MOB[4'hE].data[7:0] : 8'h0}}
      : _GEN_15;
  assign _GEN =
    is_store_15
      ? {{_GEN_200[MOB[4'hF].access_width]},
         {_GEN_198[MOB[4'hF].access_width]},
         {_GEN_196[MOB[4'hF].access_width]},
         {_GEN_85
            ? (_GEN_87 ? MOB[4'hF].data[7:0] : 8'h0)
            : _GEN_86
                ? (_GEN_87 ? MOB[4'hF].data[7:0] : 8'h0)
                : (&MOB[4'hF].access_width) & _GEN_87 ? MOB[4'hF].data[7:0] : 8'h0}}
      : _GEN_15;
  always @(posedge clock) begin
    if (reset) begin
      front_pointer <= 5'h0;
      back_pointer <= 5'h0;
      MOB <=
        '{'{valid: 1'h0,
            memory_type: 2'h0,
            ROB_index: 6'h0,
            fetch_packet_index: 2'h0,
            address: 32'h0,
            access_width: 2'h0,
            RD: 7'h0,
            data: 32'h0,
            data_valid: 1'h0,
            pending: 1'h0,
            completed: 1'h0,
            committed: 1'h0,
            exception: 1'h0},
          '{valid: 1'h0,
            memory_type: 2'h0,
            ROB_index: 6'h0,
            fetch_packet_index: 2'h0,
            address: 32'h0,
            access_width: 2'h0,
            RD: 7'h0,
            data: 32'h0,
            data_valid: 1'h0,
            pending: 1'h0,
            completed: 1'h0,
            committed: 1'h0,
            exception: 1'h0},
          '{valid: 1'h0,
            memory_type: 2'h0,
            ROB_index: 6'h0,
            fetch_packet_index: 2'h0,
            address: 32'h0,
            access_width: 2'h0,
            RD: 7'h0,
            data: 32'h0,
            data_valid: 1'h0,
            pending: 1'h0,
            completed: 1'h0,
            committed: 1'h0,
            exception: 1'h0},
          '{valid: 1'h0,
            memory_type: 2'h0,
            ROB_index: 6'h0,
            fetch_packet_index: 2'h0,
            address: 32'h0,
            access_width: 2'h0,
            RD: 7'h0,
            data: 32'h0,
            data_valid: 1'h0,
            pending: 1'h0,
            completed: 1'h0,
            committed: 1'h0,
            exception: 1'h0},
          '{valid: 1'h0,
            memory_type: 2'h0,
            ROB_index: 6'h0,
            fetch_packet_index: 2'h0,
            address: 32'h0,
            access_width: 2'h0,
            RD: 7'h0,
            data: 32'h0,
            data_valid: 1'h0,
            pending: 1'h0,
            completed: 1'h0,
            committed: 1'h0,
            exception: 1'h0},
          '{valid: 1'h0,
            memory_type: 2'h0,
            ROB_index: 6'h0,
            fetch_packet_index: 2'h0,
            address: 32'h0,
            access_width: 2'h0,
            RD: 7'h0,
            data: 32'h0,
            data_valid: 1'h0,
            pending: 1'h0,
            completed: 1'h0,
            committed: 1'h0,
            exception: 1'h0},
          '{valid: 1'h0,
            memory_type: 2'h0,
            ROB_index: 6'h0,
            fetch_packet_index: 2'h0,
            address: 32'h0,
            access_width: 2'h0,
            RD: 7'h0,
            data: 32'h0,
            data_valid: 1'h0,
            pending: 1'h0,
            completed: 1'h0,
            committed: 1'h0,
            exception: 1'h0},
          '{valid: 1'h0,
            memory_type: 2'h0,
            ROB_index: 6'h0,
            fetch_packet_index: 2'h0,
            address: 32'h0,
            access_width: 2'h0,
            RD: 7'h0,
            data: 32'h0,
            data_valid: 1'h0,
            pending: 1'h0,
            completed: 1'h0,
            committed: 1'h0,
            exception: 1'h0},
          '{valid: 1'h0,
            memory_type: 2'h0,
            ROB_index: 6'h0,
            fetch_packet_index: 2'h0,
            address: 32'h0,
            access_width: 2'h0,
            RD: 7'h0,
            data: 32'h0,
            data_valid: 1'h0,
            pending: 1'h0,
            completed: 1'h0,
            committed: 1'h0,
            exception: 1'h0},
          '{valid: 1'h0,
            memory_type: 2'h0,
            ROB_index: 6'h0,
            fetch_packet_index: 2'h0,
            address: 32'h0,
            access_width: 2'h0,
            RD: 7'h0,
            data: 32'h0,
            data_valid: 1'h0,
            pending: 1'h0,
            completed: 1'h0,
            committed: 1'h0,
            exception: 1'h0},
          '{valid: 1'h0,
            memory_type: 2'h0,
            ROB_index: 6'h0,
            fetch_packet_index: 2'h0,
            address: 32'h0,
            access_width: 2'h0,
            RD: 7'h0,
            data: 32'h0,
            data_valid: 1'h0,
            pending: 1'h0,
            completed: 1'h0,
            committed: 1'h0,
            exception: 1'h0},
          '{valid: 1'h0,
            memory_type: 2'h0,
            ROB_index: 6'h0,
            fetch_packet_index: 2'h0,
            address: 32'h0,
            access_width: 2'h0,
            RD: 7'h0,
            data: 32'h0,
            data_valid: 1'h0,
            pending: 1'h0,
            completed: 1'h0,
            committed: 1'h0,
            exception: 1'h0},
          '{valid: 1'h0,
            memory_type: 2'h0,
            ROB_index: 6'h0,
            fetch_packet_index: 2'h0,
            address: 32'h0,
            access_width: 2'h0,
            RD: 7'h0,
            data: 32'h0,
            data_valid: 1'h0,
            pending: 1'h0,
            completed: 1'h0,
            committed: 1'h0,
            exception: 1'h0},
          '{valid: 1'h0,
            memory_type: 2'h0,
            ROB_index: 6'h0,
            fetch_packet_index: 2'h0,
            address: 32'h0,
            access_width: 2'h0,
            RD: 7'h0,
            data: 32'h0,
            data_valid: 1'h0,
            pending: 1'h0,
            completed: 1'h0,
            committed: 1'h0,
            exception: 1'h0},
          '{valid: 1'h0,
            memory_type: 2'h0,
            ROB_index: 6'h0,
            fetch_packet_index: 2'h0,
            address: 32'h0,
            access_width: 2'h0,
            RD: 7'h0,
            data: 32'h0,
            data_valid: 1'h0,
            pending: 1'h0,
            completed: 1'h0,
            committed: 1'h0,
            exception: 1'h0},
          '{valid: 1'h0,
            memory_type: 2'h0,
            ROB_index: 6'h0,
            fetch_packet_index: 2'h0,
            address: 32'h0,
            access_width: 2'h0,
            RD: 7'h0,
            data: 32'h0,
            data_valid: 1'h0,
            pending: 1'h0,
            completed: 1'h0,
            committed: 1'h0,
            exception: 1'h0}};
    end
    else begin
      automatic logic        _GEN_224 =
        written_vec[2'h0] & _io_reserved_pointers_0_bits_T == 4'h0;
      automatic logic        _GEN_225 =
        written_vec[2'h0] & _io_reserved_pointers_0_bits_T == 4'h1;
      automatic logic        _GEN_226 =
        written_vec[2'h0] & _io_reserved_pointers_0_bits_T == 4'h2;
      automatic logic        _GEN_227 =
        written_vec[2'h0] & _io_reserved_pointers_0_bits_T == 4'h3;
      automatic logic        _GEN_228 =
        written_vec[2'h0] & _io_reserved_pointers_0_bits_T == 4'h4;
      automatic logic        _GEN_229 =
        written_vec[2'h0] & _io_reserved_pointers_0_bits_T == 4'h5;
      automatic logic        _GEN_230 =
        written_vec[2'h0] & _io_reserved_pointers_0_bits_T == 4'h6;
      automatic logic        _GEN_231 =
        written_vec[2'h0] & _io_reserved_pointers_0_bits_T == 4'h7;
      automatic logic        _GEN_232 =
        written_vec[2'h0] & _io_reserved_pointers_0_bits_T == 4'h8;
      automatic logic        _GEN_233 =
        written_vec[2'h0] & _io_reserved_pointers_0_bits_T == 4'h9;
      automatic logic        _GEN_234 =
        written_vec[2'h0] & _io_reserved_pointers_0_bits_T == 4'hA;
      automatic logic        _GEN_235 =
        written_vec[2'h0] & _io_reserved_pointers_0_bits_T == 4'hB;
      automatic logic        _GEN_236 =
        written_vec[2'h0] & _io_reserved_pointers_0_bits_T == 4'hC;
      automatic logic        _GEN_237 =
        written_vec[2'h0] & _io_reserved_pointers_0_bits_T == 4'hD;
      automatic logic        _GEN_238 =
        written_vec[2'h0] & _io_reserved_pointers_0_bits_T == 4'hE;
      automatic logic        _GEN_239 =
        written_vec[2'h0] & (&_io_reserved_pointers_0_bits_T);
      automatic logic        _GEN_240 = _io_reserved_pointers_1_bits_T == 4'h0;
      automatic logic        _GEN_241;
      automatic logic        _GEN_242 = _io_reserved_pointers_1_bits_T == 4'h1;
      automatic logic        _GEN_243;
      automatic logic        _GEN_244 = _io_reserved_pointers_1_bits_T == 4'h2;
      automatic logic        _GEN_245;
      automatic logic        _GEN_246 = _io_reserved_pointers_1_bits_T == 4'h3;
      automatic logic        _GEN_247;
      automatic logic        _GEN_248 = _io_reserved_pointers_1_bits_T == 4'h4;
      automatic logic        _GEN_249;
      automatic logic        _GEN_250 = _io_reserved_pointers_1_bits_T == 4'h5;
      automatic logic        _GEN_251;
      automatic logic        _GEN_252 = _io_reserved_pointers_1_bits_T == 4'h6;
      automatic logic        _GEN_253;
      automatic logic        _GEN_254 = _io_reserved_pointers_1_bits_T == 4'h7;
      automatic logic        _GEN_255;
      automatic logic        _GEN_256 = _io_reserved_pointers_1_bits_T == 4'h8;
      automatic logic        _GEN_257;
      automatic logic        _GEN_258 = _io_reserved_pointers_1_bits_T == 4'h9;
      automatic logic        _GEN_259;
      automatic logic        _GEN_260 = _io_reserved_pointers_1_bits_T == 4'hA;
      automatic logic        _GEN_261;
      automatic logic        _GEN_262 = _io_reserved_pointers_1_bits_T == 4'hB;
      automatic logic        _GEN_263;
      automatic logic        _GEN_264 = _io_reserved_pointers_1_bits_T == 4'hC;
      automatic logic        _GEN_265;
      automatic logic        _GEN_266 = _io_reserved_pointers_1_bits_T == 4'hD;
      automatic logic        _GEN_267;
      automatic logic        _GEN_268 = _io_reserved_pointers_1_bits_T == 4'hE;
      automatic logic        _GEN_269;
      automatic logic        _GEN_270;
      automatic logic        _GEN_271 = written_vec[2'h1] & _GEN_240;
      automatic logic        _GEN_272 = written_vec[2'h1] & _GEN_242;
      automatic logic        _GEN_273 = written_vec[2'h1] & _GEN_244;
      automatic logic        _GEN_274 = written_vec[2'h1] & _GEN_246;
      automatic logic        _GEN_275 = written_vec[2'h1] & _GEN_248;
      automatic logic        _GEN_276 = written_vec[2'h1] & _GEN_250;
      automatic logic        _GEN_277 = written_vec[2'h1] & _GEN_252;
      automatic logic        _GEN_278 = written_vec[2'h1] & _GEN_254;
      automatic logic        _GEN_279 = written_vec[2'h1] & _GEN_256;
      automatic logic        _GEN_280 = written_vec[2'h1] & _GEN_258;
      automatic logic        _GEN_281 = written_vec[2'h1] & _GEN_260;
      automatic logic        _GEN_282 = written_vec[2'h1] & _GEN_262;
      automatic logic        _GEN_283 = written_vec[2'h1] & _GEN_264;
      automatic logic        _GEN_284 = written_vec[2'h1] & _GEN_266;
      automatic logic        _GEN_285 = written_vec[2'h1] & _GEN_268;
      automatic logic        _GEN_286 =
        written_vec[2'h1] & (&_io_reserved_pointers_1_bits_T);
      automatic logic        _GEN_287 =
        written_vec[2'h2] & _io_reserved_pointers_2_bits_T == 4'h0;
      automatic logic        _GEN_288 =
        written_vec[2'h2] & _io_reserved_pointers_2_bits_T == 4'h1;
      automatic logic        _GEN_289 =
        written_vec[2'h2] & _io_reserved_pointers_2_bits_T == 4'h2;
      automatic logic        _GEN_290 =
        written_vec[2'h2] & _io_reserved_pointers_2_bits_T == 4'h3;
      automatic logic        _GEN_291 =
        written_vec[2'h2] & _io_reserved_pointers_2_bits_T == 4'h4;
      automatic logic        _GEN_292 =
        written_vec[2'h2] & _io_reserved_pointers_2_bits_T == 4'h5;
      automatic logic        _GEN_293 =
        written_vec[2'h2] & _io_reserved_pointers_2_bits_T == 4'h6;
      automatic logic        _GEN_294 =
        written_vec[2'h2] & _io_reserved_pointers_2_bits_T == 4'h7;
      automatic logic        _GEN_295 =
        written_vec[2'h2] & _io_reserved_pointers_2_bits_T == 4'h8;
      automatic logic        _GEN_296 =
        written_vec[2'h2] & _io_reserved_pointers_2_bits_T == 4'h9;
      automatic logic        _GEN_297 =
        written_vec[2'h2] & _io_reserved_pointers_2_bits_T == 4'hA;
      automatic logic        _GEN_298 =
        written_vec[2'h2] & _io_reserved_pointers_2_bits_T == 4'hB;
      automatic logic        _GEN_299 =
        written_vec[2'h2] & _io_reserved_pointers_2_bits_T == 4'hC;
      automatic logic        _GEN_300 =
        written_vec[2'h2] & _io_reserved_pointers_2_bits_T == 4'hD;
      automatic logic        _GEN_301 =
        written_vec[2'h2] & _io_reserved_pointers_2_bits_T == 4'hE;
      automatic logic        _GEN_302 =
        written_vec[2'h2] & (&_io_reserved_pointers_2_bits_T);
      automatic logic        _GEN_303 = _io_reserved_pointers_3_bits_T == 4'h0;
      automatic logic        _GEN_304 = _io_reserved_pointers_3_bits_T == 4'h1;
      automatic logic        _GEN_305 = _io_reserved_pointers_3_bits_T == 4'h2;
      automatic logic        _GEN_306 = _io_reserved_pointers_3_bits_T == 4'h3;
      automatic logic        _GEN_307 = _io_reserved_pointers_3_bits_T == 4'h4;
      automatic logic        _GEN_308 = _io_reserved_pointers_3_bits_T == 4'h5;
      automatic logic        _GEN_309 = _io_reserved_pointers_3_bits_T == 4'h6;
      automatic logic        _GEN_310 = _io_reserved_pointers_3_bits_T == 4'h7;
      automatic logic        _GEN_311 = _io_reserved_pointers_3_bits_T == 4'h8;
      automatic logic        _GEN_312 = _io_reserved_pointers_3_bits_T == 4'h9;
      automatic logic        _GEN_313 = _io_reserved_pointers_3_bits_T == 4'hA;
      automatic logic        _GEN_314 = _io_reserved_pointers_3_bits_T == 4'hB;
      automatic logic        _GEN_315 = _io_reserved_pointers_3_bits_T == 4'hC;
      automatic logic        _GEN_316 = _io_reserved_pointers_3_bits_T == 4'hD;
      automatic logic        _GEN_317 = _io_reserved_pointers_3_bits_T == 4'hE;
      automatic logic        _GEN_318 = written_vec[2'h3] & _GEN_303;
      automatic logic        _GEN_319 = written_vec[2'h3] & _GEN_304;
      automatic logic        _GEN_320 = written_vec[2'h3] & _GEN_305;
      automatic logic        _GEN_321 = written_vec[2'h3] & _GEN_306;
      automatic logic        _GEN_322 = written_vec[2'h3] & _GEN_307;
      automatic logic        _GEN_323 = written_vec[2'h3] & _GEN_308;
      automatic logic        _GEN_324 = written_vec[2'h3] & _GEN_309;
      automatic logic        _GEN_325 = written_vec[2'h3] & _GEN_310;
      automatic logic        _GEN_326 = written_vec[2'h3] & _GEN_311;
      automatic logic        _GEN_327 = written_vec[2'h3] & _GEN_312;
      automatic logic        _GEN_328 = written_vec[2'h3] & _GEN_313;
      automatic logic        _GEN_329 = written_vec[2'h3] & _GEN_314;
      automatic logic        _GEN_330 = written_vec[2'h3] & _GEN_315;
      automatic logic        _GEN_331 = written_vec[2'h3] & _GEN_316;
      automatic logic        _GEN_332 = written_vec[2'h3] & _GEN_317;
      automatic logic        _GEN_333 =
        written_vec[2'h3] & (&_io_reserved_pointers_3_bits_T);
      automatic logic        _GEN_334 =
        io_AGU_output.valid & io_AGU_output.bits.MOB_index == 4'h0;
      automatic logic        _GEN_335;
      automatic logic        _GEN_336 =
        io_AGU_output.valid & io_AGU_output.bits.MOB_index == 4'h1;
      automatic logic        _GEN_337;
      automatic logic        _GEN_338 =
        io_AGU_output.valid & io_AGU_output.bits.MOB_index == 4'h2;
      automatic logic        _GEN_339;
      automatic logic        _GEN_340 =
        io_AGU_output.valid & io_AGU_output.bits.MOB_index == 4'h3;
      automatic logic        _GEN_341;
      automatic logic        _GEN_342 =
        io_AGU_output.valid & io_AGU_output.bits.MOB_index == 4'h4;
      automatic logic        _GEN_343;
      automatic logic        _GEN_344 =
        io_AGU_output.valid & io_AGU_output.bits.MOB_index == 4'h5;
      automatic logic        _GEN_345;
      automatic logic        _GEN_346 =
        io_AGU_output.valid & io_AGU_output.bits.MOB_index == 4'h6;
      automatic logic        _GEN_347;
      automatic logic        _GEN_348 =
        io_AGU_output.valid & io_AGU_output.bits.MOB_index == 4'h7;
      automatic logic        _GEN_349;
      automatic logic        _GEN_350 =
        io_AGU_output.valid & io_AGU_output.bits.MOB_index == 4'h8;
      automatic logic        _GEN_351;
      automatic logic        _GEN_352 =
        io_AGU_output.valid & io_AGU_output.bits.MOB_index == 4'h9;
      automatic logic        _GEN_353;
      automatic logic        _GEN_354 =
        io_AGU_output.valid & io_AGU_output.bits.MOB_index == 4'hA;
      automatic logic        _GEN_355;
      automatic logic        _GEN_356 =
        io_AGU_output.valid & io_AGU_output.bits.MOB_index == 4'hB;
      automatic logic        _GEN_357;
      automatic logic        _GEN_358 =
        io_AGU_output.valid & io_AGU_output.bits.MOB_index == 4'hC;
      automatic logic        _GEN_359;
      automatic logic        _GEN_360 =
        io_AGU_output.valid & io_AGU_output.bits.MOB_index == 4'hD;
      automatic logic        _GEN_361;
      automatic logic        _GEN_362 =
        io_AGU_output.valid & io_AGU_output.bits.MOB_index == 4'hE;
      automatic logic        _GEN_363;
      automatic logic        _GEN_364 =
        io_AGU_output.valid & (&io_AGU_output.bits.MOB_index);
      automatic logic        _GEN_365;
      automatic logic        incoming_is_load = io_AGU_output.bits.memory_type == 2'h1;
      automatic logic        incoming_is_store = io_AGU_output.bits.memory_type == 2'h2;
      automatic logic [3:0]  _GEN_366 = age_vector[io_AGU_output.bits.MOB_index];
      automatic logic        _GEN_367;
      automatic logic        _GEN_368;
      automatic logic        _GEN_369;
      automatic logic        _GEN_370;
      automatic logic        _GEN_371;
      automatic logic [1:0]  _GEN_372;
      automatic logic [1:0]  _GEN_373;
      automatic logic [1:0]  _GEN_374;
      automatic logic        _GEN_375;
      automatic logic        _GEN_376;
      automatic logic [1:0]  _GEN_377;
      automatic logic [1:0]  _GEN_378;
      automatic logic        _GEN_379;
      automatic logic        _GEN_380;
      automatic logic [1:0]  _GEN_381;
      automatic logic [2:0]  _GEN_382;
      automatic logic [2:0]  _GEN_383;
      automatic logic        _GEN_384;
      automatic logic        _GEN_385;
      automatic logic [1:0]  _GEN_386;
      automatic logic [1:0]  _GEN_387;
      automatic logic [2:0]  _GEN_388;
      automatic logic        _GEN_389;
      automatic logic        _GEN_390;
      automatic logic [1:0]  _GEN_391;
      automatic logic [1:0]  _GEN_392;
      automatic logic [2:0]  _GEN_393;
      automatic logic [2:0]  _GEN_394;
      automatic logic [2:0]  _GEN_395;
      automatic logic        _GEN_396;
      automatic logic        _GEN_397;
      automatic logic [1:0]  _GEN_398;
      automatic logic [2:0]  _GEN_399;
      automatic logic [2:0]  _GEN_400;
      automatic logic        _GEN_401;
      automatic logic        _GEN_402;
      automatic logic [1:0]  _GEN_403;
      automatic logic [1:0]  _GEN_404;
      automatic logic [3:0]  _GEN_405;
      automatic logic        _GEN_406;
      automatic logic        _GEN_407;
      automatic logic [1:0]  _GEN_408;
      automatic logic [1:0]  _GEN_409;
      automatic logic [2:0]  _GEN_410;
      automatic logic        _GEN_411;
      automatic logic        _GEN_412;
      automatic logic [1:0]  _GEN_413;
      automatic logic [2:0]  _GEN_414;
      automatic logic [3:0]  _GEN_415;
      automatic logic        _GEN_416;
      automatic logic        _GEN_417;
      automatic logic [1:0]  _GEN_418;
      automatic logic [1:0]  _GEN_419;
      automatic logic [2:0]  _GEN_420;
      automatic logic        _GEN_421;
      automatic logic        _GEN_422;
      automatic logic [1:0]  _GEN_423;
      automatic logic [1:0]  _GEN_424;
      automatic logic [3:0]  _GEN_425;
      automatic logic        _GEN_426;
      automatic logic        _GEN_427;
      automatic logic [1:0]  _GEN_428;
      automatic logic [2:0]  _GEN_429;
      automatic logic        _GEN_430;
      automatic logic        _GEN_431;
      automatic logic [1:0]  _GEN_432;
      automatic logic [3:0]  _GEN_433;
      automatic logic        _GEN_434;
      automatic logic        _GEN_435;
      automatic logic        _GEN_436 = front_index == 4'h0;
      automatic logic        _GEN_437 = front_index == 4'h1;
      automatic logic        _GEN_438 = front_index == 4'h2;
      automatic logic        _GEN_439 = front_index == 4'h3;
      automatic logic        _GEN_440 = front_index == 4'h4;
      automatic logic        _GEN_441 = front_index == 4'h5;
      automatic logic        _GEN_442 = front_index == 4'h6;
      automatic logic        _GEN_443 = front_index == 4'h7;
      automatic logic        _GEN_444 = front_index == 4'h8;
      automatic logic        _GEN_445 = front_index == 4'h9;
      automatic logic        _GEN_446 = front_index == 4'hA;
      automatic logic        _GEN_447 = front_index == 4'hB;
      automatic logic        _GEN_448 = front_index == 4'hC;
      automatic logic        _GEN_449 = front_index == 4'hD;
      automatic logic        _GEN_450 = front_index == 4'hE;
      automatic logic        _GEN_451;
      automatic logic        _GEN_452 = io_commit.valid & _FU_output_load_Q_io_flush_T;
      automatic logic        _GEN_453;
      automatic logic        _GEN_454;
      automatic logic        _GEN_455;
      automatic logic        _GEN_456;
      automatic logic        _GEN_457;
      automatic logic        _GEN_458;
      automatic logic        _GEN_459;
      automatic logic        _GEN_460;
      automatic logic        _GEN_461;
      automatic logic        _GEN_462;
      automatic logic        _GEN_463;
      automatic logic        _GEN_464;
      automatic logic        _GEN_465;
      automatic logic        _GEN_466;
      automatic logic        _GEN_467;
      automatic logic        _GEN_468;
      automatic logic        _GEN_469;
      automatic logic        _GEN_470;
      automatic logic        _GEN_471;
      automatic logic        _GEN_472;
      automatic logic        _GEN_473;
      automatic logic        _GEN_474;
      automatic logic        _GEN_475;
      automatic logic        _GEN_476;
      automatic logic        _GEN_477;
      automatic logic        _GEN_478;
      automatic logic        _GEN_479;
      automatic logic        _GEN_480;
      automatic logic        _GEN_481;
      automatic logic        _GEN_482;
      automatic logic        _GEN_483;
      automatic logic        _GEN_484;
      automatic logic        _GEN_485 =
        _FU_output_store_Q_io_enq_ready & _FU_output_store_Q_io_enq_valid_T_14
        & ~_GEN_452;
      automatic logic        _GEN_486 = _GEN_485 & possible_FU_store_index == 4'h0;
      automatic logic        _GEN_487 = _GEN_485 & possible_FU_store_index == 4'h1;
      automatic logic        _GEN_488 = _GEN_485 & possible_FU_store_index == 4'h2;
      automatic logic        _GEN_489 = _GEN_485 & possible_FU_store_index == 4'h3;
      automatic logic        _GEN_490 = _GEN_485 & possible_FU_store_index == 4'h4;
      automatic logic        _GEN_491 = _GEN_485 & possible_FU_store_index == 4'h5;
      automatic logic        _GEN_492 = _GEN_485 & possible_FU_store_index == 4'h6;
      automatic logic        _GEN_493 = _GEN_485 & possible_FU_store_index == 4'h7;
      automatic logic        _GEN_494 = _GEN_485 & possible_FU_store_index == 4'h8;
      automatic logic        _GEN_495 = _GEN_485 & possible_FU_store_index == 4'h9;
      automatic logic        _GEN_496 = _GEN_485 & possible_FU_store_index == 4'hA;
      automatic logic        _GEN_497 = _GEN_485 & possible_FU_store_index == 4'hB;
      automatic logic        _GEN_498 = _GEN_485 & possible_FU_store_index == 4'hC;
      automatic logic        _GEN_499 = _GEN_485 & possible_FU_store_index == 4'hD;
      automatic logic        _GEN_500 = _GEN_485 & possible_FU_store_index == 4'hE;
      automatic logic        _GEN_501 = _GEN_485 & (&possible_FU_store_index);
      automatic logic        _GEN_502 =
        io_backend_memory_response_valid & _GEN_201.memory_type == 2'h1;
      automatic logic        _GEN_503 =
        _GEN_502 & io_backend_memory_response_bits.MOB_index == 4'h0;
      automatic logic        _GEN_504 =
        _GEN_502 & io_backend_memory_response_bits.MOB_index == 4'h1;
      automatic logic        _GEN_505 =
        _GEN_502 & io_backend_memory_response_bits.MOB_index == 4'h2;
      automatic logic        _GEN_506 =
        _GEN_502 & io_backend_memory_response_bits.MOB_index == 4'h3;
      automatic logic        _GEN_507 =
        _GEN_502 & io_backend_memory_response_bits.MOB_index == 4'h4;
      automatic logic        _GEN_508 =
        _GEN_502 & io_backend_memory_response_bits.MOB_index == 4'h5;
      automatic logic        _GEN_509 =
        _GEN_502 & io_backend_memory_response_bits.MOB_index == 4'h6;
      automatic logic        _GEN_510 =
        _GEN_502 & io_backend_memory_response_bits.MOB_index == 4'h7;
      automatic logic        _GEN_511 =
        _GEN_502 & io_backend_memory_response_bits.MOB_index == 4'h8;
      automatic logic        _GEN_512 =
        _GEN_502 & io_backend_memory_response_bits.MOB_index == 4'h9;
      automatic logic        _GEN_513 =
        _GEN_502 & io_backend_memory_response_bits.MOB_index == 4'hA;
      automatic logic        _GEN_514 =
        _GEN_502 & io_backend_memory_response_bits.MOB_index == 4'hB;
      automatic logic        _GEN_515 =
        _GEN_502 & io_backend_memory_response_bits.MOB_index == 4'hC;
      automatic logic        _GEN_516 =
        _GEN_502 & io_backend_memory_response_bits.MOB_index == 4'hD;
      automatic logic        _GEN_517 =
        _GEN_502 & io_backend_memory_response_bits.MOB_index == 4'hE;
      automatic logic        _GEN_518 =
        _GEN_502 & (&io_backend_memory_response_bits.MOB_index);
      automatic logic [31:0] _MOB_data_T = /*cast(bit[31:0])*/data_out;
      automatic logic        _GEN_519 =
        _FU_output_load_Q_io_enq_ready & _FU_output_load_Q_io_enq_valid_T_14 & ~_GEN_452;
      _GEN_241 =
        written_vec[2'h1]
          ? _GEN_240 | _GEN_224 | MOB[4'h0].valid
          : _GEN_224 | MOB[4'h0].valid;
      _GEN_243 =
        written_vec[2'h1]
          ? _GEN_242 | _GEN_225 | MOB[4'h1].valid
          : _GEN_225 | MOB[4'h1].valid;
      _GEN_245 =
        written_vec[2'h1]
          ? _GEN_244 | _GEN_226 | MOB[4'h2].valid
          : _GEN_226 | MOB[4'h2].valid;
      _GEN_247 =
        written_vec[2'h1]
          ? _GEN_246 | _GEN_227 | MOB[4'h3].valid
          : _GEN_227 | MOB[4'h3].valid;
      _GEN_249 =
        written_vec[2'h1]
          ? _GEN_248 | _GEN_228 | MOB[4'h4].valid
          : _GEN_228 | MOB[4'h4].valid;
      _GEN_251 =
        written_vec[2'h1]
          ? _GEN_250 | _GEN_229 | MOB[4'h5].valid
          : _GEN_229 | MOB[4'h5].valid;
      _GEN_253 =
        written_vec[2'h1]
          ? _GEN_252 | _GEN_230 | MOB[4'h6].valid
          : _GEN_230 | MOB[4'h6].valid;
      _GEN_255 =
        written_vec[2'h1]
          ? _GEN_254 | _GEN_231 | MOB[4'h7].valid
          : _GEN_231 | MOB[4'h7].valid;
      _GEN_257 =
        written_vec[2'h1]
          ? _GEN_256 | _GEN_232 | MOB[4'h8].valid
          : _GEN_232 | MOB[4'h8].valid;
      _GEN_259 =
        written_vec[2'h1]
          ? _GEN_258 | _GEN_233 | MOB[4'h9].valid
          : _GEN_233 | MOB[4'h9].valid;
      _GEN_261 =
        written_vec[2'h1]
          ? _GEN_260 | _GEN_234 | MOB[4'hA].valid
          : _GEN_234 | MOB[4'hA].valid;
      _GEN_263 =
        written_vec[2'h1]
          ? _GEN_262 | _GEN_235 | MOB[4'hB].valid
          : _GEN_235 | MOB[4'hB].valid;
      _GEN_265 =
        written_vec[2'h1]
          ? _GEN_264 | _GEN_236 | MOB[4'hC].valid
          : _GEN_236 | MOB[4'hC].valid;
      _GEN_267 =
        written_vec[2'h1]
          ? _GEN_266 | _GEN_237 | MOB[4'hD].valid
          : _GEN_237 | MOB[4'hD].valid;
      _GEN_269 =
        written_vec[2'h1]
          ? _GEN_268 | _GEN_238 | MOB[4'hE].valid
          : _GEN_238 | MOB[4'hE].valid;
      _GEN_270 =
        written_vec[2'h1]
          ? (&_io_reserved_pointers_1_bits_T) | _GEN_239 | MOB[4'hF].valid
          : _GEN_239 | MOB[4'hF].valid;
      _GEN_335 = _GEN_334 | MOB[4'h0].pending;
      _GEN_337 = _GEN_336 | MOB[4'h1].pending;
      _GEN_339 = _GEN_338 | MOB[4'h2].pending;
      _GEN_341 = _GEN_340 | MOB[4'h3].pending;
      _GEN_343 = _GEN_342 | MOB[4'h4].pending;
      _GEN_345 = _GEN_344 | MOB[4'h5].pending;
      _GEN_347 = _GEN_346 | MOB[4'h6].pending;
      _GEN_349 = _GEN_348 | MOB[4'h7].pending;
      _GEN_351 = _GEN_350 | MOB[4'h8].pending;
      _GEN_353 = _GEN_352 | MOB[4'h9].pending;
      _GEN_355 = _GEN_354 | MOB[4'hA].pending;
      _GEN_357 = _GEN_356 | MOB[4'hB].pending;
      _GEN_359 = _GEN_358 | MOB[4'hC].pending;
      _GEN_361 = _GEN_360 | MOB[4'hD].pending;
      _GEN_363 = _GEN_362 | MOB[4'hE].pending;
      _GEN_365 = _GEN_364 | MOB[4'hF].pending;
      _GEN_367 =
        io_AGU_output.valid & age_vector[4'h0] < _GEN_366
        & io_AGU_output.bits.address == (MOB[4'h0].address & 32'hFFFFFFF0)
        & MOB[4'h0].valid;
      _GEN_368 =
        incoming_is_load & is_load & MOB[4'h0].completed | incoming_is_store & is_load
        & MOB[4'h0].completed;
      _GEN_369 = _GEN_367 & ~_GEN_368 & incoming_is_store & is_store & MOB[4'h0].pending;
      _GEN_370 =
        io_AGU_output.valid & age_vector[4'h1] < _GEN_366
        & io_AGU_output.bits.address == (MOB[4'h1].address & 32'hFFFFFFF0)
        & MOB[4'h1].valid & ~_GEN_369;
      _GEN_371 =
        incoming_is_load & is_load_1 & MOB[4'h1].completed | incoming_is_store & is_load_1
        & MOB[4'h1].completed;
      _GEN_372 = {1'h0, _GEN_369};
      _GEN_373 =
        {1'h0, _GEN_370 & ~_GEN_371 & incoming_is_store & is_store_1 & MOB[4'h1].pending};
      _GEN_374 = _GEN_372 + _GEN_373;
      _GEN_375 =
        io_AGU_output.valid & age_vector[4'h2] < _GEN_366
        & io_AGU_output.bits.address == (MOB[4'h2].address & 32'hFFFFFFF0)
        & MOB[4'h2].valid & _GEN_374 == 2'h0;
      _GEN_376 =
        incoming_is_load & is_load_2 & MOB[4'h2].completed | incoming_is_store & is_load_2
        & MOB[4'h2].completed;
      _GEN_377 =
        {1'h0, _GEN_375 & ~_GEN_376 & incoming_is_store & is_store_2 & MOB[4'h2].pending};
      _GEN_378 = _GEN_372 + _GEN_373 + _GEN_377;
      _GEN_379 =
        io_AGU_output.valid & age_vector[4'h3] < _GEN_366
        & io_AGU_output.bits.address == (MOB[4'h3].address & 32'hFFFFFFF0)
        & MOB[4'h3].valid & _GEN_378 == 2'h0;
      _GEN_380 =
        incoming_is_load & is_load_3 & MOB[4'h3].completed | incoming_is_store & is_load_3
        & MOB[4'h3].completed;
      _GEN_381 =
        {1'h0, _GEN_379 & ~_GEN_380 & incoming_is_store & is_store_3 & MOB[4'h3].pending};
      _GEN_382 = {1'h0, _GEN_374};
      _GEN_383 = _GEN_382 + {1'h0, _GEN_377 + _GEN_381};
      _GEN_384 =
        io_AGU_output.valid & age_vector[4'h4] < _GEN_366
        & io_AGU_output.bits.address == (MOB[4'h4].address & 32'hFFFFFFF0)
        & MOB[4'h4].valid & _GEN_383 == 3'h0;
      _GEN_385 =
        incoming_is_load & is_load_4 & MOB[4'h4].completed | incoming_is_store & is_load_4
        & MOB[4'h4].completed;
      _GEN_386 =
        {1'h0, _GEN_384 & ~_GEN_385 & incoming_is_store & is_store_4 & MOB[4'h4].pending};
      _GEN_387 = _GEN_381 + _GEN_386;
      _GEN_388 = _GEN_382 + {1'h0, _GEN_377 + _GEN_387};
      _GEN_389 =
        io_AGU_output.valid & age_vector[4'h5] < _GEN_366
        & io_AGU_output.bits.address == (MOB[4'h5].address & 32'hFFFFFFF0)
        & MOB[4'h5].valid & _GEN_388 == 3'h0;
      _GEN_390 =
        incoming_is_load & is_load_5 & MOB[4'h5].completed | incoming_is_store & is_load_5
        & MOB[4'h5].completed;
      _GEN_391 =
        {1'h0, _GEN_389 & ~_GEN_390 & incoming_is_store & is_store_5 & MOB[4'h5].pending};
      _GEN_392 = _GEN_386 + _GEN_391;
      _GEN_393 = {1'h0, _GEN_392};
      _GEN_394 = {1'h0, _GEN_378};
      _GEN_395 = _GEN_394 + {1'h0, _GEN_381 + _GEN_392};
      _GEN_396 =
        io_AGU_output.valid & age_vector[4'h6] < _GEN_366
        & io_AGU_output.bits.address == (MOB[4'h6].address & 32'hFFFFFFF0)
        & MOB[4'h6].valid & _GEN_395 == 3'h0;
      _GEN_397 =
        incoming_is_load & is_load_6 & MOB[4'h6].completed | incoming_is_store & is_load_6
        & MOB[4'h6].completed;
      _GEN_398 =
        {1'h0, _GEN_396 & ~_GEN_397 & incoming_is_store & is_store_6 & MOB[4'h6].pending};
      _GEN_399 = {1'h0, _GEN_391 + _GEN_398};
      _GEN_400 = _GEN_394 + {1'h0, _GEN_387} + _GEN_399;
      _GEN_401 =
        io_AGU_output.valid & age_vector[4'h7] < _GEN_366
        & io_AGU_output.bits.address == (MOB[4'h7].address & 32'hFFFFFFF0)
        & MOB[4'h7].valid & _GEN_400 == 3'h0;
      _GEN_402 =
        incoming_is_load & is_load_7 & MOB[4'h7].completed | incoming_is_store & is_load_7
        & MOB[4'h7].completed;
      _GEN_403 =
        {1'h0, _GEN_401 & ~_GEN_402 & incoming_is_store & is_store_7 & MOB[4'h7].pending};
      _GEN_404 = _GEN_398 + _GEN_403;
      _GEN_405 = {1'h0, _GEN_383};
      _GEN_406 =
        io_AGU_output.valid & age_vector[4'h8] < _GEN_366
        & io_AGU_output.bits.address == (MOB[4'h8].address & 32'hFFFFFFF0)
        & MOB[4'h8].valid & _GEN_405 + {1'h0, _GEN_393 + {1'h0, _GEN_404}} == 4'h0;
      _GEN_407 =
        incoming_is_load & is_load_8 & MOB[4'h8].completed | incoming_is_store & is_load_8
        & MOB[4'h8].completed;
      _GEN_408 =
        {1'h0, _GEN_406 & ~_GEN_407 & incoming_is_store & is_store_8 & MOB[4'h8].pending};
      _GEN_409 = _GEN_403 + _GEN_408;
      _GEN_410 = {1'h0, _GEN_398 + _GEN_409};
      _GEN_411 =
        io_AGU_output.valid & age_vector[4'h9] < _GEN_366
        & io_AGU_output.bits.address == (MOB[4'h9].address & 32'hFFFFFFF0)
        & MOB[4'h9].valid & _GEN_405 + {1'h0, _GEN_393 + _GEN_410} == 4'h0;
      _GEN_412 =
        incoming_is_load & is_load_9 & MOB[4'h9].completed | incoming_is_store & is_load_9
        & MOB[4'h9].completed;
      _GEN_413 =
        {1'h0, _GEN_411 & ~_GEN_412 & incoming_is_store & is_store_9 & MOB[4'h9].pending};
      _GEN_414 = {1'h0, _GEN_403 + _GEN_408 + _GEN_413};
      _GEN_415 = {1'h0, _GEN_388};
      _GEN_416 =
        io_AGU_output.valid & age_vector[4'hA] < _GEN_366
        & io_AGU_output.bits.address == (MOB[4'hA].address & 32'hFFFFFFF0)
        & MOB[4'hA].valid & _GEN_415 + {1'h0, _GEN_399 + _GEN_414} == 4'h0;
      _GEN_417 =
        incoming_is_load & is_load_10 & MOB[4'hA].completed | incoming_is_store
        & is_load_10 & MOB[4'hA].completed;
      _GEN_418 =
        {1'h0,
         _GEN_416 & ~_GEN_417 & incoming_is_store & is_store_10 & MOB[4'hA].pending};
      _GEN_419 = _GEN_413 + _GEN_418;
      _GEN_420 = {1'h0, _GEN_419};
      _GEN_421 =
        io_AGU_output.valid & age_vector[4'hB] < _GEN_366
        & io_AGU_output.bits.address == (MOB[4'hB].address & 32'hFFFFFFF0)
        & MOB[4'hB].valid & _GEN_415
        + {1'h0, {1'h0, _GEN_391 + _GEN_404} + {1'h0, _GEN_408 + _GEN_419}} == 4'h0;
      _GEN_422 =
        incoming_is_load & is_load_11 & MOB[4'hB].completed | incoming_is_store
        & is_load_11 & MOB[4'hB].completed;
      _GEN_423 =
        {1'h0,
         _GEN_421 & ~_GEN_422 & incoming_is_store & is_store_11 & MOB[4'hB].pending};
      _GEN_424 = _GEN_418 + _GEN_423;
      _GEN_425 = {1'h0, _GEN_395};
      _GEN_426 =
        io_AGU_output.valid & age_vector[4'hC] < _GEN_366
        & io_AGU_output.bits.address == (MOB[4'hC].address & 32'hFFFFFFF0)
        & MOB[4'hC].valid & _GEN_425
        + {1'h0, _GEN_410 + {1'h0, _GEN_413 + _GEN_424}} == 4'h0;
      _GEN_427 =
        incoming_is_load & is_load_12 & MOB[4'hC].completed | incoming_is_store
        & is_load_12 & MOB[4'hC].completed;
      _GEN_428 =
        {1'h0,
         _GEN_426 & ~_GEN_427 & incoming_is_store & is_store_12 & MOB[4'hC].pending};
      _GEN_429 = {1'h0, _GEN_423 + _GEN_428};
      _GEN_430 =
        io_AGU_output.valid & age_vector[4'hD] < _GEN_366
        & io_AGU_output.bits.address == (MOB[4'hD].address & 32'hFFFFFFF0)
        & MOB[4'hD].valid & _GEN_425 + {1'h0, _GEN_410 + _GEN_420 + _GEN_429} == 4'h0;
      _GEN_431 =
        incoming_is_load & is_load_13 & MOB[4'hD].completed | incoming_is_store
        & is_load_13 & MOB[4'hD].completed;
      _GEN_432 =
        {1'h0,
         _GEN_430 & ~_GEN_431 & incoming_is_store & is_store_13 & MOB[4'hD].pending};
      _GEN_433 = {1'h0, _GEN_400};
      _GEN_434 =
        io_AGU_output.valid & age_vector[4'hE] < _GEN_366
        & io_AGU_output.bits.address == (MOB[4'hE].address & 32'hFFFFFFF0)
        & MOB[4'hE].valid & _GEN_433
        + {1'h0, _GEN_414 + {1'h0, _GEN_424} + {1'h0, _GEN_428 + _GEN_432}} == 4'h0;
      _GEN_435 =
        incoming_is_load & is_load_14 & MOB[4'hE].completed | incoming_is_store
        & is_load_14 & MOB[4'hE].completed;
      _GEN_451 =
        MOB[front_index].valid & ~MOB[front_index].pending & MOB[front_index].completed
        & MOB[front_index].committed;
      _GEN_453 = _GEN_452 | _GEN_451 & _GEN_436;
      _GEN_454 = ~_GEN_453 & MOB[4'h0].completed;
      _GEN_455 = _GEN_452 | _GEN_451 & _GEN_437;
      _GEN_456 = ~_GEN_455 & MOB[4'h1].completed;
      _GEN_457 = _GEN_452 | _GEN_451 & _GEN_438;
      _GEN_458 = ~_GEN_457 & MOB[4'h2].completed;
      _GEN_459 = _GEN_452 | _GEN_451 & _GEN_439;
      _GEN_460 = ~_GEN_459 & MOB[4'h3].completed;
      _GEN_461 = _GEN_452 | _GEN_451 & _GEN_440;
      _GEN_462 = ~_GEN_461 & MOB[4'h4].completed;
      _GEN_463 = _GEN_452 | _GEN_451 & _GEN_441;
      _GEN_464 = ~_GEN_463 & MOB[4'h5].completed;
      _GEN_465 = _GEN_452 | _GEN_451 & _GEN_442;
      _GEN_466 = ~_GEN_465 & MOB[4'h6].completed;
      _GEN_467 = _GEN_452 | _GEN_451 & _GEN_443;
      _GEN_468 = ~_GEN_467 & MOB[4'h7].completed;
      _GEN_469 = _GEN_452 | _GEN_451 & _GEN_444;
      _GEN_470 = ~_GEN_469 & MOB[4'h8].completed;
      _GEN_471 = _GEN_452 | _GEN_451 & _GEN_445;
      _GEN_472 = ~_GEN_471 & MOB[4'h9].completed;
      _GEN_473 = _GEN_452 | _GEN_451 & _GEN_446;
      _GEN_474 = ~_GEN_473 & MOB[4'hA].completed;
      _GEN_475 = _GEN_452 | _GEN_451 & _GEN_447;
      _GEN_476 = ~_GEN_475 & MOB[4'hB].completed;
      _GEN_477 = _GEN_452 | _GEN_451 & _GEN_448;
      _GEN_478 = ~_GEN_477 & MOB[4'hC].completed;
      _GEN_479 = _GEN_452 | _GEN_451 & _GEN_449;
      _GEN_480 = ~_GEN_479 & MOB[4'hD].completed;
      _GEN_481 = _GEN_452 | _GEN_451 & _GEN_450;
      _GEN_482 = ~_GEN_481 & MOB[4'hE].completed;
      _GEN_483 = _GEN_452 | _GEN_451 & (&front_index);
      _GEN_484 = ~_GEN_483 & MOB[4'hF].completed;
      if (_GEN_452) begin
        front_pointer <= 5'h0;
        back_pointer <= 5'h0;
      end
      else begin
        if (_GEN_451)
          front_pointer <= front_pointer + 5'h1;
        back_pointer <=
          back_pointer + {2'h0, {1'h0, _GEN_16 + _GEN_17} + {1'h0, _GEN_18 + _GEN_19}};
      end
      MOB[4'h0] <=
        '{valid:
            (~_GEN_453
             & (written_vec[2'h3]
                  ? _GEN_303 | _GEN_287 | _GEN_241
                  : _GEN_287 | _GEN_241)),
          memory_type:
            (_GEN_453
               ? 2'h0
               : _GEN_318
                   ? io_reserve_3_bits.memory_type
                   : _GEN_287
                       ? io_reserve_2_bits.memory_type
                       : _GEN_271
                           ? io_reserve_1_bits.memory_type
                           : _GEN_224
                               ? io_reserve_0_bits.memory_type
                               : MOB[4'h0].memory_type),
          ROB_index:
            (_GEN_453
               ? 6'h0
               : _GEN_318
                   ? io_reserve_3_bits.ROB_index
                   : _GEN_287
                       ? io_reserve_2_bits.ROB_index
                       : _GEN_271
                           ? io_reserve_1_bits.ROB_index
                           : _GEN_224
                               ? io_reserve_0_bits.ROB_index
                               : MOB[4'h0].ROB_index),
          fetch_packet_index:
            (_GEN_453
               ? 2'h0
               : _GEN_318
                   ? io_reserve_3_bits.packet_index
                   : _GEN_287
                       ? io_reserve_2_bits.packet_index
                       : _GEN_271
                           ? io_reserve_1_bits.packet_index
                           : _GEN_224
                               ? io_reserve_0_bits.packet_index
                               : MOB[4'h0].fetch_packet_index),
          address:
            (_GEN_453
               ? 32'h0
               : _GEN_334 ? io_AGU_output.bits.address : MOB[4'h0].address),
          access_width:
            (_GEN_453
               ? 2'h0
               : _GEN_318
                   ? io_reserve_3_bits.access_width
                   : _GEN_287
                       ? io_reserve_2_bits.access_width
                       : _GEN_271
                           ? io_reserve_1_bits.access_width
                           : _GEN_224
                               ? io_reserve_0_bits.access_width
                               : MOB[4'h0].access_width),
          RD:
            (_GEN_453
               ? 7'h0
               : _GEN_318
                   ? io_reserve_3_bits.RD
                   : _GEN_287
                       ? io_reserve_2_bits.RD
                       : _GEN_271
                           ? io_reserve_1_bits.RD
                           : _GEN_224 ? io_reserve_0_bits.RD : MOB[4'h0].RD),
          data:
            (_GEN_503
               ? _MOB_data_T
               : _GEN_453
                   ? 32'h0
                   : _GEN_334 ? io_AGU_output.bits.wr_data : MOB[4'h0].data),
          data_valid: (_GEN_503 | ~_GEN_453 & MOB[4'h0].data_valid),
          pending:
            (~_GEN_453
             & ((|_GEN_23)
                  ? (|load_index) & _GEN_335
                  : ~(fire_store & _GEN_436) & _GEN_335)),
          completed:
            (_GEN_519
               ? possible_FU_load_index == 4'h0 | _GEN_486 | _GEN_454
               : _GEN_486 | _GEN_454),
          committed:
            (~_GEN_453
             & (MOB[4'h0].valid & io_commit.valid
                & MOB[4'h0].ROB_index == io_commit.bits.ROB_index | MOB[4'h0].committed)),
          exception: (~_GEN_453 & (_GEN_367 & _GEN_368 | MOB[4'h0].exception))};
      MOB[4'h1] <=
        '{valid:
            (~_GEN_455
             & (written_vec[2'h3]
                  ? _GEN_304 | _GEN_288 | _GEN_243
                  : _GEN_288 | _GEN_243)),
          memory_type:
            (_GEN_455
               ? 2'h0
               : _GEN_319
                   ? io_reserve_3_bits.memory_type
                   : _GEN_288
                       ? io_reserve_2_bits.memory_type
                       : _GEN_272
                           ? io_reserve_1_bits.memory_type
                           : _GEN_225
                               ? io_reserve_0_bits.memory_type
                               : MOB[4'h1].memory_type),
          ROB_index:
            (_GEN_455
               ? 6'h0
               : _GEN_319
                   ? io_reserve_3_bits.ROB_index
                   : _GEN_288
                       ? io_reserve_2_bits.ROB_index
                       : _GEN_272
                           ? io_reserve_1_bits.ROB_index
                           : _GEN_225
                               ? io_reserve_0_bits.ROB_index
                               : MOB[4'h1].ROB_index),
          fetch_packet_index:
            (_GEN_455
               ? 2'h0
               : _GEN_319
                   ? io_reserve_3_bits.packet_index
                   : _GEN_288
                       ? io_reserve_2_bits.packet_index
                       : _GEN_272
                           ? io_reserve_1_bits.packet_index
                           : _GEN_225
                               ? io_reserve_0_bits.packet_index
                               : MOB[4'h1].fetch_packet_index),
          address:
            (_GEN_455
               ? 32'h0
               : _GEN_336 ? io_AGU_output.bits.address : MOB[4'h1].address),
          access_width:
            (_GEN_455
               ? 2'h0
               : _GEN_319
                   ? io_reserve_3_bits.access_width
                   : _GEN_288
                       ? io_reserve_2_bits.access_width
                       : _GEN_272
                           ? io_reserve_1_bits.access_width
                           : _GEN_225
                               ? io_reserve_0_bits.access_width
                               : MOB[4'h1].access_width),
          RD:
            (_GEN_455
               ? 7'h0
               : _GEN_319
                   ? io_reserve_3_bits.RD
                   : _GEN_288
                       ? io_reserve_2_bits.RD
                       : _GEN_272
                           ? io_reserve_1_bits.RD
                           : _GEN_225 ? io_reserve_0_bits.RD : MOB[4'h1].RD),
          data:
            (_GEN_504
               ? _MOB_data_T
               : _GEN_455
                   ? 32'h0
                   : _GEN_336 ? io_AGU_output.bits.wr_data : MOB[4'h1].data),
          data_valid: (_GEN_504 | ~_GEN_455 & MOB[4'h1].data_valid),
          pending:
            (~_GEN_455
             & ((|_GEN_23)
                  ? load_index != 4'h1 & _GEN_337
                  : ~(fire_store & _GEN_437) & _GEN_337)),
          completed:
            (_GEN_519
               ? possible_FU_load_index == 4'h1 | _GEN_487 | _GEN_456
               : _GEN_487 | _GEN_456),
          committed:
            (~_GEN_455
             & (MOB[4'h1].valid & io_commit.valid
                & MOB[4'h1].ROB_index == io_commit.bits.ROB_index | MOB[4'h1].committed)),
          exception: (~_GEN_455 & (_GEN_370 & _GEN_371 | MOB[4'h1].exception))};
      MOB[4'h2] <=
        '{valid:
            (~_GEN_457
             & (written_vec[2'h3]
                  ? _GEN_305 | _GEN_289 | _GEN_245
                  : _GEN_289 | _GEN_245)),
          memory_type:
            (_GEN_457
               ? 2'h0
               : _GEN_320
                   ? io_reserve_3_bits.memory_type
                   : _GEN_289
                       ? io_reserve_2_bits.memory_type
                       : _GEN_273
                           ? io_reserve_1_bits.memory_type
                           : _GEN_226
                               ? io_reserve_0_bits.memory_type
                               : MOB[4'h2].memory_type),
          ROB_index:
            (_GEN_457
               ? 6'h0
               : _GEN_320
                   ? io_reserve_3_bits.ROB_index
                   : _GEN_289
                       ? io_reserve_2_bits.ROB_index
                       : _GEN_273
                           ? io_reserve_1_bits.ROB_index
                           : _GEN_226
                               ? io_reserve_0_bits.ROB_index
                               : MOB[4'h2].ROB_index),
          fetch_packet_index:
            (_GEN_457
               ? 2'h0
               : _GEN_320
                   ? io_reserve_3_bits.packet_index
                   : _GEN_289
                       ? io_reserve_2_bits.packet_index
                       : _GEN_273
                           ? io_reserve_1_bits.packet_index
                           : _GEN_226
                               ? io_reserve_0_bits.packet_index
                               : MOB[4'h2].fetch_packet_index),
          address:
            (_GEN_457
               ? 32'h0
               : _GEN_338 ? io_AGU_output.bits.address : MOB[4'h2].address),
          access_width:
            (_GEN_457
               ? 2'h0
               : _GEN_320
                   ? io_reserve_3_bits.access_width
                   : _GEN_289
                       ? io_reserve_2_bits.access_width
                       : _GEN_273
                           ? io_reserve_1_bits.access_width
                           : _GEN_226
                               ? io_reserve_0_bits.access_width
                               : MOB[4'h2].access_width),
          RD:
            (_GEN_457
               ? 7'h0
               : _GEN_320
                   ? io_reserve_3_bits.RD
                   : _GEN_289
                       ? io_reserve_2_bits.RD
                       : _GEN_273
                           ? io_reserve_1_bits.RD
                           : _GEN_226 ? io_reserve_0_bits.RD : MOB[4'h2].RD),
          data:
            (_GEN_505
               ? _MOB_data_T
               : _GEN_457
                   ? 32'h0
                   : _GEN_338 ? io_AGU_output.bits.wr_data : MOB[4'h2].data),
          data_valid: (_GEN_505 | ~_GEN_457 & MOB[4'h2].data_valid),
          pending:
            (~_GEN_457
             & ((|_GEN_23)
                  ? load_index != 4'h2 & _GEN_339
                  : ~(fire_store & _GEN_438) & _GEN_339)),
          completed:
            (_GEN_519
               ? possible_FU_load_index == 4'h2 | _GEN_488 | _GEN_458
               : _GEN_488 | _GEN_458),
          committed:
            (~_GEN_457
             & (MOB[4'h2].valid & io_commit.valid
                & MOB[4'h2].ROB_index == io_commit.bits.ROB_index | MOB[4'h2].committed)),
          exception: (~_GEN_457 & (_GEN_375 & _GEN_376 | MOB[4'h2].exception))};
      MOB[4'h3] <=
        '{valid:
            (~_GEN_459
             & (written_vec[2'h3]
                  ? _GEN_306 | _GEN_290 | _GEN_247
                  : _GEN_290 | _GEN_247)),
          memory_type:
            (_GEN_459
               ? 2'h0
               : _GEN_321
                   ? io_reserve_3_bits.memory_type
                   : _GEN_290
                       ? io_reserve_2_bits.memory_type
                       : _GEN_274
                           ? io_reserve_1_bits.memory_type
                           : _GEN_227
                               ? io_reserve_0_bits.memory_type
                               : MOB[4'h3].memory_type),
          ROB_index:
            (_GEN_459
               ? 6'h0
               : _GEN_321
                   ? io_reserve_3_bits.ROB_index
                   : _GEN_290
                       ? io_reserve_2_bits.ROB_index
                       : _GEN_274
                           ? io_reserve_1_bits.ROB_index
                           : _GEN_227
                               ? io_reserve_0_bits.ROB_index
                               : MOB[4'h3].ROB_index),
          fetch_packet_index:
            (_GEN_459
               ? 2'h0
               : _GEN_321
                   ? io_reserve_3_bits.packet_index
                   : _GEN_290
                       ? io_reserve_2_bits.packet_index
                       : _GEN_274
                           ? io_reserve_1_bits.packet_index
                           : _GEN_227
                               ? io_reserve_0_bits.packet_index
                               : MOB[4'h3].fetch_packet_index),
          address:
            (_GEN_459
               ? 32'h0
               : _GEN_340 ? io_AGU_output.bits.address : MOB[4'h3].address),
          access_width:
            (_GEN_459
               ? 2'h0
               : _GEN_321
                   ? io_reserve_3_bits.access_width
                   : _GEN_290
                       ? io_reserve_2_bits.access_width
                       : _GEN_274
                           ? io_reserve_1_bits.access_width
                           : _GEN_227
                               ? io_reserve_0_bits.access_width
                               : MOB[4'h3].access_width),
          RD:
            (_GEN_459
               ? 7'h0
               : _GEN_321
                   ? io_reserve_3_bits.RD
                   : _GEN_290
                       ? io_reserve_2_bits.RD
                       : _GEN_274
                           ? io_reserve_1_bits.RD
                           : _GEN_227 ? io_reserve_0_bits.RD : MOB[4'h3].RD),
          data:
            (_GEN_506
               ? _MOB_data_T
               : _GEN_459
                   ? 32'h0
                   : _GEN_340 ? io_AGU_output.bits.wr_data : MOB[4'h3].data),
          data_valid: (_GEN_506 | ~_GEN_459 & MOB[4'h3].data_valid),
          pending:
            (~_GEN_459
             & ((|_GEN_23)
                  ? load_index != 4'h3 & _GEN_341
                  : ~(fire_store & _GEN_439) & _GEN_341)),
          completed:
            (_GEN_519
               ? possible_FU_load_index == 4'h3 | _GEN_489 | _GEN_460
               : _GEN_489 | _GEN_460),
          committed:
            (~_GEN_459
             & (MOB[4'h3].valid & io_commit.valid
                & MOB[4'h3].ROB_index == io_commit.bits.ROB_index | MOB[4'h3].committed)),
          exception: (~_GEN_459 & (_GEN_379 & _GEN_380 | MOB[4'h3].exception))};
      MOB[4'h4] <=
        '{valid:
            (~_GEN_461
             & (written_vec[2'h3]
                  ? _GEN_307 | _GEN_291 | _GEN_249
                  : _GEN_291 | _GEN_249)),
          memory_type:
            (_GEN_461
               ? 2'h0
               : _GEN_322
                   ? io_reserve_3_bits.memory_type
                   : _GEN_291
                       ? io_reserve_2_bits.memory_type
                       : _GEN_275
                           ? io_reserve_1_bits.memory_type
                           : _GEN_228
                               ? io_reserve_0_bits.memory_type
                               : MOB[4'h4].memory_type),
          ROB_index:
            (_GEN_461
               ? 6'h0
               : _GEN_322
                   ? io_reserve_3_bits.ROB_index
                   : _GEN_291
                       ? io_reserve_2_bits.ROB_index
                       : _GEN_275
                           ? io_reserve_1_bits.ROB_index
                           : _GEN_228
                               ? io_reserve_0_bits.ROB_index
                               : MOB[4'h4].ROB_index),
          fetch_packet_index:
            (_GEN_461
               ? 2'h0
               : _GEN_322
                   ? io_reserve_3_bits.packet_index
                   : _GEN_291
                       ? io_reserve_2_bits.packet_index
                       : _GEN_275
                           ? io_reserve_1_bits.packet_index
                           : _GEN_228
                               ? io_reserve_0_bits.packet_index
                               : MOB[4'h4].fetch_packet_index),
          address:
            (_GEN_461
               ? 32'h0
               : _GEN_342 ? io_AGU_output.bits.address : MOB[4'h4].address),
          access_width:
            (_GEN_461
               ? 2'h0
               : _GEN_322
                   ? io_reserve_3_bits.access_width
                   : _GEN_291
                       ? io_reserve_2_bits.access_width
                       : _GEN_275
                           ? io_reserve_1_bits.access_width
                           : _GEN_228
                               ? io_reserve_0_bits.access_width
                               : MOB[4'h4].access_width),
          RD:
            (_GEN_461
               ? 7'h0
               : _GEN_322
                   ? io_reserve_3_bits.RD
                   : _GEN_291
                       ? io_reserve_2_bits.RD
                       : _GEN_275
                           ? io_reserve_1_bits.RD
                           : _GEN_228 ? io_reserve_0_bits.RD : MOB[4'h4].RD),
          data:
            (_GEN_507
               ? _MOB_data_T
               : _GEN_461
                   ? 32'h0
                   : _GEN_342 ? io_AGU_output.bits.wr_data : MOB[4'h4].data),
          data_valid: (_GEN_507 | ~_GEN_461 & MOB[4'h4].data_valid),
          pending:
            (~_GEN_461
             & ((|_GEN_23)
                  ? load_index != 4'h4 & _GEN_343
                  : ~(fire_store & _GEN_440) & _GEN_343)),
          completed:
            (_GEN_519
               ? possible_FU_load_index == 4'h4 | _GEN_490 | _GEN_462
               : _GEN_490 | _GEN_462),
          committed:
            (~_GEN_461
             & (MOB[4'h4].valid & io_commit.valid
                & MOB[4'h4].ROB_index == io_commit.bits.ROB_index | MOB[4'h4].committed)),
          exception: (~_GEN_461 & (_GEN_384 & _GEN_385 | MOB[4'h4].exception))};
      MOB[4'h5] <=
        '{valid:
            (~_GEN_463
             & (written_vec[2'h3]
                  ? _GEN_308 | _GEN_292 | _GEN_251
                  : _GEN_292 | _GEN_251)),
          memory_type:
            (_GEN_463
               ? 2'h0
               : _GEN_323
                   ? io_reserve_3_bits.memory_type
                   : _GEN_292
                       ? io_reserve_2_bits.memory_type
                       : _GEN_276
                           ? io_reserve_1_bits.memory_type
                           : _GEN_229
                               ? io_reserve_0_bits.memory_type
                               : MOB[4'h5].memory_type),
          ROB_index:
            (_GEN_463
               ? 6'h0
               : _GEN_323
                   ? io_reserve_3_bits.ROB_index
                   : _GEN_292
                       ? io_reserve_2_bits.ROB_index
                       : _GEN_276
                           ? io_reserve_1_bits.ROB_index
                           : _GEN_229
                               ? io_reserve_0_bits.ROB_index
                               : MOB[4'h5].ROB_index),
          fetch_packet_index:
            (_GEN_463
               ? 2'h0
               : _GEN_323
                   ? io_reserve_3_bits.packet_index
                   : _GEN_292
                       ? io_reserve_2_bits.packet_index
                       : _GEN_276
                           ? io_reserve_1_bits.packet_index
                           : _GEN_229
                               ? io_reserve_0_bits.packet_index
                               : MOB[4'h5].fetch_packet_index),
          address:
            (_GEN_463
               ? 32'h0
               : _GEN_344 ? io_AGU_output.bits.address : MOB[4'h5].address),
          access_width:
            (_GEN_463
               ? 2'h0
               : _GEN_323
                   ? io_reserve_3_bits.access_width
                   : _GEN_292
                       ? io_reserve_2_bits.access_width
                       : _GEN_276
                           ? io_reserve_1_bits.access_width
                           : _GEN_229
                               ? io_reserve_0_bits.access_width
                               : MOB[4'h5].access_width),
          RD:
            (_GEN_463
               ? 7'h0
               : _GEN_323
                   ? io_reserve_3_bits.RD
                   : _GEN_292
                       ? io_reserve_2_bits.RD
                       : _GEN_276
                           ? io_reserve_1_bits.RD
                           : _GEN_229 ? io_reserve_0_bits.RD : MOB[4'h5].RD),
          data:
            (_GEN_508
               ? _MOB_data_T
               : _GEN_463
                   ? 32'h0
                   : _GEN_344 ? io_AGU_output.bits.wr_data : MOB[4'h5].data),
          data_valid: (_GEN_508 | ~_GEN_463 & MOB[4'h5].data_valid),
          pending:
            (~_GEN_463
             & ((|_GEN_23)
                  ? load_index != 4'h5 & _GEN_345
                  : ~(fire_store & _GEN_441) & _GEN_345)),
          completed:
            (_GEN_519
               ? possible_FU_load_index == 4'h5 | _GEN_491 | _GEN_464
               : _GEN_491 | _GEN_464),
          committed:
            (~_GEN_463
             & (MOB[4'h5].valid & io_commit.valid
                & MOB[4'h5].ROB_index == io_commit.bits.ROB_index | MOB[4'h5].committed)),
          exception: (~_GEN_463 & (_GEN_389 & _GEN_390 | MOB[4'h5].exception))};
      MOB[4'h6] <=
        '{valid:
            (~_GEN_465
             & (written_vec[2'h3]
                  ? _GEN_309 | _GEN_293 | _GEN_253
                  : _GEN_293 | _GEN_253)),
          memory_type:
            (_GEN_465
               ? 2'h0
               : _GEN_324
                   ? io_reserve_3_bits.memory_type
                   : _GEN_293
                       ? io_reserve_2_bits.memory_type
                       : _GEN_277
                           ? io_reserve_1_bits.memory_type
                           : _GEN_230
                               ? io_reserve_0_bits.memory_type
                               : MOB[4'h6].memory_type),
          ROB_index:
            (_GEN_465
               ? 6'h0
               : _GEN_324
                   ? io_reserve_3_bits.ROB_index
                   : _GEN_293
                       ? io_reserve_2_bits.ROB_index
                       : _GEN_277
                           ? io_reserve_1_bits.ROB_index
                           : _GEN_230
                               ? io_reserve_0_bits.ROB_index
                               : MOB[4'h6].ROB_index),
          fetch_packet_index:
            (_GEN_465
               ? 2'h0
               : _GEN_324
                   ? io_reserve_3_bits.packet_index
                   : _GEN_293
                       ? io_reserve_2_bits.packet_index
                       : _GEN_277
                           ? io_reserve_1_bits.packet_index
                           : _GEN_230
                               ? io_reserve_0_bits.packet_index
                               : MOB[4'h6].fetch_packet_index),
          address:
            (_GEN_465
               ? 32'h0
               : _GEN_346 ? io_AGU_output.bits.address : MOB[4'h6].address),
          access_width:
            (_GEN_465
               ? 2'h0
               : _GEN_324
                   ? io_reserve_3_bits.access_width
                   : _GEN_293
                       ? io_reserve_2_bits.access_width
                       : _GEN_277
                           ? io_reserve_1_bits.access_width
                           : _GEN_230
                               ? io_reserve_0_bits.access_width
                               : MOB[4'h6].access_width),
          RD:
            (_GEN_465
               ? 7'h0
               : _GEN_324
                   ? io_reserve_3_bits.RD
                   : _GEN_293
                       ? io_reserve_2_bits.RD
                       : _GEN_277
                           ? io_reserve_1_bits.RD
                           : _GEN_230 ? io_reserve_0_bits.RD : MOB[4'h6].RD),
          data:
            (_GEN_509
               ? _MOB_data_T
               : _GEN_465
                   ? 32'h0
                   : _GEN_346 ? io_AGU_output.bits.wr_data : MOB[4'h6].data),
          data_valid: (_GEN_509 | ~_GEN_465 & MOB[4'h6].data_valid),
          pending:
            (~_GEN_465
             & ((|_GEN_23)
                  ? load_index != 4'h6 & _GEN_347
                  : ~(fire_store & _GEN_442) & _GEN_347)),
          completed:
            (_GEN_519
               ? possible_FU_load_index == 4'h6 | _GEN_492 | _GEN_466
               : _GEN_492 | _GEN_466),
          committed:
            (~_GEN_465
             & (MOB[4'h6].valid & io_commit.valid
                & MOB[4'h6].ROB_index == io_commit.bits.ROB_index | MOB[4'h6].committed)),
          exception: (~_GEN_465 & (_GEN_396 & _GEN_397 | MOB[4'h6].exception))};
      MOB[4'h7] <=
        '{valid:
            (~_GEN_467
             & (written_vec[2'h3]
                  ? _GEN_310 | _GEN_294 | _GEN_255
                  : _GEN_294 | _GEN_255)),
          memory_type:
            (_GEN_467
               ? 2'h0
               : _GEN_325
                   ? io_reserve_3_bits.memory_type
                   : _GEN_294
                       ? io_reserve_2_bits.memory_type
                       : _GEN_278
                           ? io_reserve_1_bits.memory_type
                           : _GEN_231
                               ? io_reserve_0_bits.memory_type
                               : MOB[4'h7].memory_type),
          ROB_index:
            (_GEN_467
               ? 6'h0
               : _GEN_325
                   ? io_reserve_3_bits.ROB_index
                   : _GEN_294
                       ? io_reserve_2_bits.ROB_index
                       : _GEN_278
                           ? io_reserve_1_bits.ROB_index
                           : _GEN_231
                               ? io_reserve_0_bits.ROB_index
                               : MOB[4'h7].ROB_index),
          fetch_packet_index:
            (_GEN_467
               ? 2'h0
               : _GEN_325
                   ? io_reserve_3_bits.packet_index
                   : _GEN_294
                       ? io_reserve_2_bits.packet_index
                       : _GEN_278
                           ? io_reserve_1_bits.packet_index
                           : _GEN_231
                               ? io_reserve_0_bits.packet_index
                               : MOB[4'h7].fetch_packet_index),
          address:
            (_GEN_467
               ? 32'h0
               : _GEN_348 ? io_AGU_output.bits.address : MOB[4'h7].address),
          access_width:
            (_GEN_467
               ? 2'h0
               : _GEN_325
                   ? io_reserve_3_bits.access_width
                   : _GEN_294
                       ? io_reserve_2_bits.access_width
                       : _GEN_278
                           ? io_reserve_1_bits.access_width
                           : _GEN_231
                               ? io_reserve_0_bits.access_width
                               : MOB[4'h7].access_width),
          RD:
            (_GEN_467
               ? 7'h0
               : _GEN_325
                   ? io_reserve_3_bits.RD
                   : _GEN_294
                       ? io_reserve_2_bits.RD
                       : _GEN_278
                           ? io_reserve_1_bits.RD
                           : _GEN_231 ? io_reserve_0_bits.RD : MOB[4'h7].RD),
          data:
            (_GEN_510
               ? _MOB_data_T
               : _GEN_467
                   ? 32'h0
                   : _GEN_348 ? io_AGU_output.bits.wr_data : MOB[4'h7].data),
          data_valid: (_GEN_510 | ~_GEN_467 & MOB[4'h7].data_valid),
          pending:
            (~_GEN_467
             & ((|_GEN_23)
                  ? load_index != 4'h7 & _GEN_349
                  : ~(fire_store & _GEN_443) & _GEN_349)),
          completed:
            (_GEN_519
               ? possible_FU_load_index == 4'h7 | _GEN_493 | _GEN_468
               : _GEN_493 | _GEN_468),
          committed:
            (~_GEN_467
             & (MOB[4'h7].valid & io_commit.valid
                & MOB[4'h7].ROB_index == io_commit.bits.ROB_index | MOB[4'h7].committed)),
          exception: (~_GEN_467 & (_GEN_401 & _GEN_402 | MOB[4'h7].exception))};
      MOB[4'h8] <=
        '{valid:
            (~_GEN_469
             & (written_vec[2'h3]
                  ? _GEN_311 | _GEN_295 | _GEN_257
                  : _GEN_295 | _GEN_257)),
          memory_type:
            (_GEN_469
               ? 2'h0
               : _GEN_326
                   ? io_reserve_3_bits.memory_type
                   : _GEN_295
                       ? io_reserve_2_bits.memory_type
                       : _GEN_279
                           ? io_reserve_1_bits.memory_type
                           : _GEN_232
                               ? io_reserve_0_bits.memory_type
                               : MOB[4'h8].memory_type),
          ROB_index:
            (_GEN_469
               ? 6'h0
               : _GEN_326
                   ? io_reserve_3_bits.ROB_index
                   : _GEN_295
                       ? io_reserve_2_bits.ROB_index
                       : _GEN_279
                           ? io_reserve_1_bits.ROB_index
                           : _GEN_232
                               ? io_reserve_0_bits.ROB_index
                               : MOB[4'h8].ROB_index),
          fetch_packet_index:
            (_GEN_469
               ? 2'h0
               : _GEN_326
                   ? io_reserve_3_bits.packet_index
                   : _GEN_295
                       ? io_reserve_2_bits.packet_index
                       : _GEN_279
                           ? io_reserve_1_bits.packet_index
                           : _GEN_232
                               ? io_reserve_0_bits.packet_index
                               : MOB[4'h8].fetch_packet_index),
          address:
            (_GEN_469
               ? 32'h0
               : _GEN_350 ? io_AGU_output.bits.address : MOB[4'h8].address),
          access_width:
            (_GEN_469
               ? 2'h0
               : _GEN_326
                   ? io_reserve_3_bits.access_width
                   : _GEN_295
                       ? io_reserve_2_bits.access_width
                       : _GEN_279
                           ? io_reserve_1_bits.access_width
                           : _GEN_232
                               ? io_reserve_0_bits.access_width
                               : MOB[4'h8].access_width),
          RD:
            (_GEN_469
               ? 7'h0
               : _GEN_326
                   ? io_reserve_3_bits.RD
                   : _GEN_295
                       ? io_reserve_2_bits.RD
                       : _GEN_279
                           ? io_reserve_1_bits.RD
                           : _GEN_232 ? io_reserve_0_bits.RD : MOB[4'h8].RD),
          data:
            (_GEN_511
               ? _MOB_data_T
               : _GEN_469
                   ? 32'h0
                   : _GEN_350 ? io_AGU_output.bits.wr_data : MOB[4'h8].data),
          data_valid: (_GEN_511 | ~_GEN_469 & MOB[4'h8].data_valid),
          pending:
            (~_GEN_469
             & ((|_GEN_23)
                  ? load_index != 4'h8 & _GEN_351
                  : ~(fire_store & _GEN_444) & _GEN_351)),
          completed:
            (_GEN_519
               ? possible_FU_load_index == 4'h8 | _GEN_494 | _GEN_470
               : _GEN_494 | _GEN_470),
          committed:
            (~_GEN_469
             & (MOB[4'h8].valid & io_commit.valid
                & MOB[4'h8].ROB_index == io_commit.bits.ROB_index | MOB[4'h8].committed)),
          exception: (~_GEN_469 & (_GEN_406 & _GEN_407 | MOB[4'h8].exception))};
      MOB[4'h9] <=
        '{valid:
            (~_GEN_471
             & (written_vec[2'h3]
                  ? _GEN_312 | _GEN_296 | _GEN_259
                  : _GEN_296 | _GEN_259)),
          memory_type:
            (_GEN_471
               ? 2'h0
               : _GEN_327
                   ? io_reserve_3_bits.memory_type
                   : _GEN_296
                       ? io_reserve_2_bits.memory_type
                       : _GEN_280
                           ? io_reserve_1_bits.memory_type
                           : _GEN_233
                               ? io_reserve_0_bits.memory_type
                               : MOB[4'h9].memory_type),
          ROB_index:
            (_GEN_471
               ? 6'h0
               : _GEN_327
                   ? io_reserve_3_bits.ROB_index
                   : _GEN_296
                       ? io_reserve_2_bits.ROB_index
                       : _GEN_280
                           ? io_reserve_1_bits.ROB_index
                           : _GEN_233
                               ? io_reserve_0_bits.ROB_index
                               : MOB[4'h9].ROB_index),
          fetch_packet_index:
            (_GEN_471
               ? 2'h0
               : _GEN_327
                   ? io_reserve_3_bits.packet_index
                   : _GEN_296
                       ? io_reserve_2_bits.packet_index
                       : _GEN_280
                           ? io_reserve_1_bits.packet_index
                           : _GEN_233
                               ? io_reserve_0_bits.packet_index
                               : MOB[4'h9].fetch_packet_index),
          address:
            (_GEN_471
               ? 32'h0
               : _GEN_352 ? io_AGU_output.bits.address : MOB[4'h9].address),
          access_width:
            (_GEN_471
               ? 2'h0
               : _GEN_327
                   ? io_reserve_3_bits.access_width
                   : _GEN_296
                       ? io_reserve_2_bits.access_width
                       : _GEN_280
                           ? io_reserve_1_bits.access_width
                           : _GEN_233
                               ? io_reserve_0_bits.access_width
                               : MOB[4'h9].access_width),
          RD:
            (_GEN_471
               ? 7'h0
               : _GEN_327
                   ? io_reserve_3_bits.RD
                   : _GEN_296
                       ? io_reserve_2_bits.RD
                       : _GEN_280
                           ? io_reserve_1_bits.RD
                           : _GEN_233 ? io_reserve_0_bits.RD : MOB[4'h9].RD),
          data:
            (_GEN_512
               ? _MOB_data_T
               : _GEN_471
                   ? 32'h0
                   : _GEN_352 ? io_AGU_output.bits.wr_data : MOB[4'h9].data),
          data_valid: (_GEN_512 | ~_GEN_471 & MOB[4'h9].data_valid),
          pending:
            (~_GEN_471
             & ((|_GEN_23)
                  ? load_index != 4'h9 & _GEN_353
                  : ~(fire_store & _GEN_445) & _GEN_353)),
          completed:
            (_GEN_519
               ? possible_FU_load_index == 4'h9 | _GEN_495 | _GEN_472
               : _GEN_495 | _GEN_472),
          committed:
            (~_GEN_471
             & (MOB[4'h9].valid & io_commit.valid
                & MOB[4'h9].ROB_index == io_commit.bits.ROB_index | MOB[4'h9].committed)),
          exception: (~_GEN_471 & (_GEN_411 & _GEN_412 | MOB[4'h9].exception))};
      MOB[4'hA] <=
        '{valid:
            (~_GEN_473
             & (written_vec[2'h3]
                  ? _GEN_313 | _GEN_297 | _GEN_261
                  : _GEN_297 | _GEN_261)),
          memory_type:
            (_GEN_473
               ? 2'h0
               : _GEN_328
                   ? io_reserve_3_bits.memory_type
                   : _GEN_297
                       ? io_reserve_2_bits.memory_type
                       : _GEN_281
                           ? io_reserve_1_bits.memory_type
                           : _GEN_234
                               ? io_reserve_0_bits.memory_type
                               : MOB[4'hA].memory_type),
          ROB_index:
            (_GEN_473
               ? 6'h0
               : _GEN_328
                   ? io_reserve_3_bits.ROB_index
                   : _GEN_297
                       ? io_reserve_2_bits.ROB_index
                       : _GEN_281
                           ? io_reserve_1_bits.ROB_index
                           : _GEN_234
                               ? io_reserve_0_bits.ROB_index
                               : MOB[4'hA].ROB_index),
          fetch_packet_index:
            (_GEN_473
               ? 2'h0
               : _GEN_328
                   ? io_reserve_3_bits.packet_index
                   : _GEN_297
                       ? io_reserve_2_bits.packet_index
                       : _GEN_281
                           ? io_reserve_1_bits.packet_index
                           : _GEN_234
                               ? io_reserve_0_bits.packet_index
                               : MOB[4'hA].fetch_packet_index),
          address:
            (_GEN_473
               ? 32'h0
               : _GEN_354 ? io_AGU_output.bits.address : MOB[4'hA].address),
          access_width:
            (_GEN_473
               ? 2'h0
               : _GEN_328
                   ? io_reserve_3_bits.access_width
                   : _GEN_297
                       ? io_reserve_2_bits.access_width
                       : _GEN_281
                           ? io_reserve_1_bits.access_width
                           : _GEN_234
                               ? io_reserve_0_bits.access_width
                               : MOB[4'hA].access_width),
          RD:
            (_GEN_473
               ? 7'h0
               : _GEN_328
                   ? io_reserve_3_bits.RD
                   : _GEN_297
                       ? io_reserve_2_bits.RD
                       : _GEN_281
                           ? io_reserve_1_bits.RD
                           : _GEN_234 ? io_reserve_0_bits.RD : MOB[4'hA].RD),
          data:
            (_GEN_513
               ? _MOB_data_T
               : _GEN_473
                   ? 32'h0
                   : _GEN_354 ? io_AGU_output.bits.wr_data : MOB[4'hA].data),
          data_valid: (_GEN_513 | ~_GEN_473 & MOB[4'hA].data_valid),
          pending:
            (~_GEN_473
             & ((|_GEN_23)
                  ? load_index != 4'hA & _GEN_355
                  : ~(fire_store & _GEN_446) & _GEN_355)),
          completed:
            (_GEN_519
               ? possible_FU_load_index == 4'hA | _GEN_496 | _GEN_474
               : _GEN_496 | _GEN_474),
          committed:
            (~_GEN_473
             & (MOB[4'hA].valid & io_commit.valid
                & MOB[4'hA].ROB_index == io_commit.bits.ROB_index | MOB[4'hA].committed)),
          exception: (~_GEN_473 & (_GEN_416 & _GEN_417 | MOB[4'hA].exception))};
      MOB[4'hB] <=
        '{valid:
            (~_GEN_475
             & (written_vec[2'h3]
                  ? _GEN_314 | _GEN_298 | _GEN_263
                  : _GEN_298 | _GEN_263)),
          memory_type:
            (_GEN_475
               ? 2'h0
               : _GEN_329
                   ? io_reserve_3_bits.memory_type
                   : _GEN_298
                       ? io_reserve_2_bits.memory_type
                       : _GEN_282
                           ? io_reserve_1_bits.memory_type
                           : _GEN_235
                               ? io_reserve_0_bits.memory_type
                               : MOB[4'hB].memory_type),
          ROB_index:
            (_GEN_475
               ? 6'h0
               : _GEN_329
                   ? io_reserve_3_bits.ROB_index
                   : _GEN_298
                       ? io_reserve_2_bits.ROB_index
                       : _GEN_282
                           ? io_reserve_1_bits.ROB_index
                           : _GEN_235
                               ? io_reserve_0_bits.ROB_index
                               : MOB[4'hB].ROB_index),
          fetch_packet_index:
            (_GEN_475
               ? 2'h0
               : _GEN_329
                   ? io_reserve_3_bits.packet_index
                   : _GEN_298
                       ? io_reserve_2_bits.packet_index
                       : _GEN_282
                           ? io_reserve_1_bits.packet_index
                           : _GEN_235
                               ? io_reserve_0_bits.packet_index
                               : MOB[4'hB].fetch_packet_index),
          address:
            (_GEN_475
               ? 32'h0
               : _GEN_356 ? io_AGU_output.bits.address : MOB[4'hB].address),
          access_width:
            (_GEN_475
               ? 2'h0
               : _GEN_329
                   ? io_reserve_3_bits.access_width
                   : _GEN_298
                       ? io_reserve_2_bits.access_width
                       : _GEN_282
                           ? io_reserve_1_bits.access_width
                           : _GEN_235
                               ? io_reserve_0_bits.access_width
                               : MOB[4'hB].access_width),
          RD:
            (_GEN_475
               ? 7'h0
               : _GEN_329
                   ? io_reserve_3_bits.RD
                   : _GEN_298
                       ? io_reserve_2_bits.RD
                       : _GEN_282
                           ? io_reserve_1_bits.RD
                           : _GEN_235 ? io_reserve_0_bits.RD : MOB[4'hB].RD),
          data:
            (_GEN_514
               ? _MOB_data_T
               : _GEN_475
                   ? 32'h0
                   : _GEN_356 ? io_AGU_output.bits.wr_data : MOB[4'hB].data),
          data_valid: (_GEN_514 | ~_GEN_475 & MOB[4'hB].data_valid),
          pending:
            (~_GEN_475
             & ((|_GEN_23)
                  ? load_index != 4'hB & _GEN_357
                  : ~(fire_store & _GEN_447) & _GEN_357)),
          completed:
            (_GEN_519
               ? possible_FU_load_index == 4'hB | _GEN_497 | _GEN_476
               : _GEN_497 | _GEN_476),
          committed:
            (~_GEN_475
             & (MOB[4'hB].valid & io_commit.valid
                & MOB[4'hB].ROB_index == io_commit.bits.ROB_index | MOB[4'hB].committed)),
          exception: (~_GEN_475 & (_GEN_421 & _GEN_422 | MOB[4'hB].exception))};
      MOB[4'hC] <=
        '{valid:
            (~_GEN_477
             & (written_vec[2'h3]
                  ? _GEN_315 | _GEN_299 | _GEN_265
                  : _GEN_299 | _GEN_265)),
          memory_type:
            (_GEN_477
               ? 2'h0
               : _GEN_330
                   ? io_reserve_3_bits.memory_type
                   : _GEN_299
                       ? io_reserve_2_bits.memory_type
                       : _GEN_283
                           ? io_reserve_1_bits.memory_type
                           : _GEN_236
                               ? io_reserve_0_bits.memory_type
                               : MOB[4'hC].memory_type),
          ROB_index:
            (_GEN_477
               ? 6'h0
               : _GEN_330
                   ? io_reserve_3_bits.ROB_index
                   : _GEN_299
                       ? io_reserve_2_bits.ROB_index
                       : _GEN_283
                           ? io_reserve_1_bits.ROB_index
                           : _GEN_236
                               ? io_reserve_0_bits.ROB_index
                               : MOB[4'hC].ROB_index),
          fetch_packet_index:
            (_GEN_477
               ? 2'h0
               : _GEN_330
                   ? io_reserve_3_bits.packet_index
                   : _GEN_299
                       ? io_reserve_2_bits.packet_index
                       : _GEN_283
                           ? io_reserve_1_bits.packet_index
                           : _GEN_236
                               ? io_reserve_0_bits.packet_index
                               : MOB[4'hC].fetch_packet_index),
          address:
            (_GEN_477
               ? 32'h0
               : _GEN_358 ? io_AGU_output.bits.address : MOB[4'hC].address),
          access_width:
            (_GEN_477
               ? 2'h0
               : _GEN_330
                   ? io_reserve_3_bits.access_width
                   : _GEN_299
                       ? io_reserve_2_bits.access_width
                       : _GEN_283
                           ? io_reserve_1_bits.access_width
                           : _GEN_236
                               ? io_reserve_0_bits.access_width
                               : MOB[4'hC].access_width),
          RD:
            (_GEN_477
               ? 7'h0
               : _GEN_330
                   ? io_reserve_3_bits.RD
                   : _GEN_299
                       ? io_reserve_2_bits.RD
                       : _GEN_283
                           ? io_reserve_1_bits.RD
                           : _GEN_236 ? io_reserve_0_bits.RD : MOB[4'hC].RD),
          data:
            (_GEN_515
               ? _MOB_data_T
               : _GEN_477
                   ? 32'h0
                   : _GEN_358 ? io_AGU_output.bits.wr_data : MOB[4'hC].data),
          data_valid: (_GEN_515 | ~_GEN_477 & MOB[4'hC].data_valid),
          pending:
            (~_GEN_477
             & ((|_GEN_23)
                  ? load_index != 4'hC & _GEN_359
                  : ~(fire_store & _GEN_448) & _GEN_359)),
          completed:
            (_GEN_519
               ? possible_FU_load_index == 4'hC | _GEN_498 | _GEN_478
               : _GEN_498 | _GEN_478),
          committed:
            (~_GEN_477
             & (MOB[4'hC].valid & io_commit.valid
                & MOB[4'hC].ROB_index == io_commit.bits.ROB_index | MOB[4'hC].committed)),
          exception: (~_GEN_477 & (_GEN_426 & _GEN_427 | MOB[4'hC].exception))};
      MOB[4'hD] <=
        '{valid:
            (~_GEN_479
             & (written_vec[2'h3]
                  ? _GEN_316 | _GEN_300 | _GEN_267
                  : _GEN_300 | _GEN_267)),
          memory_type:
            (_GEN_479
               ? 2'h0
               : _GEN_331
                   ? io_reserve_3_bits.memory_type
                   : _GEN_300
                       ? io_reserve_2_bits.memory_type
                       : _GEN_284
                           ? io_reserve_1_bits.memory_type
                           : _GEN_237
                               ? io_reserve_0_bits.memory_type
                               : MOB[4'hD].memory_type),
          ROB_index:
            (_GEN_479
               ? 6'h0
               : _GEN_331
                   ? io_reserve_3_bits.ROB_index
                   : _GEN_300
                       ? io_reserve_2_bits.ROB_index
                       : _GEN_284
                           ? io_reserve_1_bits.ROB_index
                           : _GEN_237
                               ? io_reserve_0_bits.ROB_index
                               : MOB[4'hD].ROB_index),
          fetch_packet_index:
            (_GEN_479
               ? 2'h0
               : _GEN_331
                   ? io_reserve_3_bits.packet_index
                   : _GEN_300
                       ? io_reserve_2_bits.packet_index
                       : _GEN_284
                           ? io_reserve_1_bits.packet_index
                           : _GEN_237
                               ? io_reserve_0_bits.packet_index
                               : MOB[4'hD].fetch_packet_index),
          address:
            (_GEN_479
               ? 32'h0
               : _GEN_360 ? io_AGU_output.bits.address : MOB[4'hD].address),
          access_width:
            (_GEN_479
               ? 2'h0
               : _GEN_331
                   ? io_reserve_3_bits.access_width
                   : _GEN_300
                       ? io_reserve_2_bits.access_width
                       : _GEN_284
                           ? io_reserve_1_bits.access_width
                           : _GEN_237
                               ? io_reserve_0_bits.access_width
                               : MOB[4'hD].access_width),
          RD:
            (_GEN_479
               ? 7'h0
               : _GEN_331
                   ? io_reserve_3_bits.RD
                   : _GEN_300
                       ? io_reserve_2_bits.RD
                       : _GEN_284
                           ? io_reserve_1_bits.RD
                           : _GEN_237 ? io_reserve_0_bits.RD : MOB[4'hD].RD),
          data:
            (_GEN_516
               ? _MOB_data_T
               : _GEN_479
                   ? 32'h0
                   : _GEN_360 ? io_AGU_output.bits.wr_data : MOB[4'hD].data),
          data_valid: (_GEN_516 | ~_GEN_479 & MOB[4'hD].data_valid),
          pending:
            (~_GEN_479
             & ((|_GEN_23)
                  ? load_index != 4'hD & _GEN_361
                  : ~(fire_store & _GEN_449) & _GEN_361)),
          completed:
            (_GEN_519
               ? possible_FU_load_index == 4'hD | _GEN_499 | _GEN_480
               : _GEN_499 | _GEN_480),
          committed:
            (~_GEN_479
             & (MOB[4'hD].valid & io_commit.valid
                & MOB[4'hD].ROB_index == io_commit.bits.ROB_index | MOB[4'hD].committed)),
          exception: (~_GEN_479 & (_GEN_430 & _GEN_431 | MOB[4'hD].exception))};
      MOB[4'hE] <=
        '{valid:
            (~_GEN_481
             & (written_vec[2'h3]
                  ? _GEN_317 | _GEN_301 | _GEN_269
                  : _GEN_301 | _GEN_269)),
          memory_type:
            (_GEN_481
               ? 2'h0
               : _GEN_332
                   ? io_reserve_3_bits.memory_type
                   : _GEN_301
                       ? io_reserve_2_bits.memory_type
                       : _GEN_285
                           ? io_reserve_1_bits.memory_type
                           : _GEN_238
                               ? io_reserve_0_bits.memory_type
                               : MOB[4'hE].memory_type),
          ROB_index:
            (_GEN_481
               ? 6'h0
               : _GEN_332
                   ? io_reserve_3_bits.ROB_index
                   : _GEN_301
                       ? io_reserve_2_bits.ROB_index
                       : _GEN_285
                           ? io_reserve_1_bits.ROB_index
                           : _GEN_238
                               ? io_reserve_0_bits.ROB_index
                               : MOB[4'hE].ROB_index),
          fetch_packet_index:
            (_GEN_481
               ? 2'h0
               : _GEN_332
                   ? io_reserve_3_bits.packet_index
                   : _GEN_301
                       ? io_reserve_2_bits.packet_index
                       : _GEN_285
                           ? io_reserve_1_bits.packet_index
                           : _GEN_238
                               ? io_reserve_0_bits.packet_index
                               : MOB[4'hE].fetch_packet_index),
          address:
            (_GEN_481
               ? 32'h0
               : _GEN_362 ? io_AGU_output.bits.address : MOB[4'hE].address),
          access_width:
            (_GEN_481
               ? 2'h0
               : _GEN_332
                   ? io_reserve_3_bits.access_width
                   : _GEN_301
                       ? io_reserve_2_bits.access_width
                       : _GEN_285
                           ? io_reserve_1_bits.access_width
                           : _GEN_238
                               ? io_reserve_0_bits.access_width
                               : MOB[4'hE].access_width),
          RD:
            (_GEN_481
               ? 7'h0
               : _GEN_332
                   ? io_reserve_3_bits.RD
                   : _GEN_301
                       ? io_reserve_2_bits.RD
                       : _GEN_285
                           ? io_reserve_1_bits.RD
                           : _GEN_238 ? io_reserve_0_bits.RD : MOB[4'hE].RD),
          data:
            (_GEN_517
               ? _MOB_data_T
               : _GEN_481
                   ? 32'h0
                   : _GEN_362 ? io_AGU_output.bits.wr_data : MOB[4'hE].data),
          data_valid: (_GEN_517 | ~_GEN_481 & MOB[4'hE].data_valid),
          pending:
            (~_GEN_481
             & ((|_GEN_23)
                  ? load_index != 4'hE & _GEN_363
                  : ~(fire_store & _GEN_450) & _GEN_363)),
          completed:
            (_GEN_519
               ? possible_FU_load_index == 4'hE | _GEN_500 | _GEN_482
               : _GEN_500 | _GEN_482),
          committed:
            (~_GEN_481
             & (MOB[4'hE].valid & io_commit.valid
                & MOB[4'hE].ROB_index == io_commit.bits.ROB_index | MOB[4'hE].committed)),
          exception: (~_GEN_481 & (_GEN_434 & _GEN_435 | MOB[4'hE].exception))};
      MOB[4'hF] <=
        '{valid:
            (~_GEN_483
             & (written_vec[2'h3]
                  ? (&_io_reserved_pointers_3_bits_T) | _GEN_302 | _GEN_270
                  : _GEN_302 | _GEN_270)),
          memory_type:
            (_GEN_483
               ? 2'h0
               : _GEN_333
                   ? io_reserve_3_bits.memory_type
                   : _GEN_302
                       ? io_reserve_2_bits.memory_type
                       : _GEN_286
                           ? io_reserve_1_bits.memory_type
                           : _GEN_239
                               ? io_reserve_0_bits.memory_type
                               : MOB[4'hF].memory_type),
          ROB_index:
            (_GEN_483
               ? 6'h0
               : _GEN_333
                   ? io_reserve_3_bits.ROB_index
                   : _GEN_302
                       ? io_reserve_2_bits.ROB_index
                       : _GEN_286
                           ? io_reserve_1_bits.ROB_index
                           : _GEN_239
                               ? io_reserve_0_bits.ROB_index
                               : MOB[4'hF].ROB_index),
          fetch_packet_index:
            (_GEN_483
               ? 2'h0
               : _GEN_333
                   ? io_reserve_3_bits.packet_index
                   : _GEN_302
                       ? io_reserve_2_bits.packet_index
                       : _GEN_286
                           ? io_reserve_1_bits.packet_index
                           : _GEN_239
                               ? io_reserve_0_bits.packet_index
                               : MOB[4'hF].fetch_packet_index),
          address:
            (_GEN_483
               ? 32'h0
               : _GEN_364 ? io_AGU_output.bits.address : MOB[4'hF].address),
          access_width:
            (_GEN_483
               ? 2'h0
               : _GEN_333
                   ? io_reserve_3_bits.access_width
                   : _GEN_302
                       ? io_reserve_2_bits.access_width
                       : _GEN_286
                           ? io_reserve_1_bits.access_width
                           : _GEN_239
                               ? io_reserve_0_bits.access_width
                               : MOB[4'hF].access_width),
          RD:
            (_GEN_483
               ? 7'h0
               : _GEN_333
                   ? io_reserve_3_bits.RD
                   : _GEN_302
                       ? io_reserve_2_bits.RD
                       : _GEN_286
                           ? io_reserve_1_bits.RD
                           : _GEN_239 ? io_reserve_0_bits.RD : MOB[4'hF].RD),
          data:
            (_GEN_518
               ? _MOB_data_T
               : _GEN_483
                   ? 32'h0
                   : _GEN_364 ? io_AGU_output.bits.wr_data : MOB[4'hF].data),
          data_valid: (_GEN_518 | ~_GEN_483 & MOB[4'hF].data_valid),
          pending:
            (~_GEN_483
             & ((|_GEN_23)
                  ? load_index != 4'hF & _GEN_365
                  : ~(fire_store & (&front_index)) & _GEN_365)),
          completed:
            (_GEN_519
               ? (&possible_FU_load_index) | _GEN_501 | _GEN_484
               : _GEN_501 | _GEN_484),
          committed:
            (~_GEN_483
             & (MOB[4'hF].valid & io_commit.valid
                & MOB[4'hF].ROB_index == io_commit.bits.ROB_index | MOB[4'hF].committed)),
          exception:
            (~_GEN_483
             & (io_AGU_output.valid & age_vector[4'hF] < _GEN_366
                & io_AGU_output.bits.address == (MOB[4'hF].address & 32'hFFFFFFF0)
                & MOB[4'hF].valid & _GEN_433 + {1'h0, {1'h0, _GEN_409} + _GEN_420}
                + {1'h0,
                   _GEN_429
                     + {1'h0,
                        _GEN_432
                          + {1'h0,
                             _GEN_434 & ~_GEN_435 & incoming_is_store & is_store_14
                               & MOB[4'hE].pending}}} == 4'h0
                & (incoming_is_load & is_load_15 & MOB[4'hF].completed | incoming_is_store
                   & is_load_15 & MOB[4'hF].completed) | MOB[4'hF].exception))};
    end
  end // always @(posedge)
  Queue4_FU_output FU_output_load_Q (
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_FU_output_load_Q_io_enq_ready),
    .io_enq_valid (_FU_output_load_Q_io_enq_valid_T_14),
    .io_enq_bits  (_GEN_218),
    .io_deq_ready (_FU_output_arbiter_io_in_0_ready),
    .io_deq_valid (_FU_output_load_Q_io_deq_valid),
    .io_deq_bits  (_FU_output_load_Q_io_deq_bits),
    .io_count     (/* unused */),
    .io_flush     (io_commit.valid & _FU_output_load_Q_io_flush_T)
  );
  Queue4_FU_output FU_output_store_Q (
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_FU_output_store_Q_io_enq_ready),
    .io_enq_valid (_FU_output_store_Q_io_enq_valid_T_14),
    .io_enq_bits  (_GEN_219),
    .io_deq_ready (_FU_output_arbiter_io_in_1_ready),
    .io_deq_valid (_FU_output_store_Q_io_deq_valid),
    .io_deq_bits  (_FU_output_store_Q_io_deq_bits),
    .io_count     (/* unused */),
    .io_flush     (io_commit.valid & _FU_output_load_Q_io_flush_T)
  );
  Arbiter2_FU_output FU_output_arbiter (
    .io_in_0_ready (_FU_output_arbiter_io_in_0_ready),
    .io_in_0_valid (_FU_output_load_Q_io_deq_valid),
    .io_in_0_bits  (_FU_output_load_Q_io_deq_bits),
    .io_in_1_ready (_FU_output_arbiter_io_in_1_ready),
    .io_in_1_valid (_FU_output_store_Q_io_deq_valid),
    .io_in_1_bits  (_FU_output_store_Q_io_deq_bits),
    .io_out_ready  (1'h1),
    .io_out_valid  (_FU_output_arbiter_io_out_valid),
    .io_out_bits   (_FU_output_arbiter_io_out_bits),
    .io_chosen     (/* unused */)
  );
  assign io_reserve_0_ready = |_availalbe_MOB_entries_4to2;
  assign io_reserve_1_ready = |_availalbe_MOB_entries_4to2;
  assign io_reserve_2_ready = |_availalbe_MOB_entries_4to2;
  assign io_reserve_3_ready = |_availalbe_MOB_entries_4to2;
  assign io_reserved_pointers = {{_GEN_220}, {_GEN_221}, {_GEN_222}, {_GEN_223}};
  assign io_MOB_output =
    '{valid: _FU_output_arbiter_io_out_valid, bits: _FU_output_arbiter_io_out_bits};
  assign io_backend_memory_request_valid = (|_GEN_23) | fire_store;
  assign io_backend_memory_request_bits =
    '{addr:
        ((|_GEN_23)
           ? MOB[load_index].address
           : fire_store ? MOB[front_index].address : 32'h0),
      data: ((|_GEN_23) | ~fire_store ? 32'h0 : MOB[front_index].data),
      memory_type:
        ((|_GEN_23)
           ? MOB[load_index].memory_type
           : fire_store ? MOB[front_index].memory_type : 2'h0),
      access_width:
        ((|_GEN_23)
           ? MOB[load_index].access_width
           : fire_store ? MOB[front_index].access_width : 2'h0),
      MOB_index: ((|_GEN_23) ? load_index : fire_store ? front_index : 4'h0)};
  assign io_backend_memory_response_ready = 1'h1;
endmodule

