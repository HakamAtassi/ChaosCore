// Generated by CIRCT firtool-1.76.0
module FTQ(
  input                                                                                                                                                                                                                                                                                                                                                                                                                                                      clock,
                                                                                                                                                                                                                                                                                                                                                                                                                                                             reset,
                                                                                                                                                                                                                                                                                                                                                                                                                                                             io_flush,
  input  struct packed {logic valid; struct packed {logic [6:0] RD; logic [31:0] RD_data; logic RD_valid; logic [31:0] fetch_PC; logic branch_taken; logic [31:0] target_address; logic branch_valid; logic [31:0] address; logic [1:0] memory_type; logic [1:0] access_width; logic is_unsigned; logic [31:0] wr_data; logic [3:0] MOB_index; logic [5:0] ROB_index; logic [3:0] FTQ_index; logic [1:0] fetch_packet_index; logic exception; } bits; }[3:0] io_FU_outputs,
  output                                                                                                                                                                                                                                                                                                                                                                                                                                                     io_predictions_ready,
  input                                                                                                                                                                                                                                                                                                                                                                                                                                                      io_predictions_valid,
  input  struct packed {logic valid; logic [31:0] fetch_PC; logic is_misprediction; logic [31:0] predicted_PC; logic [5:0] ROB_index; logic T_NT; logic [2:0] br_type; logic [1:0] dominant_index; logic [31:0] resolved_PC; }                                                                                                                                                                                                                               io_predictions_bits,
  input  [5:0]                                                                                                                                                                                                                                                                                                                                                                                                                                               io_ROB_index,
  input  struct packed {logic valid; struct packed {logic [31:0] fetch_PC; logic T_NT; logic [5:0] ROB_index; logic [2:0] br_type; logic [1:0] fetch_packet_index; logic is_misprediction; logic exception; logic [31:0] expected_PC; logic [15:0] GHR; logic [6:0] TOS; logic [6:0] NEXT; logic [7:0] free_list_front_pointer; logic [3:0][4:0] RDold; logic [3:0][6:0] RD; logic [3:0] RD_valid; } bits; }                                                 io_commit,
  output struct packed {logic valid; logic [31:0] fetch_PC; logic is_misprediction; logic [31:0] predicted_PC; logic [5:0] ROB_index; logic T_NT; logic [2:0] br_type; logic [1:0] dominant_index; logic [31:0] resolved_PC; }                                                                                                                                                                                                                               io_FTQ,
  output [3:0]                                                                                                                                                                                                                                                                                                                                                                                                                                               io_FTQ_index
);

  reg  [4:0] front_pointer;
  reg  [4:0] back_pointer;
  wire [3:0] front_index = front_pointer[3:0];
  wire [3:0] back_index = back_pointer[3:0];
  struct packed {logic valid; logic [31:0] fetch_PC; logic is_misprediction; logic [31:0] predicted_PC; logic [5:0] ROB_index; logic T_NT; logic [2:0] br_type; logic [1:0] dominant_index; logic [31:0] resolved_PC; }[15:0]
    FTQ;
  wire       dq =
    FTQ[front_index].valid & io_commit.valid
    & FTQ[front_index].ROB_index == io_commit.bits.ROB_index;
  wire       full = front_pointer[4] != back_pointer[4] & front_index == back_index;
  always @(posedge clock) begin
    if (reset) begin
      front_pointer <= 5'h0;
      back_pointer <= 5'h0;
      FTQ <=
        '{'{valid: 1'h0,
            fetch_PC: 32'h0,
            is_misprediction: 1'h0,
            predicted_PC: 32'h0,
            ROB_index: 6'h0,
            T_NT: 1'h0,
            br_type: 3'h0,
            dominant_index: 2'h0,
            resolved_PC: 32'h0},
          '{valid: 1'h0,
            fetch_PC: 32'h0,
            is_misprediction: 1'h0,
            predicted_PC: 32'h0,
            ROB_index: 6'h0,
            T_NT: 1'h0,
            br_type: 3'h0,
            dominant_index: 2'h0,
            resolved_PC: 32'h0},
          '{valid: 1'h0,
            fetch_PC: 32'h0,
            is_misprediction: 1'h0,
            predicted_PC: 32'h0,
            ROB_index: 6'h0,
            T_NT: 1'h0,
            br_type: 3'h0,
            dominant_index: 2'h0,
            resolved_PC: 32'h0},
          '{valid: 1'h0,
            fetch_PC: 32'h0,
            is_misprediction: 1'h0,
            predicted_PC: 32'h0,
            ROB_index: 6'h0,
            T_NT: 1'h0,
            br_type: 3'h0,
            dominant_index: 2'h0,
            resolved_PC: 32'h0},
          '{valid: 1'h0,
            fetch_PC: 32'h0,
            is_misprediction: 1'h0,
            predicted_PC: 32'h0,
            ROB_index: 6'h0,
            T_NT: 1'h0,
            br_type: 3'h0,
            dominant_index: 2'h0,
            resolved_PC: 32'h0},
          '{valid: 1'h0,
            fetch_PC: 32'h0,
            is_misprediction: 1'h0,
            predicted_PC: 32'h0,
            ROB_index: 6'h0,
            T_NT: 1'h0,
            br_type: 3'h0,
            dominant_index: 2'h0,
            resolved_PC: 32'h0},
          '{valid: 1'h0,
            fetch_PC: 32'h0,
            is_misprediction: 1'h0,
            predicted_PC: 32'h0,
            ROB_index: 6'h0,
            T_NT: 1'h0,
            br_type: 3'h0,
            dominant_index: 2'h0,
            resolved_PC: 32'h0},
          '{valid: 1'h0,
            fetch_PC: 32'h0,
            is_misprediction: 1'h0,
            predicted_PC: 32'h0,
            ROB_index: 6'h0,
            T_NT: 1'h0,
            br_type: 3'h0,
            dominant_index: 2'h0,
            resolved_PC: 32'h0},
          '{valid: 1'h0,
            fetch_PC: 32'h0,
            is_misprediction: 1'h0,
            predicted_PC: 32'h0,
            ROB_index: 6'h0,
            T_NT: 1'h0,
            br_type: 3'h0,
            dominant_index: 2'h0,
            resolved_PC: 32'h0},
          '{valid: 1'h0,
            fetch_PC: 32'h0,
            is_misprediction: 1'h0,
            predicted_PC: 32'h0,
            ROB_index: 6'h0,
            T_NT: 1'h0,
            br_type: 3'h0,
            dominant_index: 2'h0,
            resolved_PC: 32'h0},
          '{valid: 1'h0,
            fetch_PC: 32'h0,
            is_misprediction: 1'h0,
            predicted_PC: 32'h0,
            ROB_index: 6'h0,
            T_NT: 1'h0,
            br_type: 3'h0,
            dominant_index: 2'h0,
            resolved_PC: 32'h0},
          '{valid: 1'h0,
            fetch_PC: 32'h0,
            is_misprediction: 1'h0,
            predicted_PC: 32'h0,
            ROB_index: 6'h0,
            T_NT: 1'h0,
            br_type: 3'h0,
            dominant_index: 2'h0,
            resolved_PC: 32'h0},
          '{valid: 1'h0,
            fetch_PC: 32'h0,
            is_misprediction: 1'h0,
            predicted_PC: 32'h0,
            ROB_index: 6'h0,
            T_NT: 1'h0,
            br_type: 3'h0,
            dominant_index: 2'h0,
            resolved_PC: 32'h0},
          '{valid: 1'h0,
            fetch_PC: 32'h0,
            is_misprediction: 1'h0,
            predicted_PC: 32'h0,
            ROB_index: 6'h0,
            T_NT: 1'h0,
            br_type: 3'h0,
            dominant_index: 2'h0,
            resolved_PC: 32'h0},
          '{valid: 1'h0,
            fetch_PC: 32'h0,
            is_misprediction: 1'h0,
            predicted_PC: 32'h0,
            ROB_index: 6'h0,
            T_NT: 1'h0,
            br_type: 3'h0,
            dominant_index: 2'h0,
            resolved_PC: 32'h0},
          '{valid: 1'h0,
            fetch_PC: 32'h0,
            is_misprediction: 1'h0,
            predicted_PC: 32'h0,
            ROB_index: 6'h0,
            T_NT: 1'h0,
            br_type: 3'h0,
            dominant_index: 2'h0,
            resolved_PC: 32'h0}};
    end
    else begin
      automatic logic _GEN;
      automatic logic _GEN_0 = back_index == 4'h0;
      automatic logic _GEN_1;
      automatic logic _GEN_2 = back_index == 4'h1;
      automatic logic _GEN_3;
      automatic logic _GEN_4 = back_index == 4'h2;
      automatic logic _GEN_5;
      automatic logic _GEN_6 = back_index == 4'h3;
      automatic logic _GEN_7;
      automatic logic _GEN_8 = back_index == 4'h4;
      automatic logic _GEN_9;
      automatic logic _GEN_10 = back_index == 4'h5;
      automatic logic _GEN_11;
      automatic logic _GEN_12 = back_index == 4'h6;
      automatic logic _GEN_13;
      automatic logic _GEN_14 = back_index == 4'h7;
      automatic logic _GEN_15;
      automatic logic _GEN_16 = back_index == 4'h8;
      automatic logic _GEN_17;
      automatic logic _GEN_18 = back_index == 4'h9;
      automatic logic _GEN_19;
      automatic logic _GEN_20 = back_index == 4'hA;
      automatic logic _GEN_21;
      automatic logic _GEN_22 = back_index == 4'hB;
      automatic logic _GEN_23;
      automatic logic _GEN_24 = back_index == 4'hC;
      automatic logic _GEN_25;
      automatic logic _GEN_26 = back_index == 4'hD;
      automatic logic _GEN_27;
      automatic logic _GEN_28 = back_index == 4'hE;
      automatic logic _GEN_29;
      automatic logic _GEN_30;
      automatic logic _GEN_31;
      automatic logic _GEN_32;
      automatic logic _GEN_33;
      automatic logic _GEN_34;
      automatic logic _GEN_35;
      automatic logic _GEN_36;
      automatic logic _GEN_37;
      automatic logic _GEN_38;
      automatic logic _GEN_39;
      automatic logic _GEN_40;
      automatic logic _GEN_41;
      automatic logic _GEN_42;
      automatic logic _GEN_43;
      automatic logic _GEN_44;
      automatic logic _GEN_45;
      automatic logic _GEN_46;
      automatic logic _GEN_47;
      automatic logic _GEN_48 = io_flush | dq & front_index == 4'h0;
      automatic logic _GEN_49 = io_flush | dq & front_index == 4'h1;
      automatic logic _GEN_50 = io_flush | dq & front_index == 4'h2;
      automatic logic _GEN_51 = io_flush | dq & front_index == 4'h3;
      automatic logic _GEN_52 = io_flush | dq & front_index == 4'h4;
      automatic logic _GEN_53 = io_flush | dq & front_index == 4'h5;
      automatic logic _GEN_54 = io_flush | dq & front_index == 4'h6;
      automatic logic _GEN_55 = io_flush | dq & front_index == 4'h7;
      automatic logic _GEN_56 = io_flush | dq & front_index == 4'h8;
      automatic logic _GEN_57 = io_flush | dq & front_index == 4'h9;
      automatic logic _GEN_58 = io_flush | dq & front_index == 4'hA;
      automatic logic _GEN_59 = io_flush | dq & front_index == 4'hB;
      automatic logic _GEN_60 = io_flush | dq & front_index == 4'hC;
      automatic logic _GEN_61 = io_flush | dq & front_index == 4'hD;
      automatic logic _GEN_62 = io_flush | dq & front_index == 4'hE;
      automatic logic _GEN_63 = io_flush | dq & (&front_index);
      _GEN = io_predictions_valid & ~full;
      _GEN_1 = _GEN & _GEN_0;
      _GEN_3 = _GEN & _GEN_2;
      _GEN_5 = _GEN & _GEN_4;
      _GEN_7 = _GEN & _GEN_6;
      _GEN_9 = _GEN & _GEN_8;
      _GEN_11 = _GEN & _GEN_10;
      _GEN_13 = _GEN & _GEN_12;
      _GEN_15 = _GEN & _GEN_14;
      _GEN_17 = _GEN & _GEN_16;
      _GEN_19 = _GEN & _GEN_18;
      _GEN_21 = _GEN & _GEN_20;
      _GEN_23 = _GEN & _GEN_22;
      _GEN_25 = _GEN & _GEN_24;
      _GEN_27 = _GEN & _GEN_26;
      _GEN_29 = _GEN & _GEN_28;
      _GEN_30 = _GEN & (&back_index);
      _GEN_31 =
        io_FU_outputs[2'h0].valid & io_FU_outputs[2'h0].bits.branch_valid
        & io_FU_outputs[2'h0].bits.fetch_packet_index <= FTQ[io_FU_outputs[2'h0].bits.FTQ_index].dominant_index
        & io_FU_outputs[2'h0].bits.branch_taken;
      _GEN_32 = _GEN_31 & io_FU_outputs[2'h0].bits.FTQ_index == 4'h0;
      _GEN_33 = _GEN_31 & io_FU_outputs[2'h0].bits.FTQ_index == 4'h1;
      _GEN_34 = _GEN_31 & io_FU_outputs[2'h0].bits.FTQ_index == 4'h2;
      _GEN_35 = _GEN_31 & io_FU_outputs[2'h0].bits.FTQ_index == 4'h3;
      _GEN_36 = _GEN_31 & io_FU_outputs[2'h0].bits.FTQ_index == 4'h4;
      _GEN_37 = _GEN_31 & io_FU_outputs[2'h0].bits.FTQ_index == 4'h5;
      _GEN_38 = _GEN_31 & io_FU_outputs[2'h0].bits.FTQ_index == 4'h6;
      _GEN_39 = _GEN_31 & io_FU_outputs[2'h0].bits.FTQ_index == 4'h7;
      _GEN_40 = _GEN_31 & io_FU_outputs[2'h0].bits.FTQ_index == 4'h8;
      _GEN_41 = _GEN_31 & io_FU_outputs[2'h0].bits.FTQ_index == 4'h9;
      _GEN_42 = _GEN_31 & io_FU_outputs[2'h0].bits.FTQ_index == 4'hA;
      _GEN_43 = _GEN_31 & io_FU_outputs[2'h0].bits.FTQ_index == 4'hB;
      _GEN_44 = _GEN_31 & io_FU_outputs[2'h0].bits.FTQ_index == 4'hC;
      _GEN_45 = _GEN_31 & io_FU_outputs[2'h0].bits.FTQ_index == 4'hD;
      _GEN_46 = _GEN_31 & io_FU_outputs[2'h0].bits.FTQ_index == 4'hE;
      _GEN_47 = _GEN_31 & (&io_FU_outputs[2'h0].bits.FTQ_index);
      if (io_flush) begin
        front_pointer <= 5'h0;
        back_pointer <= 5'h0;
      end
      else begin
        if (dq)
          front_pointer <= front_pointer + 5'h1;
        if (_GEN)
          back_pointer <= back_pointer + 5'h1;
      end
      FTQ[4'h0] <=
        '{valid:
            (~_GEN_48
             & (_GEN
                  ? _GEN_0 | (_GEN_0 ? io_predictions_bits.valid : FTQ[4'h0].valid)
                  : FTQ[4'h0].valid)),
          fetch_PC:
            (_GEN_48
               ? 32'h0
               : _GEN_1 ? io_predictions_bits.fetch_PC : FTQ[4'h0].fetch_PC),
          is_misprediction:
            (~_GEN_48
             & (_GEN_1
                  ? io_predictions_bits.is_misprediction
                  : FTQ[4'h0].is_misprediction)),
          predicted_PC:
            (_GEN_48
               ? 32'h0
               : _GEN_1 ? io_predictions_bits.predicted_PC : FTQ[4'h0].predicted_PC),
          ROB_index:
            (_GEN_48 ? 6'h0 : _GEN & _GEN_0 ? io_ROB_index : FTQ[4'h0].ROB_index),
          T_NT:
            (~_GEN_48 & (_GEN_32 | (_GEN_1 ? io_predictions_bits.T_NT : FTQ[4'h0].T_NT))),
          br_type:
            (_GEN_48 ? 3'h0 : _GEN_1 ? io_predictions_bits.br_type : FTQ[4'h0].br_type),
          dominant_index:
            (_GEN_48
               ? 2'h0
               : _GEN_32
                   ? io_FU_outputs[2'h0].bits.fetch_packet_index
                   : _GEN_1
                       ? io_predictions_bits.dominant_index
                       : FTQ[4'h0].dominant_index),
          resolved_PC:
            (_GEN_48
               ? 32'h0
               : _GEN_32
                   ? io_FU_outputs[2'h0].bits.target_address
                   : _GEN_1 ? io_predictions_bits.resolved_PC : FTQ[4'h0].resolved_PC)};
      FTQ[4'h1] <=
        '{valid:
            (~_GEN_49
             & (_GEN
                  ? _GEN_2 | (_GEN_2 ? io_predictions_bits.valid : FTQ[4'h1].valid)
                  : FTQ[4'h1].valid)),
          fetch_PC:
            (_GEN_49
               ? 32'h0
               : _GEN_3 ? io_predictions_bits.fetch_PC : FTQ[4'h1].fetch_PC),
          is_misprediction:
            (~_GEN_49
             & (_GEN_3
                  ? io_predictions_bits.is_misprediction
                  : FTQ[4'h1].is_misprediction)),
          predicted_PC:
            (_GEN_49
               ? 32'h0
               : _GEN_3 ? io_predictions_bits.predicted_PC : FTQ[4'h1].predicted_PC),
          ROB_index:
            (_GEN_49 ? 6'h0 : _GEN & _GEN_2 ? io_ROB_index : FTQ[4'h1].ROB_index),
          T_NT:
            (~_GEN_49 & (_GEN_33 | (_GEN_3 ? io_predictions_bits.T_NT : FTQ[4'h1].T_NT))),
          br_type:
            (_GEN_49 ? 3'h0 : _GEN_3 ? io_predictions_bits.br_type : FTQ[4'h1].br_type),
          dominant_index:
            (_GEN_49
               ? 2'h0
               : _GEN_33
                   ? io_FU_outputs[2'h0].bits.fetch_packet_index
                   : _GEN_3
                       ? io_predictions_bits.dominant_index
                       : FTQ[4'h1].dominant_index),
          resolved_PC:
            (_GEN_49
               ? 32'h0
               : _GEN_33
                   ? io_FU_outputs[2'h0].bits.target_address
                   : _GEN_3 ? io_predictions_bits.resolved_PC : FTQ[4'h1].resolved_PC)};
      FTQ[4'h2] <=
        '{valid:
            (~_GEN_50
             & (_GEN
                  ? _GEN_4 | (_GEN_4 ? io_predictions_bits.valid : FTQ[4'h2].valid)
                  : FTQ[4'h2].valid)),
          fetch_PC:
            (_GEN_50
               ? 32'h0
               : _GEN_5 ? io_predictions_bits.fetch_PC : FTQ[4'h2].fetch_PC),
          is_misprediction:
            (~_GEN_50
             & (_GEN_5
                  ? io_predictions_bits.is_misprediction
                  : FTQ[4'h2].is_misprediction)),
          predicted_PC:
            (_GEN_50
               ? 32'h0
               : _GEN_5 ? io_predictions_bits.predicted_PC : FTQ[4'h2].predicted_PC),
          ROB_index:
            (_GEN_50 ? 6'h0 : _GEN & _GEN_4 ? io_ROB_index : FTQ[4'h2].ROB_index),
          T_NT:
            (~_GEN_50 & (_GEN_34 | (_GEN_5 ? io_predictions_bits.T_NT : FTQ[4'h2].T_NT))),
          br_type:
            (_GEN_50 ? 3'h0 : _GEN_5 ? io_predictions_bits.br_type : FTQ[4'h2].br_type),
          dominant_index:
            (_GEN_50
               ? 2'h0
               : _GEN_34
                   ? io_FU_outputs[2'h0].bits.fetch_packet_index
                   : _GEN_5
                       ? io_predictions_bits.dominant_index
                       : FTQ[4'h2].dominant_index),
          resolved_PC:
            (_GEN_50
               ? 32'h0
               : _GEN_34
                   ? io_FU_outputs[2'h0].bits.target_address
                   : _GEN_5 ? io_predictions_bits.resolved_PC : FTQ[4'h2].resolved_PC)};
      FTQ[4'h3] <=
        '{valid:
            (~_GEN_51
             & (_GEN
                  ? _GEN_6 | (_GEN_6 ? io_predictions_bits.valid : FTQ[4'h3].valid)
                  : FTQ[4'h3].valid)),
          fetch_PC:
            (_GEN_51
               ? 32'h0
               : _GEN_7 ? io_predictions_bits.fetch_PC : FTQ[4'h3].fetch_PC),
          is_misprediction:
            (~_GEN_51
             & (_GEN_7
                  ? io_predictions_bits.is_misprediction
                  : FTQ[4'h3].is_misprediction)),
          predicted_PC:
            (_GEN_51
               ? 32'h0
               : _GEN_7 ? io_predictions_bits.predicted_PC : FTQ[4'h3].predicted_PC),
          ROB_index:
            (_GEN_51 ? 6'h0 : _GEN & _GEN_6 ? io_ROB_index : FTQ[4'h3].ROB_index),
          T_NT:
            (~_GEN_51 & (_GEN_35 | (_GEN_7 ? io_predictions_bits.T_NT : FTQ[4'h3].T_NT))),
          br_type:
            (_GEN_51 ? 3'h0 : _GEN_7 ? io_predictions_bits.br_type : FTQ[4'h3].br_type),
          dominant_index:
            (_GEN_51
               ? 2'h0
               : _GEN_35
                   ? io_FU_outputs[2'h0].bits.fetch_packet_index
                   : _GEN_7
                       ? io_predictions_bits.dominant_index
                       : FTQ[4'h3].dominant_index),
          resolved_PC:
            (_GEN_51
               ? 32'h0
               : _GEN_35
                   ? io_FU_outputs[2'h0].bits.target_address
                   : _GEN_7 ? io_predictions_bits.resolved_PC : FTQ[4'h3].resolved_PC)};
      FTQ[4'h4] <=
        '{valid:
            (~_GEN_52
             & (_GEN
                  ? _GEN_8 | (_GEN_8 ? io_predictions_bits.valid : FTQ[4'h4].valid)
                  : FTQ[4'h4].valid)),
          fetch_PC:
            (_GEN_52
               ? 32'h0
               : _GEN_9 ? io_predictions_bits.fetch_PC : FTQ[4'h4].fetch_PC),
          is_misprediction:
            (~_GEN_52
             & (_GEN_9
                  ? io_predictions_bits.is_misprediction
                  : FTQ[4'h4].is_misprediction)),
          predicted_PC:
            (_GEN_52
               ? 32'h0
               : _GEN_9 ? io_predictions_bits.predicted_PC : FTQ[4'h4].predicted_PC),
          ROB_index:
            (_GEN_52 ? 6'h0 : _GEN & _GEN_8 ? io_ROB_index : FTQ[4'h4].ROB_index),
          T_NT:
            (~_GEN_52 & (_GEN_36 | (_GEN_9 ? io_predictions_bits.T_NT : FTQ[4'h4].T_NT))),
          br_type:
            (_GEN_52 ? 3'h0 : _GEN_9 ? io_predictions_bits.br_type : FTQ[4'h4].br_type),
          dominant_index:
            (_GEN_52
               ? 2'h0
               : _GEN_36
                   ? io_FU_outputs[2'h0].bits.fetch_packet_index
                   : _GEN_9
                       ? io_predictions_bits.dominant_index
                       : FTQ[4'h4].dominant_index),
          resolved_PC:
            (_GEN_52
               ? 32'h0
               : _GEN_36
                   ? io_FU_outputs[2'h0].bits.target_address
                   : _GEN_9 ? io_predictions_bits.resolved_PC : FTQ[4'h4].resolved_PC)};
      FTQ[4'h5] <=
        '{valid:
            (~_GEN_53
             & (_GEN
                  ? _GEN_10 | (_GEN_10 ? io_predictions_bits.valid : FTQ[4'h5].valid)
                  : FTQ[4'h5].valid)),
          fetch_PC:
            (_GEN_53
               ? 32'h0
               : _GEN_11 ? io_predictions_bits.fetch_PC : FTQ[4'h5].fetch_PC),
          is_misprediction:
            (~_GEN_53
             & (_GEN_11
                  ? io_predictions_bits.is_misprediction
                  : FTQ[4'h5].is_misprediction)),
          predicted_PC:
            (_GEN_53
               ? 32'h0
               : _GEN_11 ? io_predictions_bits.predicted_PC : FTQ[4'h5].predicted_PC),
          ROB_index:
            (_GEN_53 ? 6'h0 : _GEN & _GEN_10 ? io_ROB_index : FTQ[4'h5].ROB_index),
          T_NT:
            (~_GEN_53
             & (_GEN_37 | (_GEN_11 ? io_predictions_bits.T_NT : FTQ[4'h5].T_NT))),
          br_type:
            (_GEN_53 ? 3'h0 : _GEN_11 ? io_predictions_bits.br_type : FTQ[4'h5].br_type),
          dominant_index:
            (_GEN_53
               ? 2'h0
               : _GEN_37
                   ? io_FU_outputs[2'h0].bits.fetch_packet_index
                   : _GEN_11
                       ? io_predictions_bits.dominant_index
                       : FTQ[4'h5].dominant_index),
          resolved_PC:
            (_GEN_53
               ? 32'h0
               : _GEN_37
                   ? io_FU_outputs[2'h0].bits.target_address
                   : _GEN_11 ? io_predictions_bits.resolved_PC : FTQ[4'h5].resolved_PC)};
      FTQ[4'h6] <=
        '{valid:
            (~_GEN_54
             & (_GEN
                  ? _GEN_12 | (_GEN_12 ? io_predictions_bits.valid : FTQ[4'h6].valid)
                  : FTQ[4'h6].valid)),
          fetch_PC:
            (_GEN_54
               ? 32'h0
               : _GEN_13 ? io_predictions_bits.fetch_PC : FTQ[4'h6].fetch_PC),
          is_misprediction:
            (~_GEN_54
             & (_GEN_13
                  ? io_predictions_bits.is_misprediction
                  : FTQ[4'h6].is_misprediction)),
          predicted_PC:
            (_GEN_54
               ? 32'h0
               : _GEN_13 ? io_predictions_bits.predicted_PC : FTQ[4'h6].predicted_PC),
          ROB_index:
            (_GEN_54 ? 6'h0 : _GEN & _GEN_12 ? io_ROB_index : FTQ[4'h6].ROB_index),
          T_NT:
            (~_GEN_54
             & (_GEN_38 | (_GEN_13 ? io_predictions_bits.T_NT : FTQ[4'h6].T_NT))),
          br_type:
            (_GEN_54 ? 3'h0 : _GEN_13 ? io_predictions_bits.br_type : FTQ[4'h6].br_type),
          dominant_index:
            (_GEN_54
               ? 2'h0
               : _GEN_38
                   ? io_FU_outputs[2'h0].bits.fetch_packet_index
                   : _GEN_13
                       ? io_predictions_bits.dominant_index
                       : FTQ[4'h6].dominant_index),
          resolved_PC:
            (_GEN_54
               ? 32'h0
               : _GEN_38
                   ? io_FU_outputs[2'h0].bits.target_address
                   : _GEN_13 ? io_predictions_bits.resolved_PC : FTQ[4'h6].resolved_PC)};
      FTQ[4'h7] <=
        '{valid:
            (~_GEN_55
             & (_GEN
                  ? _GEN_14 | (_GEN_14 ? io_predictions_bits.valid : FTQ[4'h7].valid)
                  : FTQ[4'h7].valid)),
          fetch_PC:
            (_GEN_55
               ? 32'h0
               : _GEN_15 ? io_predictions_bits.fetch_PC : FTQ[4'h7].fetch_PC),
          is_misprediction:
            (~_GEN_55
             & (_GEN_15
                  ? io_predictions_bits.is_misprediction
                  : FTQ[4'h7].is_misprediction)),
          predicted_PC:
            (_GEN_55
               ? 32'h0
               : _GEN_15 ? io_predictions_bits.predicted_PC : FTQ[4'h7].predicted_PC),
          ROB_index:
            (_GEN_55 ? 6'h0 : _GEN & _GEN_14 ? io_ROB_index : FTQ[4'h7].ROB_index),
          T_NT:
            (~_GEN_55
             & (_GEN_39 | (_GEN_15 ? io_predictions_bits.T_NT : FTQ[4'h7].T_NT))),
          br_type:
            (_GEN_55 ? 3'h0 : _GEN_15 ? io_predictions_bits.br_type : FTQ[4'h7].br_type),
          dominant_index:
            (_GEN_55
               ? 2'h0
               : _GEN_39
                   ? io_FU_outputs[2'h0].bits.fetch_packet_index
                   : _GEN_15
                       ? io_predictions_bits.dominant_index
                       : FTQ[4'h7].dominant_index),
          resolved_PC:
            (_GEN_55
               ? 32'h0
               : _GEN_39
                   ? io_FU_outputs[2'h0].bits.target_address
                   : _GEN_15 ? io_predictions_bits.resolved_PC : FTQ[4'h7].resolved_PC)};
      FTQ[4'h8] <=
        '{valid:
            (~_GEN_56
             & (_GEN
                  ? _GEN_16 | (_GEN_16 ? io_predictions_bits.valid : FTQ[4'h8].valid)
                  : FTQ[4'h8].valid)),
          fetch_PC:
            (_GEN_56
               ? 32'h0
               : _GEN_17 ? io_predictions_bits.fetch_PC : FTQ[4'h8].fetch_PC),
          is_misprediction:
            (~_GEN_56
             & (_GEN_17
                  ? io_predictions_bits.is_misprediction
                  : FTQ[4'h8].is_misprediction)),
          predicted_PC:
            (_GEN_56
               ? 32'h0
               : _GEN_17 ? io_predictions_bits.predicted_PC : FTQ[4'h8].predicted_PC),
          ROB_index:
            (_GEN_56 ? 6'h0 : _GEN & _GEN_16 ? io_ROB_index : FTQ[4'h8].ROB_index),
          T_NT:
            (~_GEN_56
             & (_GEN_40 | (_GEN_17 ? io_predictions_bits.T_NT : FTQ[4'h8].T_NT))),
          br_type:
            (_GEN_56 ? 3'h0 : _GEN_17 ? io_predictions_bits.br_type : FTQ[4'h8].br_type),
          dominant_index:
            (_GEN_56
               ? 2'h0
               : _GEN_40
                   ? io_FU_outputs[2'h0].bits.fetch_packet_index
                   : _GEN_17
                       ? io_predictions_bits.dominant_index
                       : FTQ[4'h8].dominant_index),
          resolved_PC:
            (_GEN_56
               ? 32'h0
               : _GEN_40
                   ? io_FU_outputs[2'h0].bits.target_address
                   : _GEN_17 ? io_predictions_bits.resolved_PC : FTQ[4'h8].resolved_PC)};
      FTQ[4'h9] <=
        '{valid:
            (~_GEN_57
             & (_GEN
                  ? _GEN_18 | (_GEN_18 ? io_predictions_bits.valid : FTQ[4'h9].valid)
                  : FTQ[4'h9].valid)),
          fetch_PC:
            (_GEN_57
               ? 32'h0
               : _GEN_19 ? io_predictions_bits.fetch_PC : FTQ[4'h9].fetch_PC),
          is_misprediction:
            (~_GEN_57
             & (_GEN_19
                  ? io_predictions_bits.is_misprediction
                  : FTQ[4'h9].is_misprediction)),
          predicted_PC:
            (_GEN_57
               ? 32'h0
               : _GEN_19 ? io_predictions_bits.predicted_PC : FTQ[4'h9].predicted_PC),
          ROB_index:
            (_GEN_57 ? 6'h0 : _GEN & _GEN_18 ? io_ROB_index : FTQ[4'h9].ROB_index),
          T_NT:
            (~_GEN_57
             & (_GEN_41 | (_GEN_19 ? io_predictions_bits.T_NT : FTQ[4'h9].T_NT))),
          br_type:
            (_GEN_57 ? 3'h0 : _GEN_19 ? io_predictions_bits.br_type : FTQ[4'h9].br_type),
          dominant_index:
            (_GEN_57
               ? 2'h0
               : _GEN_41
                   ? io_FU_outputs[2'h0].bits.fetch_packet_index
                   : _GEN_19
                       ? io_predictions_bits.dominant_index
                       : FTQ[4'h9].dominant_index),
          resolved_PC:
            (_GEN_57
               ? 32'h0
               : _GEN_41
                   ? io_FU_outputs[2'h0].bits.target_address
                   : _GEN_19 ? io_predictions_bits.resolved_PC : FTQ[4'h9].resolved_PC)};
      FTQ[4'hA] <=
        '{valid:
            (~_GEN_58
             & (_GEN
                  ? _GEN_20 | (_GEN_20 ? io_predictions_bits.valid : FTQ[4'hA].valid)
                  : FTQ[4'hA].valid)),
          fetch_PC:
            (_GEN_58
               ? 32'h0
               : _GEN_21 ? io_predictions_bits.fetch_PC : FTQ[4'hA].fetch_PC),
          is_misprediction:
            (~_GEN_58
             & (_GEN_21
                  ? io_predictions_bits.is_misprediction
                  : FTQ[4'hA].is_misprediction)),
          predicted_PC:
            (_GEN_58
               ? 32'h0
               : _GEN_21 ? io_predictions_bits.predicted_PC : FTQ[4'hA].predicted_PC),
          ROB_index:
            (_GEN_58 ? 6'h0 : _GEN & _GEN_20 ? io_ROB_index : FTQ[4'hA].ROB_index),
          T_NT:
            (~_GEN_58
             & (_GEN_42 | (_GEN_21 ? io_predictions_bits.T_NT : FTQ[4'hA].T_NT))),
          br_type:
            (_GEN_58 ? 3'h0 : _GEN_21 ? io_predictions_bits.br_type : FTQ[4'hA].br_type),
          dominant_index:
            (_GEN_58
               ? 2'h0
               : _GEN_42
                   ? io_FU_outputs[2'h0].bits.fetch_packet_index
                   : _GEN_21
                       ? io_predictions_bits.dominant_index
                       : FTQ[4'hA].dominant_index),
          resolved_PC:
            (_GEN_58
               ? 32'h0
               : _GEN_42
                   ? io_FU_outputs[2'h0].bits.target_address
                   : _GEN_21 ? io_predictions_bits.resolved_PC : FTQ[4'hA].resolved_PC)};
      FTQ[4'hB] <=
        '{valid:
            (~_GEN_59
             & (_GEN
                  ? _GEN_22 | (_GEN_22 ? io_predictions_bits.valid : FTQ[4'hB].valid)
                  : FTQ[4'hB].valid)),
          fetch_PC:
            (_GEN_59
               ? 32'h0
               : _GEN_23 ? io_predictions_bits.fetch_PC : FTQ[4'hB].fetch_PC),
          is_misprediction:
            (~_GEN_59
             & (_GEN_23
                  ? io_predictions_bits.is_misprediction
                  : FTQ[4'hB].is_misprediction)),
          predicted_PC:
            (_GEN_59
               ? 32'h0
               : _GEN_23 ? io_predictions_bits.predicted_PC : FTQ[4'hB].predicted_PC),
          ROB_index:
            (_GEN_59 ? 6'h0 : _GEN & _GEN_22 ? io_ROB_index : FTQ[4'hB].ROB_index),
          T_NT:
            (~_GEN_59
             & (_GEN_43 | (_GEN_23 ? io_predictions_bits.T_NT : FTQ[4'hB].T_NT))),
          br_type:
            (_GEN_59 ? 3'h0 : _GEN_23 ? io_predictions_bits.br_type : FTQ[4'hB].br_type),
          dominant_index:
            (_GEN_59
               ? 2'h0
               : _GEN_43
                   ? io_FU_outputs[2'h0].bits.fetch_packet_index
                   : _GEN_23
                       ? io_predictions_bits.dominant_index
                       : FTQ[4'hB].dominant_index),
          resolved_PC:
            (_GEN_59
               ? 32'h0
               : _GEN_43
                   ? io_FU_outputs[2'h0].bits.target_address
                   : _GEN_23 ? io_predictions_bits.resolved_PC : FTQ[4'hB].resolved_PC)};
      FTQ[4'hC] <=
        '{valid:
            (~_GEN_60
             & (_GEN
                  ? _GEN_24 | (_GEN_24 ? io_predictions_bits.valid : FTQ[4'hC].valid)
                  : FTQ[4'hC].valid)),
          fetch_PC:
            (_GEN_60
               ? 32'h0
               : _GEN_25 ? io_predictions_bits.fetch_PC : FTQ[4'hC].fetch_PC),
          is_misprediction:
            (~_GEN_60
             & (_GEN_25
                  ? io_predictions_bits.is_misprediction
                  : FTQ[4'hC].is_misprediction)),
          predicted_PC:
            (_GEN_60
               ? 32'h0
               : _GEN_25 ? io_predictions_bits.predicted_PC : FTQ[4'hC].predicted_PC),
          ROB_index:
            (_GEN_60 ? 6'h0 : _GEN & _GEN_24 ? io_ROB_index : FTQ[4'hC].ROB_index),
          T_NT:
            (~_GEN_60
             & (_GEN_44 | (_GEN_25 ? io_predictions_bits.T_NT : FTQ[4'hC].T_NT))),
          br_type:
            (_GEN_60 ? 3'h0 : _GEN_25 ? io_predictions_bits.br_type : FTQ[4'hC].br_type),
          dominant_index:
            (_GEN_60
               ? 2'h0
               : _GEN_44
                   ? io_FU_outputs[2'h0].bits.fetch_packet_index
                   : _GEN_25
                       ? io_predictions_bits.dominant_index
                       : FTQ[4'hC].dominant_index),
          resolved_PC:
            (_GEN_60
               ? 32'h0
               : _GEN_44
                   ? io_FU_outputs[2'h0].bits.target_address
                   : _GEN_25 ? io_predictions_bits.resolved_PC : FTQ[4'hC].resolved_PC)};
      FTQ[4'hD] <=
        '{valid:
            (~_GEN_61
             & (_GEN
                  ? _GEN_26 | (_GEN_26 ? io_predictions_bits.valid : FTQ[4'hD].valid)
                  : FTQ[4'hD].valid)),
          fetch_PC:
            (_GEN_61
               ? 32'h0
               : _GEN_27 ? io_predictions_bits.fetch_PC : FTQ[4'hD].fetch_PC),
          is_misprediction:
            (~_GEN_61
             & (_GEN_27
                  ? io_predictions_bits.is_misprediction
                  : FTQ[4'hD].is_misprediction)),
          predicted_PC:
            (_GEN_61
               ? 32'h0
               : _GEN_27 ? io_predictions_bits.predicted_PC : FTQ[4'hD].predicted_PC),
          ROB_index:
            (_GEN_61 ? 6'h0 : _GEN & _GEN_26 ? io_ROB_index : FTQ[4'hD].ROB_index),
          T_NT:
            (~_GEN_61
             & (_GEN_45 | (_GEN_27 ? io_predictions_bits.T_NT : FTQ[4'hD].T_NT))),
          br_type:
            (_GEN_61 ? 3'h0 : _GEN_27 ? io_predictions_bits.br_type : FTQ[4'hD].br_type),
          dominant_index:
            (_GEN_61
               ? 2'h0
               : _GEN_45
                   ? io_FU_outputs[2'h0].bits.fetch_packet_index
                   : _GEN_27
                       ? io_predictions_bits.dominant_index
                       : FTQ[4'hD].dominant_index),
          resolved_PC:
            (_GEN_61
               ? 32'h0
               : _GEN_45
                   ? io_FU_outputs[2'h0].bits.target_address
                   : _GEN_27 ? io_predictions_bits.resolved_PC : FTQ[4'hD].resolved_PC)};
      FTQ[4'hE] <=
        '{valid:
            (~_GEN_62
             & (_GEN
                  ? _GEN_28 | (_GEN_28 ? io_predictions_bits.valid : FTQ[4'hE].valid)
                  : FTQ[4'hE].valid)),
          fetch_PC:
            (_GEN_62
               ? 32'h0
               : _GEN_29 ? io_predictions_bits.fetch_PC : FTQ[4'hE].fetch_PC),
          is_misprediction:
            (~_GEN_62
             & (_GEN_29
                  ? io_predictions_bits.is_misprediction
                  : FTQ[4'hE].is_misprediction)),
          predicted_PC:
            (_GEN_62
               ? 32'h0
               : _GEN_29 ? io_predictions_bits.predicted_PC : FTQ[4'hE].predicted_PC),
          ROB_index:
            (_GEN_62 ? 6'h0 : _GEN & _GEN_28 ? io_ROB_index : FTQ[4'hE].ROB_index),
          T_NT:
            (~_GEN_62
             & (_GEN_46 | (_GEN_29 ? io_predictions_bits.T_NT : FTQ[4'hE].T_NT))),
          br_type:
            (_GEN_62 ? 3'h0 : _GEN_29 ? io_predictions_bits.br_type : FTQ[4'hE].br_type),
          dominant_index:
            (_GEN_62
               ? 2'h0
               : _GEN_46
                   ? io_FU_outputs[2'h0].bits.fetch_packet_index
                   : _GEN_29
                       ? io_predictions_bits.dominant_index
                       : FTQ[4'hE].dominant_index),
          resolved_PC:
            (_GEN_62
               ? 32'h0
               : _GEN_46
                   ? io_FU_outputs[2'h0].bits.target_address
                   : _GEN_29 ? io_predictions_bits.resolved_PC : FTQ[4'hE].resolved_PC)};
      FTQ[4'hF] <=
        '{valid:
            (~_GEN_63
             & (_GEN
                  ? (&back_index)
                    | ((&back_index) ? io_predictions_bits.valid : FTQ[4'hF].valid)
                  : FTQ[4'hF].valid)),
          fetch_PC:
            (_GEN_63
               ? 32'h0
               : _GEN_30 ? io_predictions_bits.fetch_PC : FTQ[4'hF].fetch_PC),
          is_misprediction:
            (~_GEN_63
             & (_GEN_30
                  ? io_predictions_bits.is_misprediction
                  : FTQ[4'hF].is_misprediction)),
          predicted_PC:
            (_GEN_63
               ? 32'h0
               : _GEN_30 ? io_predictions_bits.predicted_PC : FTQ[4'hF].predicted_PC),
          ROB_index:
            (_GEN_63 ? 6'h0 : _GEN & (&back_index) ? io_ROB_index : FTQ[4'hF].ROB_index),
          T_NT:
            (~_GEN_63
             & (_GEN_47 | (_GEN_30 ? io_predictions_bits.T_NT : FTQ[4'hF].T_NT))),
          br_type:
            (_GEN_63 ? 3'h0 : _GEN_30 ? io_predictions_bits.br_type : FTQ[4'hF].br_type),
          dominant_index:
            (_GEN_63
               ? 2'h0
               : _GEN_47
                   ? io_FU_outputs[2'h0].bits.fetch_packet_index
                   : _GEN_30
                       ? io_predictions_bits.dominant_index
                       : FTQ[4'hF].dominant_index),
          resolved_PC:
            (_GEN_63
               ? 32'h0
               : _GEN_47
                   ? io_FU_outputs[2'h0].bits.target_address
                   : _GEN_30 ? io_predictions_bits.resolved_PC : FTQ[4'hF].resolved_PC)};
    end
  end // always @(posedge)
  assign io_predictions_ready = ~full;
  assign io_FTQ = FTQ[front_index];
  assign io_FTQ_index = back_index;
endmodule

