// Generated by CIRCT firtool-1.76.0

// Include register initializers in init blocks unless synthesis is set
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS


// Include rmemory initializers in init blocks unless synthesis is set
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for register randomization.

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_
module Queue16_load_request(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input        clock,	// src/main/scala/chisel3/util/Decoupled.scala:243:7
               reset,	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  output       io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [1:0] io_enq_bits_packet_index,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [5:0] io_enq_bits_ROB_index,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [6:0] io_enq_bits_RD,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_enq_bits_RD_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
               io_enq_bits_LB,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
               io_enq_bits_LH,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
               io_enq_bits_LW,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
               io_enq_bits_LBU,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
               io_enq_bits_LHU,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
               io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output       io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [1:0] io_deq_bits_packet_index,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [5:0] io_deq_bits_ROB_index,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [6:0] io_deq_bits_RD,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output       io_deq_bits_RD_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
               io_deq_bits_LB,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
               io_deq_bits_LH,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
               io_deq_bits_LW,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
               io_deq_bits_LBU,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
               io_deq_bits_LHU	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire [20:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:44
  reg  [3:0]  enq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  [3:0]  deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire        ptr_match = enq_ptr_value == deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire        empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire        full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire        do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  wire        do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
  always @(posedge clock) begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    if (reset) begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      enq_ptr_value <= 4'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      deq_ptr_value <= 4'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        enq_ptr_value <= enq_ptr_value + 4'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        deq_ptr_value <= deq_ptr_value + 4'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        enq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][3:0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        deq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][7:4];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][8];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_16x21 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:44
    .R0_addr (do_deq ? ((&deq_ptr_value) ? 4'h0 : deq_ptr_value + 4'h1) : deq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:51:35, :289:{27,42,84}, :290:33
    .R0_en   (1'h1),
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (enq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data
      ({io_enq_bits_LHU,
        io_enq_bits_LBU,
        io_enq_bits_LW,
        io_enq_bits_LH,
        io_enq_bits_LB,
        io_enq_bits_RD_valid,
        io_enq_bits_RD,
        io_enq_bits_ROB_index,
        io_enq_bits_packet_index})	// src/main/scala/chisel3/util/Decoupled.scala:256:44
  );	// src/main/scala/chisel3/util/Decoupled.scala:256:44
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
  assign io_deq_bits_packet_index = _ram_ext_R0_data[1:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:44
  assign io_deq_bits_ROB_index = _ram_ext_R0_data[7:2];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:44
  assign io_deq_bits_RD = _ram_ext_R0_data[14:8];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:44
  assign io_deq_bits_RD_valid = _ram_ext_R0_data[15];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:44
  assign io_deq_bits_LB = _ram_ext_R0_data[16];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:44
  assign io_deq_bits_LH = _ram_ext_R0_data[17];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:44
  assign io_deq_bits_LW = _ram_ext_R0_data[18];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:44
  assign io_deq_bits_LBU = _ram_ext_R0_data[19];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:44
  assign io_deq_bits_LHU = _ram_ext_R0_data[20];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:44
endmodule

