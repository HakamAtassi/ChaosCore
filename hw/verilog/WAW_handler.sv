// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for prints and assertions.

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module WAW_handler(
  input  [3:0]      io_decoder_RD_valid_bits,
  input  [3:0][4:0] io_decoder_RD_values,
  input  [3:0][6:0] io_free_list_RD_values,
  output [3:0]      io_RAT_wr_en,
  output [3:0][4:0] io_RAT_RD_values,
  output [3:0][6:0] io_FL_RD_values
);

  assign io_RAT_wr_en =
    {{io_decoder_RD_valid_bits[2'h3]},
     {io_decoder_RD_valid_bits[2'h2]
        & (io_decoder_RD_values[2'h2] != io_decoder_RD_values[2'h3]
           | ~io_decoder_RD_valid_bits[2'h3])},
     {io_decoder_RD_valid_bits[2'h1]
        & (io_decoder_RD_values[2'h1] != io_decoder_RD_values[2'h2]
           | ~io_decoder_RD_valid_bits[2'h2])
        & (io_decoder_RD_values[2'h1] != io_decoder_RD_values[2'h3]
           | ~io_decoder_RD_valid_bits[2'h3])},
     {io_decoder_RD_valid_bits[2'h0]
        & (io_decoder_RD_values[2'h0] != io_decoder_RD_values[2'h1]
           | ~io_decoder_RD_valid_bits[2'h1])
        & (io_decoder_RD_values[2'h0] != io_decoder_RD_values[2'h2]
           | ~io_decoder_RD_valid_bits[2'h2])
        & (io_decoder_RD_values[2'h0] != io_decoder_RD_values[2'h3]
           | ~io_decoder_RD_valid_bits[2'h3])}};
  assign io_RAT_RD_values = io_decoder_RD_values;
  assign io_FL_RD_values = io_free_list_RD_values;
endmodule

