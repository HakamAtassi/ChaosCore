// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module WAW_handler(
  input        io_decoder_RD_valid_bits_0,
               io_decoder_RD_valid_bits_1,
               io_decoder_RD_valid_bits_2,
               io_decoder_RD_valid_bits_3,
  input  [4:0] io_decoder_RD_values_0,
               io_decoder_RD_values_1,
               io_decoder_RD_values_2,
               io_decoder_RD_values_3,
  input  [6:0] io_free_list_RD_values_0,
               io_free_list_RD_values_1,
               io_free_list_RD_values_2,
               io_free_list_RD_values_3,
  output       io_RAT_wr_en_0,
               io_RAT_wr_en_1,
               io_RAT_wr_en_2,
               io_RAT_wr_en_3,
  output [4:0] io_RAT_RD_values_0,
               io_RAT_RD_values_1,
               io_RAT_RD_values_2,
               io_RAT_RD_values_3,
  output [6:0] io_FL_RD_values_0,
               io_FL_RD_values_1,
               io_FL_RD_values_2,
               io_FL_RD_values_3
);

  assign io_RAT_wr_en_0 =
    io_decoder_RD_valid_bits_0
    & (io_decoder_RD_values_0 != io_decoder_RD_values_1 | ~io_decoder_RD_valid_bits_1)
    & (io_decoder_RD_values_0 != io_decoder_RD_values_2 | ~io_decoder_RD_valid_bits_2)
    & (io_decoder_RD_values_0 != io_decoder_RD_values_3 | ~io_decoder_RD_valid_bits_3);
  assign io_RAT_wr_en_1 =
    io_decoder_RD_valid_bits_1
    & (io_decoder_RD_values_1 != io_decoder_RD_values_2 | ~io_decoder_RD_valid_bits_2)
    & (io_decoder_RD_values_1 != io_decoder_RD_values_3 | ~io_decoder_RD_valid_bits_3);
  assign io_RAT_wr_en_2 =
    io_decoder_RD_valid_bits_2
    & (io_decoder_RD_values_2 != io_decoder_RD_values_3 | ~io_decoder_RD_valid_bits_3);
  assign io_RAT_wr_en_3 = io_decoder_RD_valid_bits_3;
  assign io_RAT_RD_values_0 = io_decoder_RD_values_0;
  assign io_RAT_RD_values_1 = io_decoder_RD_values_1;
  assign io_RAT_RD_values_2 = io_decoder_RD_values_2;
  assign io_RAT_RD_values_3 = io_decoder_RD_values_3;
  assign io_FL_RD_values_0 = io_free_list_RD_values_0;
  assign io_FL_RD_values_1 = io_free_list_RD_values_1;
  assign io_FL_RD_values_2 = io_free_list_RD_values_2;
  assign io_FL_RD_values_3 = io_free_list_RD_values_3;
endmodule

