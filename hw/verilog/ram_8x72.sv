// Generated by CIRCT firtool-1.62.0
// VCS coverage exclude_file
module ram_8x72(
  input  [2:0]  R0_addr,
  input         R0_en,
                R0_clk,
  output [71:0] R0_data,
  input  [2:0]  W0_addr,
  input         W0_en,
                W0_clk,
  input  [71:0] W0_data,
  input  [35:0] W0_mask
);

  reg [71:0] Memory[0:7];
  always @(posedge W0_clk) begin
    if (W0_en & W0_mask[0])
      Memory[W0_addr][32'h0 +: 2] <= W0_data[1:0];
    if (W0_en & W0_mask[1])
      Memory[W0_addr][32'h2 +: 2] <= W0_data[3:2];
    if (W0_en & W0_mask[2])
      Memory[W0_addr][32'h4 +: 2] <= W0_data[5:4];
    if (W0_en & W0_mask[3])
      Memory[W0_addr][32'h6 +: 2] <= W0_data[7:6];
    if (W0_en & W0_mask[4])
      Memory[W0_addr][32'h8 +: 2] <= W0_data[9:8];
    if (W0_en & W0_mask[5])
      Memory[W0_addr][32'hA +: 2] <= W0_data[11:10];
    if (W0_en & W0_mask[6])
      Memory[W0_addr][32'hC +: 2] <= W0_data[13:12];
    if (W0_en & W0_mask[7])
      Memory[W0_addr][32'hE +: 2] <= W0_data[15:14];
    if (W0_en & W0_mask[8])
      Memory[W0_addr][32'h10 +: 2] <= W0_data[17:16];
    if (W0_en & W0_mask[9])
      Memory[W0_addr][32'h12 +: 2] <= W0_data[19:18];
    if (W0_en & W0_mask[10])
      Memory[W0_addr][32'h14 +: 2] <= W0_data[21:20];
    if (W0_en & W0_mask[11])
      Memory[W0_addr][32'h16 +: 2] <= W0_data[23:22];
    if (W0_en & W0_mask[12])
      Memory[W0_addr][32'h18 +: 2] <= W0_data[25:24];
    if (W0_en & W0_mask[13])
      Memory[W0_addr][32'h1A +: 2] <= W0_data[27:26];
    if (W0_en & W0_mask[14])
      Memory[W0_addr][32'h1C +: 2] <= W0_data[29:28];
    if (W0_en & W0_mask[15])
      Memory[W0_addr][32'h1E +: 2] <= W0_data[31:30];
    if (W0_en & W0_mask[16])
      Memory[W0_addr][32'h20 +: 2] <= W0_data[33:32];
    if (W0_en & W0_mask[17])
      Memory[W0_addr][32'h22 +: 2] <= W0_data[35:34];
    if (W0_en & W0_mask[18])
      Memory[W0_addr][32'h24 +: 2] <= W0_data[37:36];
    if (W0_en & W0_mask[19])
      Memory[W0_addr][32'h26 +: 2] <= W0_data[39:38];
    if (W0_en & W0_mask[20])
      Memory[W0_addr][32'h28 +: 2] <= W0_data[41:40];
    if (W0_en & W0_mask[21])
      Memory[W0_addr][32'h2A +: 2] <= W0_data[43:42];
    if (W0_en & W0_mask[22])
      Memory[W0_addr][32'h2C +: 2] <= W0_data[45:44];
    if (W0_en & W0_mask[23])
      Memory[W0_addr][32'h2E +: 2] <= W0_data[47:46];
    if (W0_en & W0_mask[24])
      Memory[W0_addr][32'h30 +: 2] <= W0_data[49:48];
    if (W0_en & W0_mask[25])
      Memory[W0_addr][32'h32 +: 2] <= W0_data[51:50];
    if (W0_en & W0_mask[26])
      Memory[W0_addr][32'h34 +: 2] <= W0_data[53:52];
    if (W0_en & W0_mask[27])
      Memory[W0_addr][32'h36 +: 2] <= W0_data[55:54];
    if (W0_en & W0_mask[28])
      Memory[W0_addr][32'h38 +: 2] <= W0_data[57:56];
    if (W0_en & W0_mask[29])
      Memory[W0_addr][32'h3A +: 2] <= W0_data[59:58];
    if (W0_en & W0_mask[30])
      Memory[W0_addr][32'h3C +: 2] <= W0_data[61:60];
    if (W0_en & W0_mask[31])
      Memory[W0_addr][32'h3E +: 2] <= W0_data[63:62];
    if (W0_en & W0_mask[32])
      Memory[W0_addr][32'h40 +: 2] <= W0_data[65:64];
    if (W0_en & W0_mask[33])
      Memory[W0_addr][32'h42 +: 2] <= W0_data[67:66];
    if (W0_en & W0_mask[34])
      Memory[W0_addr][32'h44 +: 2] <= W0_data[69:68];
    if (W0_en & W0_mask[35])
      Memory[W0_addr][32'h46 +: 2] <= W0_data[71:70];
  end // always @(posedge)
  assign R0_data = R0_en ? Memory[R0_addr] : 72'bx;
endmodule

