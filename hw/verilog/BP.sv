// Generated by CIRCT firtool-1.76.0
module BP(
  input                                                                                                                                                                                                                                                                                                                                                                                                      clock,
                                                                                                                                                                                                                                                                                                                                                                                                             reset,
                                                                                                                                                                                                                                                                                                                                                                                                             io_flush,
  output                                                                                                                                                                                                                                                                                                                                                                                                     io_predict_ready,
  input                                                                                                                                                                                                                                                                                                                                                                                                      io_predict_valid,
  input  struct packed {logic [31:0] addr; logic [31:0] wr_data; logic wr_en; }                                                                                                                                                                                                                                                                                                                              io_predict_bits,
  input  struct packed {logic valid; struct packed {logic [31:0] fetch_PC; logic T_NT; logic [5:0] ROB_index; logic [2:0] br_type; logic [1:0] fetch_packet_index; logic is_misprediction; logic exception; logic [31:0] expected_PC; logic [15:0] GHR; logic [6:0] TOS; logic [6:0] NEXT; logic [7:0] free_list_front_pointer; logic [3:0][4:0] RDold; logic [3:0][6:0] RD; logic [3:0] RD_valid; } bits; } io_commit,
  input  struct packed {logic [31:0] call_addr; logic call; logic ret; }                                                                                                                                                                                                                                                                                                                                     io_RAS_update,
  output struct packed {logic [6:0] NEXT; logic [6:0] TOS; logic [31:0] ret_addr; }                                                                                                                                                                                                                                                                                                                          io_RAS_read,
  input  [15:0]                                                                                                                                                                                                                                                                                                                                                                                              io_GHR,
  input                                                                                                                                                                                                                                                                                                                                                                                                      io_prediction_ready,
  output                                                                                                                                                                                                                                                                                                                                                                                                     io_prediction_valid,
  output struct packed {logic hit; logic [31:0] target; logic [2:0] br_type; logic [15:0] GHR; logic T_NT; }                                                                                                                                                                                                                                                                                                 io_prediction_bits
);

  wire [31:0] _RAS_io_ret_addr;
  wire [6:0]  _RAS_io_NEXT;
  wire [6:0]  _RAS_io_TOS;
  wire        _BTB_io_BTB_hit;
  wire
    struct packed {logic BTB_valid; logic [17:0] BTB_tag; logic [31:0] BTB_target; logic [2:0] BTBbr_type_t; logic [1:0] BTB_fetch_packet_index; }
    _BTB_io_BTB_output;
  wire        _gshare_io_T_NT;
  reg         prediction_valid_REG;
  wire
    struct packed {logic hit; logic [31:0] target; logic [2:0] br_type; logic [15:0] GHR; logic T_NT; }
    _GEN =
    '{hit: _BTB_io_BTB_hit,
      target: _BTB_io_BTB_output.BTB_target,
      br_type: _BTB_io_BTB_output.BTBbr_type_t,
      GHR: io_GHR,
      T_NT: _gshare_io_T_NT};
  wire
    struct packed {logic valid; struct packed {logic [31:0] fetch_PC; logic T_NT; logic [5:0] ROB_index; logic [2:0] br_type; logic [1:0] fetch_packet_index; logic is_misprediction; logic exception; logic [31:0] expected_PC; logic [15:0] GHR; logic [6:0] TOS; logic [6:0] NEXT; logic [7:0] free_list_front_pointer; logic [3:0][4:0] RDold; logic [3:0][6:0] RD; logic [3:0] RD_valid; } bits; }
    _GEN_0 =
    '{valid: ((|io_commit.bits.br_type) & io_commit.valid), bits: io_commit.bits};
  wire
    struct packed {logic valid; struct packed {logic [31:0] fetch_PC; logic T_NT; logic [5:0] ROB_index; logic [2:0] br_type; logic [1:0] fetch_packet_index; logic is_misprediction; logic exception; logic [31:0] expected_PC; logic [15:0] GHR; logic [6:0] TOS; logic [6:0] NEXT; logic [7:0] free_list_front_pointer; logic [3:0][4:0] RDold; logic [3:0][6:0] RD; logic [3:0] RD_valid; } bits; }
    _GEN_1 = '{valid: (io_commit.bits.T_NT & io_commit.valid), bits: io_commit.bits};
  always @(posedge clock)
    prediction_valid_REG <= io_predict_valid & ~io_flush;
  gshare gshare (
    .clock            (clock),
    .io_predict_GHR   (io_GHR),
    .io_predict_PC    (io_predict_bits.addr),
    .io_predict_valid (io_predict_valid),
    .io_T_NT          (_gshare_io_T_NT),
    .io_valid         (/* unused */),
    .io_commit        (_GEN_0)
  );
  hash_BTB BTB (
    .clock            (clock),
    .reset            (reset),
    .io_predict_PC    (io_predict_bits.addr),
    .io_predict_valid (io_predict_valid),
    .io_BTB_hit       (_BTB_io_BTB_hit),
    .io_BTB_output    (_BTB_io_BTB_output),
    .io_commit        (_GEN_1)
  );
  RAS RAS (
    .clock           (clock),
    .reset           (reset),
    .io_wr_addr      (io_RAS_update.call_addr),
    .io_wr_valid     (io_RAS_update.call & ~io_commit.bits.is_misprediction),
    .io_rd_valid     (io_RAS_update.ret & ~io_commit.bits.is_misprediction),
    .io_revert_NEXT  (io_commit.bits.NEXT),
    .io_revert_TOS   (io_commit.bits.TOS),
    .io_revert_valid (io_commit.bits.is_misprediction),
    .io_ret_addr     (_RAS_io_ret_addr),
    .io_NEXT         (_RAS_io_NEXT),
    .io_TOS          (_RAS_io_TOS)
  );
  Queue1_prediction prediction_skid_buffer (
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (/* unused */),
    .io_enq_valid (prediction_valid_REG),
    .io_enq_bits  (_GEN),
    .io_deq_ready (io_prediction_ready),
    .io_deq_valid (io_prediction_valid),
    .io_deq_bits  (io_prediction_bits),
    .io_count     (/* unused */),
    .io_flush     (io_flush)
  );
  assign io_predict_ready = io_prediction_ready;
  assign io_RAS_read =
    '{NEXT: _RAS_io_NEXT, TOS: _RAS_io_TOS, ret_addr: _RAS_io_ret_addr};
endmodule

