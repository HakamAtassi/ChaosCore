// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module BP(
  input         clock,
                reset,
                io_flush,
  output        io_predict_ready,
  input         io_predict_valid,
  input  [31:0] io_predict_bits_addr,
  input         io_commit_valid,
  input  [31:0] io_commit_bits_fetch_PC,
  input         io_commit_bits_T_NT,
  input  [2:0]  io_commit_bits_br_type,
  input  [1:0]  io_commit_bits_fetch_packet_index,
  input         io_commit_bits_is_misprediction,
  input  [31:0] io_commit_bits_expected_PC,
  input  [15:0] io_commit_bits_GHR,
  input  [6:0]  io_commit_bits_TOS,
                io_commit_bits_NEXT,
  input  [31:0] io_RAS_update_call_addr,
  input         io_RAS_update_call,
                io_RAS_update_ret,
  output [6:0]  io_RAS_read_NEXT,
                io_RAS_read_TOS,
  output [31:0] io_RAS_read_ret_addr,
  input  [15:0] io_GHR,
  input         io_prediction_ready,
  output        io_prediction_valid,
                io_prediction_bits_hit,
  output [31:0] io_prediction_bits_target,
  output [2:0]  io_prediction_bits_br_type,
  output [15:0] io_prediction_bits_GHR,
  output        io_prediction_bits_T_NT
);

  wire        _BTB_io_BTB_hit;
  wire [31:0] _BTB_io_BTB_output_BTB_target;
  wire [2:0]  _BTB_io_BTB_output_BTBbr_type_t;
  wire        _gshare_io_T_NT;
  reg         prediction_valid_REG;
  always @(posedge clock)
    prediction_valid_REG <= io_predict_valid & ~io_flush;
  gshare gshare (
    .clock                   (clock),
    .io_predict_GHR          (io_GHR),
    .io_predict_PC           (io_predict_bits_addr),
    .io_T_NT                 (_gshare_io_T_NT),
    .io_commit_valid         ((|io_commit_bits_br_type) & io_commit_valid),
    .io_commit_bits_fetch_PC (io_commit_bits_fetch_PC),
    .io_commit_bits_T_NT     (io_commit_bits_T_NT),
    .io_commit_bits_GHR      (io_commit_bits_GHR)
  );
  hash_BTB BTB (
    .clock                             (clock),
    .reset                             (reset),
    .io_predict_PC                     (io_predict_bits_addr),
    .io_BTB_hit                        (_BTB_io_BTB_hit),
    .io_BTB_output_BTB_target          (_BTB_io_BTB_output_BTB_target),
    .io_BTB_output_BTBbr_type_t        (_BTB_io_BTB_output_BTBbr_type_t),
    .io_commit_valid                   (io_commit_bits_T_NT & io_commit_valid),
    .io_commit_bits_fetch_PC           (io_commit_bits_fetch_PC),
    .io_commit_bits_br_type            (io_commit_bits_br_type),
    .io_commit_bits_fetch_packet_index (io_commit_bits_fetch_packet_index),
    .io_commit_bits_expected_PC        (io_commit_bits_expected_PC)
  );
  RAS RAS (
    .clock           (clock),
    .reset           (reset),
    .io_wr_addr      (io_RAS_update_call_addr),
    .io_wr_valid     (io_RAS_update_call & ~io_commit_bits_is_misprediction),
    .io_rd_valid     (io_RAS_update_ret & ~io_commit_bits_is_misprediction),
    .io_revert_NEXT  (io_commit_bits_NEXT),
    .io_revert_TOS   (io_commit_bits_TOS),
    .io_revert_valid (io_commit_bits_is_misprediction),
    .io_ret_addr     (io_RAS_read_ret_addr),
    .io_NEXT         (io_RAS_read_NEXT),
    .io_TOS          (io_RAS_read_TOS)
  );
  Queue1_prediction prediction_skid_buffer (
    .clock               (clock),
    .reset               (reset),
    .io_enq_valid        (prediction_valid_REG),
    .io_enq_bits_hit     (_BTB_io_BTB_hit),
    .io_enq_bits_target  (_BTB_io_BTB_output_BTB_target),
    .io_enq_bits_br_type (_BTB_io_BTB_output_BTBbr_type_t),
    .io_enq_bits_GHR     (io_GHR),
    .io_enq_bits_T_NT    (_gshare_io_T_NT),
    .io_deq_ready        (io_prediction_ready),
    .io_deq_valid        (io_prediction_valid),
    .io_deq_bits_hit     (io_prediction_bits_hit),
    .io_deq_bits_target  (io_prediction_bits_target),
    .io_deq_bits_br_type (io_prediction_bits_br_type),
    .io_deq_bits_GHR     (io_prediction_bits_GHR),
    .io_deq_bits_T_NT    (io_prediction_bits_T_NT),
    .io_flush            (io_flush)
  );
  assign io_predict_ready = io_prediction_ready;
endmodule

