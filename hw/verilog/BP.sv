// Generated by CIRCT firtool-1.76.0

// Include register initializers in init blocks unless synthesis is set
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for register randomization.

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_
module BP(	// src/main/scala/Frontend/BP/BP.scala:38:7
  input         clock,	// src/main/scala/Frontend/BP/BP.scala:38:7
                reset,	// src/main/scala/Frontend/BP/BP.scala:38:7
                io_flush,	// src/main/scala/Frontend/BP/BP.scala:40:16
  output        io_predict_ready,	// src/main/scala/Frontend/BP/BP.scala:40:16
  input         io_predict_valid,	// src/main/scala/Frontend/BP/BP.scala:40:16
  input  [31:0] io_predict_bits_addr,	// src/main/scala/Frontend/BP/BP.scala:40:16
  input         io_commit_valid,	// src/main/scala/Frontend/BP/BP.scala:40:16
  input  [31:0] io_commit_bits_fetch_PC,	// src/main/scala/Frontend/BP/BP.scala:40:16
  input         io_commit_bits_T_NT,	// src/main/scala/Frontend/BP/BP.scala:40:16
  input  [2:0]  io_commit_bits_br_type,	// src/main/scala/Frontend/BP/BP.scala:40:16
  input  [1:0]  io_commit_bits_fetch_packet_index,	// src/main/scala/Frontend/BP/BP.scala:40:16
  input         io_commit_bits_is_misprediction,	// src/main/scala/Frontend/BP/BP.scala:40:16
  input  [31:0] io_commit_bits_expected_PC,	// src/main/scala/Frontend/BP/BP.scala:40:16
  input  [15:0] io_commit_bits_GHR,	// src/main/scala/Frontend/BP/BP.scala:40:16
  input  [6:0]  io_commit_bits_TOS,	// src/main/scala/Frontend/BP/BP.scala:40:16
                io_commit_bits_NEXT,	// src/main/scala/Frontend/BP/BP.scala:40:16
  input  [31:0] io_RAS_update_call_addr,	// src/main/scala/Frontend/BP/BP.scala:40:16
  input         io_RAS_update_call,	// src/main/scala/Frontend/BP/BP.scala:40:16
                io_RAS_update_ret,	// src/main/scala/Frontend/BP/BP.scala:40:16
  output [6:0]  io_RAS_read_NEXT,	// src/main/scala/Frontend/BP/BP.scala:40:16
                io_RAS_read_TOS,	// src/main/scala/Frontend/BP/BP.scala:40:16
  output [31:0] io_RAS_read_ret_addr,	// src/main/scala/Frontend/BP/BP.scala:40:16
  input  [15:0] io_GHR,	// src/main/scala/Frontend/BP/BP.scala:40:16
  input         io_prediction_ready,	// src/main/scala/Frontend/BP/BP.scala:40:16
  output        io_prediction_valid,	// src/main/scala/Frontend/BP/BP.scala:40:16
                io_prediction_bits_hit,	// src/main/scala/Frontend/BP/BP.scala:40:16
  output [31:0] io_prediction_bits_target,	// src/main/scala/Frontend/BP/BP.scala:40:16
  output [2:0]  io_prediction_bits_br_type,	// src/main/scala/Frontend/BP/BP.scala:40:16
  output [15:0] io_prediction_bits_GHR,	// src/main/scala/Frontend/BP/BP.scala:40:16
  output        io_prediction_bits_T_NT	// src/main/scala/Frontend/BP/BP.scala:40:16
);

  wire        _BTB_io_BTB_hit;	// src/main/scala/Frontend/BP/BP.scala:72:29
  wire [31:0] _BTB_io_BTB_output_BTB_target;	// src/main/scala/Frontend/BP/BP.scala:72:29
  wire [2:0]  _BTB_io_BTB_output_BTBbr_type_t;	// src/main/scala/Frontend/BP/BP.scala:72:29
  wire        _gshare_io_T_NT;	// src/main/scala/Frontend/BP/BP.scala:71:29
  reg         prediction_valid_REG;	// src/main/scala/Frontend/BP/BP.scala:160:39
  always @(posedge clock)	// src/main/scala/Frontend/BP/BP.scala:38:7
    prediction_valid_REG <= io_predict_valid & ~io_flush;	// src/main/scala/Frontend/BP/BP.scala:160:{39,57,60}
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/Frontend/BP/BP.scala:38:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/Frontend/BP/BP.scala:38:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/Frontend/BP/BP.scala:38:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/Frontend/BP/BP.scala:38:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/Frontend/BP/BP.scala:38:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/Frontend/BP/BP.scala:38:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/Frontend/BP/BP.scala:38:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/Frontend/BP/BP.scala:38:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/Frontend/BP/BP.scala:38:7
        prediction_valid_REG = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/Frontend/BP/BP.scala:38:7, :160:39
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/Frontend/BP/BP.scala:38:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/Frontend/BP/BP.scala:38:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  gshare gshare (	// src/main/scala/Frontend/BP/BP.scala:71:29
    .clock                   (clock),
    .io_predict_GHR          (io_GHR),
    .io_predict_PC           (io_predict_bits_addr),
    .io_T_NT                 (_gshare_io_T_NT),
    .io_commit_valid         ((|io_commit_bits_br_type) & io_commit_valid),	// src/main/scala/Frontend/BP/BP.scala:103:{43,63}
    .io_commit_bits_fetch_PC (io_commit_bits_fetch_PC),
    .io_commit_bits_T_NT     (io_commit_bits_T_NT),
    .io_commit_bits_GHR      (io_commit_bits_GHR)
  );	// src/main/scala/Frontend/BP/BP.scala:71:29
  hash_BTB BTB (	// src/main/scala/Frontend/BP/BP.scala:72:29
    .clock                             (clock),
    .reset                             (reset),
    .io_predict_PC                     (io_predict_bits_addr),
    .io_BTB_hit                        (_BTB_io_BTB_hit),
    .io_BTB_output_BTB_target          (_BTB_io_BTB_output_BTB_target),
    .io_BTB_output_BTBbr_type_t        (_BTB_io_BTB_output_BTBbr_type_t),
    .io_commit_valid                   (io_commit_bits_T_NT & io_commit_valid),	// src/main/scala/Frontend/BP/BP.scala:102:39
    .io_commit_bits_fetch_PC           (io_commit_bits_fetch_PC),
    .io_commit_bits_br_type            (io_commit_bits_br_type),
    .io_commit_bits_fetch_packet_index (io_commit_bits_fetch_packet_index),
    .io_commit_bits_expected_PC        (io_commit_bits_expected_PC)
  );	// src/main/scala/Frontend/BP/BP.scala:72:29
  RAS RAS (	// src/main/scala/Frontend/BP/BP.scala:73:29
    .clock           (clock),
    .reset           (reset),
    .io_wr_addr      (io_RAS_update_call_addr),
    .io_wr_valid     (io_RAS_update_call & ~io_commit_bits_is_misprediction),	// src/main/scala/Frontend/BP/BP.scala:104:19, :141:47
    .io_rd_valid     (io_RAS_update_ret & ~io_commit_bits_is_misprediction),	// src/main/scala/Frontend/BP/BP.scala:104:19, :142:47
    .io_revert_NEXT  (io_commit_bits_NEXT),
    .io_revert_TOS   (io_commit_bits_TOS),
    .io_revert_valid (io_commit_bits_is_misprediction),
    .io_ret_addr     (io_RAS_read_ret_addr),
    .io_NEXT         (io_RAS_read_NEXT),
    .io_TOS          (io_RAS_read_TOS)
  );	// src/main/scala/Frontend/BP/BP.scala:73:29
  Queue1_prediction prediction_skid_buffer (	// src/main/scala/Frontend/BP/BP.scala:169:45
    .clock               (clock),
    .reset               (reset),
    .io_enq_valid        (prediction_valid_REG),	// src/main/scala/Frontend/BP/BP.scala:160:39
    .io_enq_bits_hit     (_BTB_io_BTB_hit),	// src/main/scala/Frontend/BP/BP.scala:72:29
    .io_enq_bits_target  (_BTB_io_BTB_output_BTB_target),	// src/main/scala/Frontend/BP/BP.scala:72:29
    .io_enq_bits_br_type (_BTB_io_BTB_output_BTBbr_type_t),	// src/main/scala/Frontend/BP/BP.scala:72:29
    .io_enq_bits_GHR     (io_GHR),
    .io_enq_bits_T_NT    (_gshare_io_T_NT),	// src/main/scala/Frontend/BP/BP.scala:71:29
    .io_deq_ready        (io_prediction_ready),
    .io_deq_valid        (io_prediction_valid),
    .io_deq_bits_hit     (io_prediction_bits_hit),
    .io_deq_bits_target  (io_prediction_bits_target),
    .io_deq_bits_br_type (io_prediction_bits_br_type),
    .io_deq_bits_GHR     (io_prediction_bits_GHR),
    .io_deq_bits_T_NT    (io_prediction_bits_T_NT),
    .io_flush            (io_flush)
  );	// src/main/scala/Frontend/BP/BP.scala:169:45
  assign io_predict_ready = io_prediction_ready;	// src/main/scala/Frontend/BP/BP.scala:38:7
endmodule

