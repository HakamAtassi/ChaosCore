// Generated by CIRCT firtool-1.76.0

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for register randomization.

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_
module sim_nReadmWrite(	// src/main/scala/Backend/RF.scala:84:7
  input         clock,	// src/main/scala/Backend/RF.scala:84:7
  input  [5:0]  io_raddr_0,	// src/main/scala/Backend/RF.scala:85:14
                io_raddr_1,	// src/main/scala/Backend/RF.scala:85:14
                io_raddr_2,	// src/main/scala/Backend/RF.scala:85:14
                io_raddr_3,	// src/main/scala/Backend/RF.scala:85:14
                io_raddr_4,	// src/main/scala/Backend/RF.scala:85:14
                io_raddr_5,	// src/main/scala/Backend/RF.scala:85:14
                io_raddr_6,	// src/main/scala/Backend/RF.scala:85:14
                io_raddr_7,	// src/main/scala/Backend/RF.scala:85:14
  output [31:0] io_rdata_0,	// src/main/scala/Backend/RF.scala:85:14
                io_rdata_1,	// src/main/scala/Backend/RF.scala:85:14
                io_rdata_2,	// src/main/scala/Backend/RF.scala:85:14
                io_rdata_3,	// src/main/scala/Backend/RF.scala:85:14
                io_rdata_4,	// src/main/scala/Backend/RF.scala:85:14
                io_rdata_5,	// src/main/scala/Backend/RF.scala:85:14
                io_rdata_6,	// src/main/scala/Backend/RF.scala:85:14
                io_rdata_7,	// src/main/scala/Backend/RF.scala:85:14
  input  [5:0]  io_waddr_0,	// src/main/scala/Backend/RF.scala:85:14
                io_waddr_1,	// src/main/scala/Backend/RF.scala:85:14
                io_waddr_2,	// src/main/scala/Backend/RF.scala:85:14
  input         io_wen_0,	// src/main/scala/Backend/RF.scala:85:14
                io_wen_1,	// src/main/scala/Backend/RF.scala:85:14
                io_wen_2,	// src/main/scala/Backend/RF.scala:85:14
  input  [31:0] io_wdata_0,	// src/main/scala/Backend/RF.scala:85:14
                io_wdata_1,	// src/main/scala/Backend/RF.scala:85:14
                io_wdata_2	// src/main/scala/Backend/RF.scala:85:14
);

  mem_64x32 mem_ext (	// src/main/scala/Backend/RF.scala:118:24
    .R0_addr (io_raddr_7),
    .R0_en   (1'h1),	// src/main/scala/Backend/RF.scala:84:7
    .R0_clk  (clock),
    .R0_data (io_rdata_7),
    .R1_addr (io_raddr_6),
    .R1_en   (1'h1),	// src/main/scala/Backend/RF.scala:84:7
    .R1_clk  (clock),
    .R1_data (io_rdata_6),
    .R2_addr (io_raddr_5),
    .R2_en   (1'h1),	// src/main/scala/Backend/RF.scala:84:7
    .R2_clk  (clock),
    .R2_data (io_rdata_5),
    .R3_addr (io_raddr_4),
    .R3_en   (1'h1),	// src/main/scala/Backend/RF.scala:84:7
    .R3_clk  (clock),
    .R3_data (io_rdata_4),
    .R4_addr (io_raddr_3),
    .R4_en   (1'h1),	// src/main/scala/Backend/RF.scala:84:7
    .R4_clk  (clock),
    .R4_data (io_rdata_3),
    .R5_addr (io_raddr_2),
    .R5_en   (1'h1),	// src/main/scala/Backend/RF.scala:84:7
    .R5_clk  (clock),
    .R5_data (io_rdata_2),
    .R6_addr (io_raddr_1),
    .R6_en   (1'h1),	// src/main/scala/Backend/RF.scala:84:7
    .R6_clk  (clock),
    .R6_data (io_rdata_1),
    .R7_addr (io_raddr_0),
    .R7_en   (1'h1),	// src/main/scala/Backend/RF.scala:84:7
    .R7_clk  (clock),
    .R7_data (io_rdata_0),
    .W0_addr (io_waddr_2),
    .W0_en   (io_wen_2),
    .W0_clk  (clock),
    .W0_data (io_waddr_2 == 6'h0 ? 32'h0 : io_wdata_2),	// src/main/scala/Backend/RF.scala:122:31, :132:{19,31}
    .W1_addr (io_waddr_1),
    .W1_en   (io_wen_1),
    .W1_clk  (clock),
    .W1_data (io_waddr_1 == 6'h0 ? 32'h0 : io_wdata_1),	// src/main/scala/Backend/RF.scala:122:31, :127:{19,31}
    .W2_addr (io_waddr_0),
    .W2_en   (io_wen_0),
    .W2_clk  (clock),
    .W2_data (io_waddr_0 == 6'h0 ? 32'h0 : io_wdata_0)	// src/main/scala/Backend/RF.scala:122:{19,31}
  );	// src/main/scala/Backend/RF.scala:118:24
endmodule

