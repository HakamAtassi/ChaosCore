// Generated by CIRCT firtool-1.62.0
// VCS coverage exclude_file
module mem_64x4(
  input  [5:0] R0_addr,
  input        R0_en,
               R0_clk,
  output [3:0] R0_data,
  input  [5:0] W0_addr,
  input        W0_en,
               W0_clk,
  input  [3:0] W0_data
);

  reg [3:0] Memory[0:63];
  reg       _R0_en_d0;
  reg [5:0] _R0_addr_d0;
  always @(posedge R0_clk) begin
    _R0_en_d0 <= R0_en;
    _R0_addr_d0 <= R0_addr;
  end // always @(posedge)
  always @(posedge W0_clk) begin
    if (W0_en & 1'h1)
      Memory[W0_addr] <= W0_data;
  end // always @(posedge)
  assign R0_data = _R0_en_d0 ? Memory[_R0_addr_d0] : 4'bx;
endmodule

module SDPReadWriteSmem(
  input        clock,
               reset,
  input  [5:0] io_rd_addr,
  output [3:0] io_data_out,
  input  [5:0] io_wr_addr,
  input        io_wr_en,
  input  [3:0] io_data_in
);

  wire [3:0] _mem_ext_R0_data;
  reg        hazard_reg;
  reg  [3:0] din_buff;
  always @(posedge clock) begin
    if (reset) begin
      hazard_reg <= 1'h0;
      din_buff <= 4'h0;
    end
    else begin
      hazard_reg <= io_rd_addr == io_wr_addr & io_wr_en;
      din_buff <= io_data_in;
    end
  end // always @(posedge)
  mem_64x4 mem_ext (
    .R0_addr (io_rd_addr),
    .R0_en   (1'h1),
    .R0_clk  (clock),
    .R0_data (_mem_ext_R0_data),
    .W0_addr (io_wr_addr),
    .W0_en   (io_wr_en),
    .W0_clk  (clock),
    .W0_data (io_data_in)
  );
  assign io_data_out = hazard_reg ? din_buff : _mem_ext_R0_data;
endmodule

// VCS coverage exclude_file
module mem_64x84(
  input  [5:0]  RW0_addr,
  input         RW0_en,
                RW0_clk,
                RW0_wmode,
  input  [83:0] RW0_wdata,
  output [83:0] RW0_rdata
);

  reg [83:0] Memory[0:63];
  reg [5:0]  _RW0_raddr_d0;
  reg        _RW0_ren_d0;
  reg        _RW0_rmode_d0;
  always @(posedge RW0_clk) begin
    _RW0_raddr_d0 <= RW0_addr;
    _RW0_ren_d0 <= RW0_en;
    _RW0_rmode_d0 <= RW0_wmode;
    if (RW0_en & RW0_wmode & 1'h1)
      Memory[RW0_addr] <= RW0_wdata;
  end // always @(posedge)
  assign RW0_rdata = _RW0_ren_d0 & ~_RW0_rmode_d0 ? Memory[_RW0_raddr_d0] : 84'bx;
endmodule

module ReadWriteSmem(
  input         clock,
                io_wr_en,
  input  [5:0]  io_addr,
  input  [83:0] io_data_in,
  output [83:0] io_data_out
);

  mem_64x84 mem_ext (
    .RW0_addr  (io_addr),
    .RW0_en    (1'h1),
    .RW0_clk   (clock),
    .RW0_wmode (io_wr_en),
    .RW0_wdata (io_data_in),
    .RW0_rdata (io_data_out)
  );
endmodule

// VCS coverage exclude_file
module mem_256x8(
  input  [7:0] RW0_addr,
  input        RW0_en,
               RW0_clk,
               RW0_wmode,
  input  [7:0] RW0_wdata,
  output [7:0] RW0_rdata
);

  reg [7:0] Memory[0:255];
  reg [7:0] _RW0_raddr_d0;
  reg       _RW0_ren_d0;
  reg       _RW0_rmode_d0;
  always @(posedge RW0_clk) begin
    _RW0_raddr_d0 <= RW0_addr;
    _RW0_ren_d0 <= RW0_en;
    _RW0_rmode_d0 <= RW0_wmode;
    if (RW0_en & RW0_wmode & 1'h1)
      Memory[RW0_addr] <= RW0_wdata;
  end // always @(posedge)
  assign RW0_rdata = _RW0_ren_d0 & ~_RW0_rmode_d0 ? Memory[_RW0_raddr_d0] : 8'bx;
endmodule

module ReadWriteSmem_1(
  input        clock,
               io_wr_en,
  input  [7:0] io_addr,
               io_data_in,
  output [7:0] io_data_out
);

  mem_256x8 mem_ext (
    .RW0_addr  (io_addr),
    .RW0_en    (1'h1),
    .RW0_clk   (clock),
    .RW0_wmode (io_wr_en),
    .RW0_wdata (io_data_in),
    .RW0_rdata (io_data_out)
  );
endmodule

module L1_cache_mem(
  input          clock,
                 reset,
  input  [31:0]  io_controller_addr,
                 io_controller_data,
  input  [255:0] io_controller_cache_line,
  input          io_controller_valid,
  input  [2:0]   io_controller_cmd,
  output [31:0]  io_cache_dout,
                 io_cache_addr,
  output         io_cache_valid,
                 io_cache_hit
);

  wire        hit;
  wire [3:0]  hit_oh;
  wire [7:0]  _data_memory_31_io_data_out;
  wire [7:0]  _data_memory_30_io_data_out;
  wire [7:0]  _data_memory_29_io_data_out;
  wire [7:0]  _data_memory_28_io_data_out;
  wire [7:0]  _data_memory_27_io_data_out;
  wire [7:0]  _data_memory_26_io_data_out;
  wire [7:0]  _data_memory_25_io_data_out;
  wire [7:0]  _data_memory_24_io_data_out;
  wire [7:0]  _data_memory_23_io_data_out;
  wire [7:0]  _data_memory_22_io_data_out;
  wire [7:0]  _data_memory_21_io_data_out;
  wire [7:0]  _data_memory_20_io_data_out;
  wire [7:0]  _data_memory_19_io_data_out;
  wire [7:0]  _data_memory_18_io_data_out;
  wire [7:0]  _data_memory_17_io_data_out;
  wire [7:0]  _data_memory_16_io_data_out;
  wire [7:0]  _data_memory_15_io_data_out;
  wire [7:0]  _data_memory_14_io_data_out;
  wire [7:0]  _data_memory_13_io_data_out;
  wire [7:0]  _data_memory_12_io_data_out;
  wire [7:0]  _data_memory_11_io_data_out;
  wire [7:0]  _data_memory_10_io_data_out;
  wire [7:0]  _data_memory_9_io_data_out;
  wire [7:0]  _data_memory_8_io_data_out;
  wire [7:0]  _data_memory_7_io_data_out;
  wire [7:0]  _data_memory_6_io_data_out;
  wire [7:0]  _data_memory_5_io_data_out;
  wire [7:0]  _data_memory_4_io_data_out;
  wire [7:0]  _data_memory_3_io_data_out;
  wire [7:0]  _data_memory_2_io_data_out;
  wire [7:0]  _data_memory_1_io_data_out;
  wire [7:0]  _data_memory_0_io_data_out;
  wire [83:0] _tag_memory_io_data_out;
  wire [3:0]  _PLRU_memory_io_data_out;
  reg  [20:0] delayed_controller_tag;
  reg         plru_wr_en;
  reg         allocate;
  reg  [20:0] delayed_controller_set;
  wire [3:0]  plru_in =
    {4{(_PLRU_memory_io_data_out & hit_oh) != 4'hF}} & _PLRU_memory_io_data_out | hit_oh;
  reg         valid_delayed;
  wire [20:0] tag_vector_out_0 = _tag_memory_io_data_out[20:0];
  wire [20:0] tag_vector_out_1 = _tag_memory_io_data_out[41:21];
  wire [20:0] tag_vector_out_2 = _tag_memory_io_data_out[62:42];
  wire [20:0] tag_vector_out_3 = _tag_memory_io_data_out[83:63];
  wire        hit_oh_vec_0 = delayed_controller_tag == tag_vector_out_0;
  wire        hit_oh_vec_1 = delayed_controller_tag == tag_vector_out_1;
  wire        hit_oh_vec_2 = delayed_controller_tag == tag_vector_out_2;
  wire        hit_oh_vec_3 = delayed_controller_tag == tag_vector_out_3;
  assign hit_oh = {hit_oh_vec_0, hit_oh_vec_1, hit_oh_vec_2, hit_oh_vec_3};
  assign hit = (|hit_oh) & valid_delayed;
  wire [7:0]  cache_addr =
    {hit_oh_vec_3 ? 2'h0 : hit_oh_vec_2 ? 2'h1 : {1'h1, ~hit_oh_vec_1},
     io_controller_addr[10:5]};
  reg  [5:0]  delayed_controller_byte_offset;
  reg  [2:0]  delayed_controller_cmd;
  wire        _data_memory_wr_en_31_T = delayed_controller_cmd == 3'h4;
  wire        _data_memory_wr_en_3_T_9 = delayed_controller_byte_offset == 6'h0;
  wire        _data_memory_wr_en_31_T_4 = delayed_controller_cmd == 3'h5;
  wire        _data_memory_wr_en_31_T_8 = delayed_controller_cmd == 3'h6;
  wire        _data_memory_wr_en_3_T_5 = delayed_controller_byte_offset == 6'h2;
  wire        _data_memory_wr_en_7_T_9 = delayed_controller_byte_offset == 6'h4;
  wire        _data_memory_wr_en_7_T_5 = delayed_controller_byte_offset == 6'h6;
  wire        _data_memory_wr_en_11_T_9 = delayed_controller_byte_offset == 6'h8;
  wire        _data_memory_wr_en_11_T_5 = delayed_controller_byte_offset == 6'hA;
  wire        _data_memory_wr_en_15_T_9 = delayed_controller_byte_offset == 6'hC;
  wire        _data_memory_wr_en_15_T_5 = delayed_controller_byte_offset == 6'hE;
  wire        _data_memory_wr_en_19_T_9 = delayed_controller_byte_offset == 6'h10;
  wire        _data_memory_wr_en_19_T_5 = delayed_controller_byte_offset == 6'h12;
  wire        _data_memory_wr_en_23_T_9 = delayed_controller_byte_offset == 6'h14;
  wire        _data_memory_wr_en_23_T_5 = delayed_controller_byte_offset == 6'h16;
  wire        _data_memory_wr_en_27_T_9 = delayed_controller_byte_offset == 6'h18;
  wire        _data_memory_wr_en_27_T_5 = delayed_controller_byte_offset == 6'h1A;
  wire        _data_memory_wr_en_31_T_9 = delayed_controller_byte_offset == 6'h1C;
  wire        _data_memory_wr_en_31_T_5 = delayed_controller_byte_offset == 6'h1E;
  reg  [31:0] write_data;
  reg  [5:0]  delayed_controller_byte_offset_2;
  reg  [31:0] data_out_pre_mask;
  reg  [2:0]  sel_output_mask_r;
  reg  [2:0]  sel_output_mask_r_1;
  reg  [2:0]  sel_output_mask;
  reg         io_cache_hit_r;
  reg         io_cache_hit_r_1;
  reg         io_cache_valid_r;
  reg         io_cache_valid_r_1;
  reg         io_cache_valid_r_2;
  always @(posedge clock) begin
    if (reset) begin
      delayed_controller_tag <= 21'h0;
      plru_wr_en <= 1'h0;
      allocate <= 1'h0;
      write_data <= 32'h0;
      data_out_pre_mask <= 32'h0;
    end
    else begin
      automatic logic [3:0][31:0] _GEN =
        {{{io_controller_data[7:0], 24'h0}},
         {{io_controller_data[15:0], 16'h0}},
         {{io_controller_data[23:0], 8'h0}},
         {io_controller_data}};
      automatic logic [3:0][31:0] _GEN_0 =
        {{{24'h0, _data_memory_28_io_data_out}},
         {{16'h0, _data_memory_28_io_data_out, _data_memory_29_io_data_out}},
         {{8'h0,
           _data_memory_28_io_data_out,
           _data_memory_29_io_data_out,
           _data_memory_30_io_data_out}},
         {{_data_memory_28_io_data_out,
           _data_memory_29_io_data_out,
           _data_memory_30_io_data_out,
           _data_memory_31_io_data_out}}};
      automatic logic [3:0][31:0] _GEN_1 =
        {{{24'h0, _data_memory_24_io_data_out}},
         {{16'h0, _data_memory_24_io_data_out, _data_memory_25_io_data_out}},
         {{8'h0,
           _data_memory_24_io_data_out,
           _data_memory_25_io_data_out,
           _data_memory_26_io_data_out}},
         {{_data_memory_24_io_data_out,
           _data_memory_25_io_data_out,
           _data_memory_26_io_data_out,
           _data_memory_27_io_data_out}}};
      automatic logic [3:0][31:0] _GEN_2 =
        {{{24'h0, _data_memory_20_io_data_out}},
         {{16'h0, _data_memory_20_io_data_out, _data_memory_21_io_data_out}},
         {{8'h0,
           _data_memory_20_io_data_out,
           _data_memory_21_io_data_out,
           _data_memory_22_io_data_out}},
         {{_data_memory_20_io_data_out,
           _data_memory_21_io_data_out,
           _data_memory_22_io_data_out,
           _data_memory_23_io_data_out}}};
      automatic logic [3:0][31:0] _GEN_3 =
        {{{24'h0, _data_memory_16_io_data_out}},
         {{16'h0, _data_memory_16_io_data_out, _data_memory_17_io_data_out}},
         {{8'h0,
           _data_memory_16_io_data_out,
           _data_memory_17_io_data_out,
           _data_memory_18_io_data_out}},
         {{_data_memory_16_io_data_out,
           _data_memory_17_io_data_out,
           _data_memory_18_io_data_out,
           _data_memory_19_io_data_out}}};
      automatic logic [3:0][31:0] _GEN_4 =
        {{{24'h0, _data_memory_12_io_data_out}},
         {{16'h0, _data_memory_12_io_data_out, _data_memory_13_io_data_out}},
         {{8'h0,
           _data_memory_12_io_data_out,
           _data_memory_13_io_data_out,
           _data_memory_14_io_data_out}},
         {{_data_memory_12_io_data_out,
           _data_memory_13_io_data_out,
           _data_memory_14_io_data_out,
           _data_memory_15_io_data_out}}};
      automatic logic [3:0][31:0] _GEN_5 =
        {{{24'h0, _data_memory_8_io_data_out}},
         {{16'h0, _data_memory_8_io_data_out, _data_memory_9_io_data_out}},
         {{8'h0,
           _data_memory_8_io_data_out,
           _data_memory_9_io_data_out,
           _data_memory_10_io_data_out}},
         {{_data_memory_8_io_data_out,
           _data_memory_9_io_data_out,
           _data_memory_10_io_data_out,
           _data_memory_11_io_data_out}}};
      automatic logic [3:0][31:0] _GEN_6 =
        {{{24'h0, _data_memory_4_io_data_out}},
         {{16'h0, _data_memory_4_io_data_out, _data_memory_5_io_data_out}},
         {{8'h0,
           _data_memory_4_io_data_out,
           _data_memory_5_io_data_out,
           _data_memory_6_io_data_out}},
         {{_data_memory_4_io_data_out,
           _data_memory_5_io_data_out,
           _data_memory_6_io_data_out,
           _data_memory_7_io_data_out}}};
      automatic logic [3:0][31:0] _GEN_7 =
        {{{24'h0, _data_memory_0_io_data_out}},
         {{16'h0, _data_memory_0_io_data_out, _data_memory_1_io_data_out}},
         {{8'h0,
           _data_memory_0_io_data_out,
           _data_memory_1_io_data_out,
           _data_memory_2_io_data_out}},
         {{_data_memory_0_io_data_out,
           _data_memory_1_io_data_out,
           _data_memory_2_io_data_out,
           _data_memory_3_io_data_out}}};
      automatic logic [7:0][31:0] _GEN_8 =
        {{_GEN_0[delayed_controller_byte_offset_2[1:0]]},
         {_GEN_1[delayed_controller_byte_offset_2[1:0]]},
         {_GEN_2[delayed_controller_byte_offset_2[1:0]]},
         {_GEN_3[delayed_controller_byte_offset_2[1:0]]},
         {_GEN_4[delayed_controller_byte_offset_2[1:0]]},
         {_GEN_5[delayed_controller_byte_offset_2[1:0]]},
         {_GEN_6[delayed_controller_byte_offset_2[1:0]]},
         {_GEN_7[delayed_controller_byte_offset_2[1:0]]}};
      delayed_controller_tag <= io_controller_addr[31:11];
      plru_wr_en <= io_controller_cmd != 3'h3;
      allocate <= &io_controller_cmd;
      write_data <= _GEN[io_controller_addr[1:0]];
      data_out_pre_mask <= _GEN_8[delayed_controller_byte_offset_2[4:2]];
    end
    delayed_controller_set <= io_controller_addr[31:11];
    valid_delayed <= io_controller_valid;
    delayed_controller_byte_offset <= io_controller_addr[5:0];
    delayed_controller_cmd <= io_controller_cmd;
    delayed_controller_byte_offset_2 <= delayed_controller_byte_offset;
    sel_output_mask_r <= io_controller_cmd;
    sel_output_mask_r_1 <= sel_output_mask_r;
    sel_output_mask <= sel_output_mask_r_1;
    io_cache_hit_r <= hit;
    io_cache_hit_r_1 <= io_cache_hit_r;
    io_cache_valid_r <= io_controller_valid;
    io_cache_valid_r_1 <= io_cache_valid_r;
    io_cache_valid_r_2 <= io_cache_valid_r_1;
  end // always @(posedge)
  SDPReadWriteSmem PLRU_memory (
    .clock       (clock),
    .reset       (reset),
    .io_rd_addr  (io_controller_addr[10:5]),
    .io_data_out (_PLRU_memory_io_data_out),
    .io_wr_addr  (delayed_controller_set[5:0]),
    .io_wr_en    (plru_wr_en & hit),
    .io_data_in  (plru_in)
  );
  ReadWriteSmem tag_memory (
    .clock       (clock),
    .io_wr_en    (&io_controller_cmd),
    .io_addr     (io_controller_addr[10:5]),
    .io_data_in
      ({plru_in[3] & plru_in[2] & plru_in[1] & ~(plru_in[0])
          ? io_controller_addr[31:11]
          : tag_vector_out_3,
        plru_in[3] & plru_in[2] & ~(plru_in[1])
          ? io_controller_addr[31:11]
          : tag_vector_out_2,
        plru_in[3] & ~(plru_in[2]) ? io_controller_addr[31:11] : tag_vector_out_1,
        plru_in[3] ? tag_vector_out_0 : io_controller_addr[31:11]}),
    .io_data_out (_tag_memory_io_data_out)
  );
  ReadWriteSmem_1 data_memory_0 (
    .clock       (clock),
    .io_wr_en
      (allocate | _data_memory_wr_en_31_T & _data_memory_wr_en_3_T_9
       | _data_memory_wr_en_31_T_4 & _data_memory_wr_en_3_T_9 | _data_memory_wr_en_31_T_8
       & _data_memory_wr_en_3_T_9),
    .io_addr     (cache_addr),
    .io_data_in  (write_data[7:0]),
    .io_data_out (_data_memory_0_io_data_out)
  );
  ReadWriteSmem_1 data_memory_1 (
    .clock       (clock),
    .io_wr_en
      (allocate | _data_memory_wr_en_31_T & delayed_controller_byte_offset == 6'h1
       | _data_memory_wr_en_31_T_4 & _data_memory_wr_en_3_T_9 | _data_memory_wr_en_31_T_8
       & _data_memory_wr_en_3_T_9),
    .io_addr     (cache_addr),
    .io_data_in  (write_data[15:8]),
    .io_data_out (_data_memory_1_io_data_out)
  );
  ReadWriteSmem_1 data_memory_2 (
    .clock       (clock),
    .io_wr_en
      (allocate | _data_memory_wr_en_31_T & _data_memory_wr_en_3_T_5
       | _data_memory_wr_en_31_T_4 & _data_memory_wr_en_3_T_5 | _data_memory_wr_en_31_T_8
       & _data_memory_wr_en_3_T_9),
    .io_addr     (cache_addr),
    .io_data_in  (write_data[23:16]),
    .io_data_out (_data_memory_2_io_data_out)
  );
  ReadWriteSmem_1 data_memory_3 (
    .clock       (clock),
    .io_wr_en
      (allocate | _data_memory_wr_en_31_T & delayed_controller_byte_offset == 6'h3
       | _data_memory_wr_en_31_T_4 & _data_memory_wr_en_3_T_5 | _data_memory_wr_en_31_T_8
       & _data_memory_wr_en_3_T_9),
    .io_addr     (cache_addr),
    .io_data_in  (write_data[31:24]),
    .io_data_out (_data_memory_3_io_data_out)
  );
  ReadWriteSmem_1 data_memory_4 (
    .clock       (clock),
    .io_wr_en
      (allocate | _data_memory_wr_en_31_T & _data_memory_wr_en_7_T_9
       | _data_memory_wr_en_31_T_4 & _data_memory_wr_en_7_T_9 | _data_memory_wr_en_31_T_8
       & _data_memory_wr_en_7_T_9),
    .io_addr     (cache_addr),
    .io_data_in  (write_data[7:0]),
    .io_data_out (_data_memory_4_io_data_out)
  );
  ReadWriteSmem_1 data_memory_5 (
    .clock       (clock),
    .io_wr_en
      (allocate | _data_memory_wr_en_31_T & delayed_controller_byte_offset == 6'h5
       | _data_memory_wr_en_31_T_4 & _data_memory_wr_en_7_T_9 | _data_memory_wr_en_31_T_8
       & _data_memory_wr_en_7_T_9),
    .io_addr     (cache_addr),
    .io_data_in  (write_data[15:8]),
    .io_data_out (_data_memory_5_io_data_out)
  );
  ReadWriteSmem_1 data_memory_6 (
    .clock       (clock),
    .io_wr_en
      (allocate | _data_memory_wr_en_31_T & _data_memory_wr_en_7_T_5
       | _data_memory_wr_en_31_T_4 & _data_memory_wr_en_7_T_5 | _data_memory_wr_en_31_T_8
       & _data_memory_wr_en_7_T_9),
    .io_addr     (cache_addr),
    .io_data_in  (write_data[23:16]),
    .io_data_out (_data_memory_6_io_data_out)
  );
  ReadWriteSmem_1 data_memory_7 (
    .clock       (clock),
    .io_wr_en
      (allocate | _data_memory_wr_en_31_T & delayed_controller_byte_offset == 6'h7
       | _data_memory_wr_en_31_T_4 & _data_memory_wr_en_7_T_5 | _data_memory_wr_en_31_T_8
       & _data_memory_wr_en_7_T_9),
    .io_addr     (cache_addr),
    .io_data_in  (write_data[31:24]),
    .io_data_out (_data_memory_7_io_data_out)
  );
  ReadWriteSmem_1 data_memory_8 (
    .clock       (clock),
    .io_wr_en
      (allocate | _data_memory_wr_en_31_T & _data_memory_wr_en_11_T_9
       | _data_memory_wr_en_31_T_4 & _data_memory_wr_en_11_T_9 | _data_memory_wr_en_31_T_8
       & _data_memory_wr_en_11_T_9),
    .io_addr     (cache_addr),
    .io_data_in  (write_data[7:0]),
    .io_data_out (_data_memory_8_io_data_out)
  );
  ReadWriteSmem_1 data_memory_9 (
    .clock       (clock),
    .io_wr_en
      (allocate | _data_memory_wr_en_31_T & delayed_controller_byte_offset == 6'h9
       | _data_memory_wr_en_31_T_4 & _data_memory_wr_en_11_T_9 | _data_memory_wr_en_31_T_8
       & _data_memory_wr_en_11_T_9),
    .io_addr     (cache_addr),
    .io_data_in  (write_data[15:8]),
    .io_data_out (_data_memory_9_io_data_out)
  );
  ReadWriteSmem_1 data_memory_10 (
    .clock       (clock),
    .io_wr_en
      (allocate | _data_memory_wr_en_31_T & _data_memory_wr_en_11_T_5
       | _data_memory_wr_en_31_T_4 & _data_memory_wr_en_11_T_5 | _data_memory_wr_en_31_T_8
       & _data_memory_wr_en_11_T_9),
    .io_addr     (cache_addr),
    .io_data_in  (write_data[23:16]),
    .io_data_out (_data_memory_10_io_data_out)
  );
  ReadWriteSmem_1 data_memory_11 (
    .clock       (clock),
    .io_wr_en
      (allocate | _data_memory_wr_en_31_T & delayed_controller_byte_offset == 6'hB
       | _data_memory_wr_en_31_T_4 & _data_memory_wr_en_11_T_5 | _data_memory_wr_en_31_T_8
       & _data_memory_wr_en_11_T_9),
    .io_addr     (cache_addr),
    .io_data_in  (write_data[31:24]),
    .io_data_out (_data_memory_11_io_data_out)
  );
  ReadWriteSmem_1 data_memory_12 (
    .clock       (clock),
    .io_wr_en
      (allocate | _data_memory_wr_en_31_T & _data_memory_wr_en_15_T_9
       | _data_memory_wr_en_31_T_4 & _data_memory_wr_en_15_T_9 | _data_memory_wr_en_31_T_8
       & _data_memory_wr_en_15_T_9),
    .io_addr     (cache_addr),
    .io_data_in  (write_data[7:0]),
    .io_data_out (_data_memory_12_io_data_out)
  );
  ReadWriteSmem_1 data_memory_13 (
    .clock       (clock),
    .io_wr_en
      (allocate | _data_memory_wr_en_31_T & delayed_controller_byte_offset == 6'hD
       | _data_memory_wr_en_31_T_4 & _data_memory_wr_en_15_T_9 | _data_memory_wr_en_31_T_8
       & _data_memory_wr_en_15_T_9),
    .io_addr     (cache_addr),
    .io_data_in  (write_data[15:8]),
    .io_data_out (_data_memory_13_io_data_out)
  );
  ReadWriteSmem_1 data_memory_14 (
    .clock       (clock),
    .io_wr_en
      (allocate | _data_memory_wr_en_31_T & _data_memory_wr_en_15_T_5
       | _data_memory_wr_en_31_T_4 & _data_memory_wr_en_15_T_5 | _data_memory_wr_en_31_T_8
       & _data_memory_wr_en_15_T_9),
    .io_addr     (cache_addr),
    .io_data_in  (write_data[23:16]),
    .io_data_out (_data_memory_14_io_data_out)
  );
  ReadWriteSmem_1 data_memory_15 (
    .clock       (clock),
    .io_wr_en
      (allocate | _data_memory_wr_en_31_T & delayed_controller_byte_offset == 6'hF
       | _data_memory_wr_en_31_T_4 & _data_memory_wr_en_15_T_5 | _data_memory_wr_en_31_T_8
       & _data_memory_wr_en_15_T_9),
    .io_addr     (cache_addr),
    .io_data_in  (write_data[31:24]),
    .io_data_out (_data_memory_15_io_data_out)
  );
  ReadWriteSmem_1 data_memory_16 (
    .clock       (clock),
    .io_wr_en
      (allocate | _data_memory_wr_en_31_T & _data_memory_wr_en_19_T_9
       | _data_memory_wr_en_31_T_4 & _data_memory_wr_en_19_T_9 | _data_memory_wr_en_31_T_8
       & _data_memory_wr_en_19_T_9),
    .io_addr     (cache_addr),
    .io_data_in  (write_data[7:0]),
    .io_data_out (_data_memory_16_io_data_out)
  );
  ReadWriteSmem_1 data_memory_17 (
    .clock       (clock),
    .io_wr_en
      (allocate | _data_memory_wr_en_31_T & delayed_controller_byte_offset == 6'h11
       | _data_memory_wr_en_31_T_4 & _data_memory_wr_en_19_T_9 | _data_memory_wr_en_31_T_8
       & _data_memory_wr_en_19_T_9),
    .io_addr     (cache_addr),
    .io_data_in  (write_data[15:8]),
    .io_data_out (_data_memory_17_io_data_out)
  );
  ReadWriteSmem_1 data_memory_18 (
    .clock       (clock),
    .io_wr_en
      (allocate | _data_memory_wr_en_31_T & _data_memory_wr_en_19_T_5
       | _data_memory_wr_en_31_T_4 & _data_memory_wr_en_19_T_5 | _data_memory_wr_en_31_T_8
       & _data_memory_wr_en_19_T_9),
    .io_addr     (cache_addr),
    .io_data_in  (write_data[23:16]),
    .io_data_out (_data_memory_18_io_data_out)
  );
  ReadWriteSmem_1 data_memory_19 (
    .clock       (clock),
    .io_wr_en
      (allocate | _data_memory_wr_en_31_T & delayed_controller_byte_offset == 6'h13
       | _data_memory_wr_en_31_T_4 & _data_memory_wr_en_19_T_5 | _data_memory_wr_en_31_T_8
       & _data_memory_wr_en_19_T_9),
    .io_addr     (cache_addr),
    .io_data_in  (write_data[31:24]),
    .io_data_out (_data_memory_19_io_data_out)
  );
  ReadWriteSmem_1 data_memory_20 (
    .clock       (clock),
    .io_wr_en
      (allocate | _data_memory_wr_en_31_T & _data_memory_wr_en_23_T_9
       | _data_memory_wr_en_31_T_4 & _data_memory_wr_en_23_T_9 | _data_memory_wr_en_31_T_8
       & _data_memory_wr_en_23_T_9),
    .io_addr     (cache_addr),
    .io_data_in  (write_data[7:0]),
    .io_data_out (_data_memory_20_io_data_out)
  );
  ReadWriteSmem_1 data_memory_21 (
    .clock       (clock),
    .io_wr_en
      (allocate | _data_memory_wr_en_31_T & delayed_controller_byte_offset == 6'h15
       | _data_memory_wr_en_31_T_4 & _data_memory_wr_en_23_T_9 | _data_memory_wr_en_31_T_8
       & _data_memory_wr_en_23_T_9),
    .io_addr     (cache_addr),
    .io_data_in  (write_data[15:8]),
    .io_data_out (_data_memory_21_io_data_out)
  );
  ReadWriteSmem_1 data_memory_22 (
    .clock       (clock),
    .io_wr_en
      (allocate | _data_memory_wr_en_31_T & _data_memory_wr_en_23_T_5
       | _data_memory_wr_en_31_T_4 & _data_memory_wr_en_23_T_5 | _data_memory_wr_en_31_T_8
       & _data_memory_wr_en_23_T_9),
    .io_addr     (cache_addr),
    .io_data_in  (write_data[23:16]),
    .io_data_out (_data_memory_22_io_data_out)
  );
  ReadWriteSmem_1 data_memory_23 (
    .clock       (clock),
    .io_wr_en
      (allocate | _data_memory_wr_en_31_T & delayed_controller_byte_offset == 6'h17
       | _data_memory_wr_en_31_T_4 & _data_memory_wr_en_23_T_5 | _data_memory_wr_en_31_T_8
       & _data_memory_wr_en_23_T_9),
    .io_addr     (cache_addr),
    .io_data_in  (write_data[31:24]),
    .io_data_out (_data_memory_23_io_data_out)
  );
  ReadWriteSmem_1 data_memory_24 (
    .clock       (clock),
    .io_wr_en
      (allocate | _data_memory_wr_en_31_T & _data_memory_wr_en_27_T_9
       | _data_memory_wr_en_31_T_4 & _data_memory_wr_en_27_T_9 | _data_memory_wr_en_31_T_8
       & _data_memory_wr_en_27_T_9),
    .io_addr     (cache_addr),
    .io_data_in  (write_data[7:0]),
    .io_data_out (_data_memory_24_io_data_out)
  );
  ReadWriteSmem_1 data_memory_25 (
    .clock       (clock),
    .io_wr_en
      (allocate | _data_memory_wr_en_31_T & delayed_controller_byte_offset == 6'h19
       | _data_memory_wr_en_31_T_4 & _data_memory_wr_en_27_T_9 | _data_memory_wr_en_31_T_8
       & _data_memory_wr_en_27_T_9),
    .io_addr     (cache_addr),
    .io_data_in  (write_data[15:8]),
    .io_data_out (_data_memory_25_io_data_out)
  );
  ReadWriteSmem_1 data_memory_26 (
    .clock       (clock),
    .io_wr_en
      (allocate | _data_memory_wr_en_31_T & _data_memory_wr_en_27_T_5
       | _data_memory_wr_en_31_T_4 & _data_memory_wr_en_27_T_5 | _data_memory_wr_en_31_T_8
       & _data_memory_wr_en_27_T_9),
    .io_addr     (cache_addr),
    .io_data_in  (write_data[23:16]),
    .io_data_out (_data_memory_26_io_data_out)
  );
  ReadWriteSmem_1 data_memory_27 (
    .clock       (clock),
    .io_wr_en
      (allocate | _data_memory_wr_en_31_T & delayed_controller_byte_offset == 6'h1B
       | _data_memory_wr_en_31_T_4 & _data_memory_wr_en_27_T_5 | _data_memory_wr_en_31_T_8
       & _data_memory_wr_en_27_T_9),
    .io_addr     (cache_addr),
    .io_data_in  (write_data[31:24]),
    .io_data_out (_data_memory_27_io_data_out)
  );
  ReadWriteSmem_1 data_memory_28 (
    .clock       (clock),
    .io_wr_en
      (allocate | _data_memory_wr_en_31_T & _data_memory_wr_en_31_T_9
       | _data_memory_wr_en_31_T_4 & _data_memory_wr_en_31_T_9 | _data_memory_wr_en_31_T_8
       & _data_memory_wr_en_31_T_9),
    .io_addr     (cache_addr),
    .io_data_in  (write_data[7:0]),
    .io_data_out (_data_memory_28_io_data_out)
  );
  ReadWriteSmem_1 data_memory_29 (
    .clock       (clock),
    .io_wr_en
      (allocate | _data_memory_wr_en_31_T & delayed_controller_byte_offset == 6'h1D
       | _data_memory_wr_en_31_T_4 & _data_memory_wr_en_31_T_9 | _data_memory_wr_en_31_T_8
       & _data_memory_wr_en_31_T_9),
    .io_addr     (cache_addr),
    .io_data_in  (write_data[15:8]),
    .io_data_out (_data_memory_29_io_data_out)
  );
  ReadWriteSmem_1 data_memory_30 (
    .clock       (clock),
    .io_wr_en
      (allocate | _data_memory_wr_en_31_T & _data_memory_wr_en_31_T_5
       | _data_memory_wr_en_31_T_4 & _data_memory_wr_en_31_T_5 | _data_memory_wr_en_31_T_8
       & _data_memory_wr_en_31_T_9),
    .io_addr     (cache_addr),
    .io_data_in  (write_data[23:16]),
    .io_data_out (_data_memory_30_io_data_out)
  );
  ReadWriteSmem_1 data_memory_31 (
    .clock       (clock),
    .io_wr_en
      (allocate | _data_memory_wr_en_31_T & delayed_controller_byte_offset == 6'h1F
       | _data_memory_wr_en_31_T_4 & _data_memory_wr_en_31_T_5 | _data_memory_wr_en_31_T_8
       & _data_memory_wr_en_31_T_9),
    .io_addr     (cache_addr),
    .io_data_in  (write_data[31:24]),
    .io_data_out (_data_memory_31_io_data_out)
  );
  assign io_cache_dout =
    sel_output_mask == 3'h2
      ? {16'h0, data_out_pre_mask[15:0]}
      : sel_output_mask == 3'h1
          ? {24'h0, data_out_pre_mask[7:0]}
          : sel_output_mask == 3'h0 ? {28'h0, data_out_pre_mask[3:0]} : 32'h0;
  assign io_cache_addr = 32'h0;
  assign io_cache_valid = io_cache_valid_r_2;
  assign io_cache_hit = io_cache_hit_r_1;
endmodule

