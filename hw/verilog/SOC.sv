// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module SOC(
  input                                                                                                                                                                                                                                    clock,
                                                                                                                                                                                                                                           reset,
                                                                                                                                                                                                                                           io_dram_AXI_AXI_AW_ready,
  output                                                                                                                                                                                                                                   io_dram_AXI_AXI_AW_valid,
  output struct packed {logic [7:0] awid; logic [31:0] awaddr; logic [7:0] awlen; logic [2:0] awsize; logic [1:0] awburst; logic awlock; logic [3:0] awcache; logic [2:0] awprot; logic [3:0] awqos; logic [3:0] awregion; logic awuser; } io_dram_AXI_AXI_AW_bits,
  input                                                                                                                                                                                                                                    io_dram_AXI_AXI_W_ready,
  output                                                                                                                                                                                                                                   io_dram_AXI_AXI_W_valid,
  output struct packed {logic [31:0] wdata; logic [3:0] wstrb; logic wlast; logic wuser; }                                                                                                                                                 io_dram_AXI_AXI_W_bits,
  output                                                                                                                                                                                                                                   io_dram_AXI_AXI_B_ready,
  input                                                                                                                                                                                                                                    io_dram_AXI_AXI_B_valid,
  input  struct packed {logic [7:0] bid; logic [1:0] bresp; logic buser; }                                                                                                                                                                 io_dram_AXI_AXI_B_bits,
  input                                                                                                                                                                                                                                    io_dram_AXI_AXI_AR_ready,
  output                                                                                                                                                                                                                                   io_dram_AXI_AXI_AR_valid,
  output struct packed {logic [7:0] arid; logic [31:0] araddr; logic [7:0] arlen; logic [2:0] arsize; logic [1:0] arburst; logic arlock; logic [3:0] arcache; logic [2:0] arprot; logic [3:0] arqos; logic [3:0] arregion; logic aruser; } io_dram_AXI_AXI_AR_bits,
  output                                                                                                                                                                                                                                   io_dram_AXI_AXI_R_ready,
  input                                                                                                                                                                                                                                    io_dram_AXI_AXI_R_valid,
  input  struct packed {logic [7:0] rid; logic [31:0] rdata; logic [1:0] rresp; logic rlast; logic ruser; }                                                                                                                                io_dram_AXI_AXI_R_bits
);

  wire _axi_interconnect_io_m_AXI_port_0_AXI_AW_ready;
  wire _axi_interconnect_io_m_AXI_port_0_AXI_W_ready;
  wire _axi_interconnect_io_m_AXI_port_0_AXI_B_valid;
  wire struct packed {logic [7:0] bid; logic [1:0] bresp; logic buser; }
    _axi_interconnect_io_m_AXI_port_0_AXI_B_bits;
  wire _axi_interconnect_io_m_AXI_port_0_AXI_AR_ready;
  wire _axi_interconnect_io_m_AXI_port_0_AXI_R_valid;
  wire
    struct packed {logic [7:0] rid; logic [31:0] rdata; logic [1:0] rresp; logic rlast; logic ruser; }
    _axi_interconnect_io_m_AXI_port_0_AXI_R_bits;
  wire _axi_interconnect_io_m_AXI_port_1_AXI_AW_ready;
  wire _axi_interconnect_io_m_AXI_port_1_AXI_W_ready;
  wire _axi_interconnect_io_m_AXI_port_1_AXI_B_valid;
  wire struct packed {logic [7:0] bid; logic [1:0] bresp; logic buser; }
    _axi_interconnect_io_m_AXI_port_1_AXI_B_bits;
  wire _axi_interconnect_io_m_AXI_port_1_AXI_AR_ready;
  wire _axi_interconnect_io_m_AXI_port_1_AXI_R_valid;
  wire
    struct packed {logic [7:0] rid; logic [31:0] rdata; logic [1:0] rresp; logic rlast; logic ruser; }
    _axi_interconnect_io_m_AXI_port_1_AXI_R_bits;
  wire _axi_interconnect_io_s_AXI_port_1_AXI_AW_valid;
  wire
    struct packed {logic [7:0] awid; logic [31:0] awaddr; logic [7:0] awlen; logic [2:0] awsize; logic [1:0] awburst; logic awlock; logic [3:0] awcache; logic [2:0] awprot; logic [3:0] awqos; logic [3:0] awregion; logic awuser; }
    _axi_interconnect_io_s_AXI_port_1_AXI_AW_bits;
  wire _axi_interconnect_io_s_AXI_port_1_AXI_W_valid;
  wire struct packed {logic [31:0] wdata; logic [3:0] wstrb; logic wlast; logic wuser; }
    _axi_interconnect_io_s_AXI_port_1_AXI_W_bits;
  wire _axi_interconnect_io_s_AXI_port_1_AXI_B_ready;
  wire _axi_interconnect_io_s_AXI_port_1_AXI_AR_valid;
  wire
    struct packed {logic [7:0] arid; logic [31:0] araddr; logic [7:0] arlen; logic [2:0] arsize; logic [1:0] arburst; logic arlock; logic [3:0] arcache; logic [2:0] arprot; logic [3:0] arqos; logic [3:0] arregion; logic aruser; }
    _axi_interconnect_io_s_AXI_port_1_AXI_AR_bits;
  wire _axi_interconnect_io_s_AXI_port_1_AXI_R_ready;
  wire _AXI_debug_printer_io_s_AXI_AXI_AW_ready;
  wire _AXI_debug_printer_io_s_AXI_AXI_W_ready;
  wire struct packed {logic [7:0] bid; logic [1:0] bresp; logic buser; }
    _AXI_debug_printer_io_s_AXI_AXI_B_bits;
  wire _AXI_debug_printer_io_s_AXI_AXI_AR_ready;
  wire
    struct packed {logic [7:0] rid; logic [31:0] rdata; logic [1:0] rresp; logic rlast; logic ruser; }
    _AXI_debug_printer_io_s_AXI_AXI_R_bits;
  wire _ChaosCore_tile_io_instruction_cache_AXI_port_AXI_AW_valid;
  wire
    struct packed {logic [7:0] awid; logic [31:0] awaddr; logic [7:0] awlen; logic [2:0] awsize; logic [1:0] awburst; logic awlock; logic [3:0] awcache; logic [2:0] awprot; logic [3:0] awqos; logic [3:0] awregion; logic awuser; }
    _ChaosCore_tile_io_instruction_cache_AXI_port_AXI_AW_bits;
  wire _ChaosCore_tile_io_instruction_cache_AXI_port_AXI_W_valid;
  wire struct packed {logic [31:0] wdata; logic [3:0] wstrb; logic wlast; logic wuser; }
    _ChaosCore_tile_io_instruction_cache_AXI_port_AXI_W_bits;
  wire _ChaosCore_tile_io_instruction_cache_AXI_port_AXI_B_ready;
  wire _ChaosCore_tile_io_instruction_cache_AXI_port_AXI_AR_valid;
  wire
    struct packed {logic [7:0] arid; logic [31:0] araddr; logic [7:0] arlen; logic [2:0] arsize; logic [1:0] arburst; logic arlock; logic [3:0] arcache; logic [2:0] arprot; logic [3:0] arqos; logic [3:0] arregion; logic aruser; }
    _ChaosCore_tile_io_instruction_cache_AXI_port_AXI_AR_bits;
  wire _ChaosCore_tile_io_instruction_cache_AXI_port_AXI_R_ready;
  wire _ChaosCore_tile_io_data_cache_AXI_port_AXI_AW_valid;
  wire
    struct packed {logic [7:0] awid; logic [31:0] awaddr; logic [7:0] awlen; logic [2:0] awsize; logic [1:0] awburst; logic awlock; logic [3:0] awcache; logic [2:0] awprot; logic [3:0] awqos; logic [3:0] awregion; logic awuser; }
    _ChaosCore_tile_io_data_cache_AXI_port_AXI_AW_bits;
  wire _ChaosCore_tile_io_data_cache_AXI_port_AXI_W_valid;
  wire struct packed {logic [31:0] wdata; logic [3:0] wstrb; logic wlast; logic wuser; }
    _ChaosCore_tile_io_data_cache_AXI_port_AXI_W_bits;
  wire _ChaosCore_tile_io_data_cache_AXI_port_AXI_B_ready;
  wire _ChaosCore_tile_io_data_cache_AXI_port_AXI_AR_valid;
  wire
    struct packed {logic [7:0] arid; logic [31:0] araddr; logic [7:0] arlen; logic [2:0] arsize; logic [1:0] arburst; logic arlock; logic [3:0] arcache; logic [2:0] arprot; logic [3:0] arqos; logic [3:0] arregion; logic aruser; }
    _ChaosCore_tile_io_data_cache_AXI_port_AXI_AR_bits;
  wire _ChaosCore_tile_io_data_cache_AXI_port_AXI_R_ready;
  ChaosCore_tile ChaosCore_tile (
    .clock                                      (clock),
    .reset                                      (reset),
    .io_instruction_cache_AXI_port_AXI_AW_ready
      (_axi_interconnect_io_m_AXI_port_0_AXI_AW_ready),
    .io_instruction_cache_AXI_port_AXI_AW_valid
      (_ChaosCore_tile_io_instruction_cache_AXI_port_AXI_AW_valid),
    .io_instruction_cache_AXI_port_AXI_AW_bits
      (_ChaosCore_tile_io_instruction_cache_AXI_port_AXI_AW_bits),
    .io_instruction_cache_AXI_port_AXI_W_ready
      (_axi_interconnect_io_m_AXI_port_0_AXI_W_ready),
    .io_instruction_cache_AXI_port_AXI_W_valid
      (_ChaosCore_tile_io_instruction_cache_AXI_port_AXI_W_valid),
    .io_instruction_cache_AXI_port_AXI_W_bits
      (_ChaosCore_tile_io_instruction_cache_AXI_port_AXI_W_bits),
    .io_instruction_cache_AXI_port_AXI_B_ready
      (_ChaosCore_tile_io_instruction_cache_AXI_port_AXI_B_ready),
    .io_instruction_cache_AXI_port_AXI_B_valid
      (_axi_interconnect_io_m_AXI_port_0_AXI_B_valid),
    .io_instruction_cache_AXI_port_AXI_B_bits
      (_axi_interconnect_io_m_AXI_port_0_AXI_B_bits),
    .io_instruction_cache_AXI_port_AXI_AR_ready
      (_axi_interconnect_io_m_AXI_port_0_AXI_AR_ready),
    .io_instruction_cache_AXI_port_AXI_AR_valid
      (_ChaosCore_tile_io_instruction_cache_AXI_port_AXI_AR_valid),
    .io_instruction_cache_AXI_port_AXI_AR_bits
      (_ChaosCore_tile_io_instruction_cache_AXI_port_AXI_AR_bits),
    .io_instruction_cache_AXI_port_AXI_R_ready
      (_ChaosCore_tile_io_instruction_cache_AXI_port_AXI_R_ready),
    .io_instruction_cache_AXI_port_AXI_R_valid
      (_axi_interconnect_io_m_AXI_port_0_AXI_R_valid),
    .io_instruction_cache_AXI_port_AXI_R_bits
      (_axi_interconnect_io_m_AXI_port_0_AXI_R_bits),
    .io_data_cache_AXI_port_AXI_AW_ready
      (_axi_interconnect_io_m_AXI_port_1_AXI_AW_ready),
    .io_data_cache_AXI_port_AXI_AW_valid
      (_ChaosCore_tile_io_data_cache_AXI_port_AXI_AW_valid),
    .io_data_cache_AXI_port_AXI_AW_bits
      (_ChaosCore_tile_io_data_cache_AXI_port_AXI_AW_bits),
    .io_data_cache_AXI_port_AXI_W_ready
      (_axi_interconnect_io_m_AXI_port_1_AXI_W_ready),
    .io_data_cache_AXI_port_AXI_W_valid
      (_ChaosCore_tile_io_data_cache_AXI_port_AXI_W_valid),
    .io_data_cache_AXI_port_AXI_W_bits
      (_ChaosCore_tile_io_data_cache_AXI_port_AXI_W_bits),
    .io_data_cache_AXI_port_AXI_B_ready
      (_ChaosCore_tile_io_data_cache_AXI_port_AXI_B_ready),
    .io_data_cache_AXI_port_AXI_B_valid
      (_axi_interconnect_io_m_AXI_port_1_AXI_B_valid),
    .io_data_cache_AXI_port_AXI_B_bits
      (_axi_interconnect_io_m_AXI_port_1_AXI_B_bits),
    .io_data_cache_AXI_port_AXI_AR_ready
      (_axi_interconnect_io_m_AXI_port_1_AXI_AR_ready),
    .io_data_cache_AXI_port_AXI_AR_valid
      (_ChaosCore_tile_io_data_cache_AXI_port_AXI_AR_valid),
    .io_data_cache_AXI_port_AXI_AR_bits
      (_ChaosCore_tile_io_data_cache_AXI_port_AXI_AR_bits),
    .io_data_cache_AXI_port_AXI_R_ready
      (_ChaosCore_tile_io_data_cache_AXI_port_AXI_R_ready),
    .io_data_cache_AXI_port_AXI_R_valid
      (_axi_interconnect_io_m_AXI_port_1_AXI_R_valid),
    .io_data_cache_AXI_port_AXI_R_bits
      (_axi_interconnect_io_m_AXI_port_1_AXI_R_bits)
  );
  AXI_debug_printer AXI_debug_printer (
    .clock                 (clock),
    .io_s_AXI_AXI_AW_ready (_AXI_debug_printer_io_s_AXI_AXI_AW_ready),
    .io_s_AXI_AXI_AW_valid (_axi_interconnect_io_s_AXI_port_1_AXI_AW_valid),
    .io_s_AXI_AXI_AW_bits  (_axi_interconnect_io_s_AXI_port_1_AXI_AW_bits),
    .io_s_AXI_AXI_W_ready  (_AXI_debug_printer_io_s_AXI_AXI_W_ready),
    .io_s_AXI_AXI_W_valid  (_axi_interconnect_io_s_AXI_port_1_AXI_W_valid),
    .io_s_AXI_AXI_W_bits   (_axi_interconnect_io_s_AXI_port_1_AXI_W_bits),
    .io_s_AXI_AXI_B_ready  (_axi_interconnect_io_s_AXI_port_1_AXI_B_ready),
    .io_s_AXI_AXI_B_bits   (_AXI_debug_printer_io_s_AXI_AXI_B_bits),
    .io_s_AXI_AXI_AR_ready (_AXI_debug_printer_io_s_AXI_AXI_AR_ready),
    .io_s_AXI_AXI_AR_valid (_axi_interconnect_io_s_AXI_port_1_AXI_AR_valid),
    .io_s_AXI_AXI_AR_bits  (_axi_interconnect_io_s_AXI_port_1_AXI_AR_bits),
    .io_s_AXI_AXI_R_ready  (_axi_interconnect_io_s_AXI_port_1_AXI_R_ready),
    .io_s_AXI_AXI_R_bits   (_AXI_debug_printer_io_s_AXI_AXI_R_bits)
  );
  axi_interconnect_2x2 axi_interconnect (
    .clock                        (clock),
    .reset                        (reset),
    .io_m_AXI_port_0_AXI_AW_ready (_axi_interconnect_io_m_AXI_port_0_AXI_AW_ready),
    .io_m_AXI_port_0_AXI_AW_valid
      (_ChaosCore_tile_io_instruction_cache_AXI_port_AXI_AW_valid),
    .io_m_AXI_port_0_AXI_AW_bits
      (_ChaosCore_tile_io_instruction_cache_AXI_port_AXI_AW_bits),
    .io_m_AXI_port_0_AXI_W_ready  (_axi_interconnect_io_m_AXI_port_0_AXI_W_ready),
    .io_m_AXI_port_0_AXI_W_valid
      (_ChaosCore_tile_io_instruction_cache_AXI_port_AXI_W_valid),
    .io_m_AXI_port_0_AXI_W_bits
      (_ChaosCore_tile_io_instruction_cache_AXI_port_AXI_W_bits),
    .io_m_AXI_port_0_AXI_B_ready
      (_ChaosCore_tile_io_instruction_cache_AXI_port_AXI_B_ready),
    .io_m_AXI_port_0_AXI_B_valid  (_axi_interconnect_io_m_AXI_port_0_AXI_B_valid),
    .io_m_AXI_port_0_AXI_B_bits   (_axi_interconnect_io_m_AXI_port_0_AXI_B_bits),
    .io_m_AXI_port_0_AXI_AR_ready (_axi_interconnect_io_m_AXI_port_0_AXI_AR_ready),
    .io_m_AXI_port_0_AXI_AR_valid
      (_ChaosCore_tile_io_instruction_cache_AXI_port_AXI_AR_valid),
    .io_m_AXI_port_0_AXI_AR_bits
      (_ChaosCore_tile_io_instruction_cache_AXI_port_AXI_AR_bits),
    .io_m_AXI_port_0_AXI_R_ready
      (_ChaosCore_tile_io_instruction_cache_AXI_port_AXI_R_ready),
    .io_m_AXI_port_0_AXI_R_valid  (_axi_interconnect_io_m_AXI_port_0_AXI_R_valid),
    .io_m_AXI_port_0_AXI_R_bits   (_axi_interconnect_io_m_AXI_port_0_AXI_R_bits),
    .io_m_AXI_port_1_AXI_AW_ready (_axi_interconnect_io_m_AXI_port_1_AXI_AW_ready),
    .io_m_AXI_port_1_AXI_AW_valid (_ChaosCore_tile_io_data_cache_AXI_port_AXI_AW_valid),
    .io_m_AXI_port_1_AXI_AW_bits  (_ChaosCore_tile_io_data_cache_AXI_port_AXI_AW_bits),
    .io_m_AXI_port_1_AXI_W_ready  (_axi_interconnect_io_m_AXI_port_1_AXI_W_ready),
    .io_m_AXI_port_1_AXI_W_valid  (_ChaosCore_tile_io_data_cache_AXI_port_AXI_W_valid),
    .io_m_AXI_port_1_AXI_W_bits   (_ChaosCore_tile_io_data_cache_AXI_port_AXI_W_bits),
    .io_m_AXI_port_1_AXI_B_ready  (_ChaosCore_tile_io_data_cache_AXI_port_AXI_B_ready),
    .io_m_AXI_port_1_AXI_B_valid  (_axi_interconnect_io_m_AXI_port_1_AXI_B_valid),
    .io_m_AXI_port_1_AXI_B_bits   (_axi_interconnect_io_m_AXI_port_1_AXI_B_bits),
    .io_m_AXI_port_1_AXI_AR_ready (_axi_interconnect_io_m_AXI_port_1_AXI_AR_ready),
    .io_m_AXI_port_1_AXI_AR_valid (_ChaosCore_tile_io_data_cache_AXI_port_AXI_AR_valid),
    .io_m_AXI_port_1_AXI_AR_bits  (_ChaosCore_tile_io_data_cache_AXI_port_AXI_AR_bits),
    .io_m_AXI_port_1_AXI_R_ready  (_ChaosCore_tile_io_data_cache_AXI_port_AXI_R_ready),
    .io_m_AXI_port_1_AXI_R_valid  (_axi_interconnect_io_m_AXI_port_1_AXI_R_valid),
    .io_m_AXI_port_1_AXI_R_bits   (_axi_interconnect_io_m_AXI_port_1_AXI_R_bits),
    .io_s_AXI_port_0_AXI_AW_ready (io_dram_AXI_AXI_AW_ready),
    .io_s_AXI_port_0_AXI_AW_valid (io_dram_AXI_AXI_AW_valid),
    .io_s_AXI_port_0_AXI_AW_bits  (io_dram_AXI_AXI_AW_bits),
    .io_s_AXI_port_0_AXI_W_ready  (io_dram_AXI_AXI_W_ready),
    .io_s_AXI_port_0_AXI_W_valid  (io_dram_AXI_AXI_W_valid),
    .io_s_AXI_port_0_AXI_W_bits   (io_dram_AXI_AXI_W_bits),
    .io_s_AXI_port_0_AXI_B_ready  (io_dram_AXI_AXI_B_ready),
    .io_s_AXI_port_0_AXI_B_valid  (io_dram_AXI_AXI_B_valid),
    .io_s_AXI_port_0_AXI_B_bits   (io_dram_AXI_AXI_B_bits),
    .io_s_AXI_port_0_AXI_AR_ready (io_dram_AXI_AXI_AR_ready),
    .io_s_AXI_port_0_AXI_AR_valid (io_dram_AXI_AXI_AR_valid),
    .io_s_AXI_port_0_AXI_AR_bits  (io_dram_AXI_AXI_AR_bits),
    .io_s_AXI_port_0_AXI_R_ready  (io_dram_AXI_AXI_R_ready),
    .io_s_AXI_port_0_AXI_R_valid  (io_dram_AXI_AXI_R_valid),
    .io_s_AXI_port_0_AXI_R_bits   (io_dram_AXI_AXI_R_bits),
    .io_s_AXI_port_1_AXI_AW_ready (_AXI_debug_printer_io_s_AXI_AXI_AW_ready),
    .io_s_AXI_port_1_AXI_AW_valid (_axi_interconnect_io_s_AXI_port_1_AXI_AW_valid),
    .io_s_AXI_port_1_AXI_AW_bits  (_axi_interconnect_io_s_AXI_port_1_AXI_AW_bits),
    .io_s_AXI_port_1_AXI_W_ready  (_AXI_debug_printer_io_s_AXI_AXI_W_ready),
    .io_s_AXI_port_1_AXI_W_valid  (_axi_interconnect_io_s_AXI_port_1_AXI_W_valid),
    .io_s_AXI_port_1_AXI_W_bits   (_axi_interconnect_io_s_AXI_port_1_AXI_W_bits),
    .io_s_AXI_port_1_AXI_B_ready  (_axi_interconnect_io_s_AXI_port_1_AXI_B_ready),
    .io_s_AXI_port_1_AXI_B_valid  (1'h0),
    .io_s_AXI_port_1_AXI_B_bits   (_AXI_debug_printer_io_s_AXI_AXI_B_bits),
    .io_s_AXI_port_1_AXI_AR_ready (_AXI_debug_printer_io_s_AXI_AXI_AR_ready),
    .io_s_AXI_port_1_AXI_AR_valid (_axi_interconnect_io_s_AXI_port_1_AXI_AR_valid),
    .io_s_AXI_port_1_AXI_AR_bits  (_axi_interconnect_io_s_AXI_port_1_AXI_AR_bits),
    .io_s_AXI_port_1_AXI_R_ready  (_axi_interconnect_io_s_AXI_port_1_AXI_R_ready),
    .io_s_AXI_port_1_AXI_R_valid  (1'h0),
    .io_s_AXI_port_1_AXI_R_bits   (_AXI_debug_printer_io_s_AXI_AXI_R_bits)
  );
endmodule

