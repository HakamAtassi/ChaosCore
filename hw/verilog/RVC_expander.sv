// Generated by CIRCT firtool-1.62.0
module RVC_expander(
  input         clock,
                reset,
  output        io_compressed_instr_ready,
  input         io_compressed_instr_valid,
  input  [15:0] io_compressed_instr_bits_instruction,
  input  [3:0]  io_compressed_instr_bits_packet_index,
  input  [5:0]  io_compressed_instr_bits_ROB_index,
  input         io_instruction_ready,
  output        io_instruction_valid,
  output [31:0] io_instruction_bits_instruction,
  output [3:0]  io_instruction_bits_packet_index,
  output [5:0]  io_instruction_bits_ROB_index
);

  wire [4:0]  decoded_instr_rd;
  wire [4:0]  decoded_instr_rs2;
  wire [4:0]  decoded_instr_rs1;
  wire        _GEN;
  wire [2:0]  decoded_instr_funct3;
  wire [6:0]  decoded_instr_opcode;
  wire        Q0 = io_compressed_instr_bits_instruction[1:0] == 2'h0;
  wire        Q1 = io_compressed_instr_bits_instruction[1:0] == 2'h1;
  wire        Q2 = io_compressed_instr_bits_instruction[1:0] == 2'h2;
  wire        _SLLI_T = io_compressed_instr_bits_instruction[15:13] == 3'h0;
  wire        ADDI4SPN = _SLLI_T & Q0 & (|(io_compressed_instr_bits_instruction[12:5]));
  wire        _LWSP_T = io_compressed_instr_bits_instruction[15:13] == 3'h2;
  wire        LW = _LWSP_T & Q0;
  wire        _SWSP_T = io_compressed_instr_bits_instruction[15:13] == 3'h6;
  wire        SW = _SWSP_T & Q0;
  wire [5:0]  _ADDI_T_4 =
    {io_compressed_instr_bits_instruction[12], io_compressed_instr_bits_instruction[6:2]};
  wire        NOP =
    _SLLI_T & Q1 & io_compressed_instr_bits_instruction[11:7] == 5'h0 & (|_ADDI_T_4);
  wire        ADDI =
    _SLLI_T & Q1 & (|(io_compressed_instr_bits_instruction[11:7])) & (|_ADDI_T_4);
  wire        JAL = io_compressed_instr_bits_instruction[15:13] == 3'h1 & Q1;
  wire        LI = _LWSP_T & Q1 & (|(io_compressed_instr_bits_instruction[11:7]));
  wire        _LUI_T = io_compressed_instr_bits_instruction[15:13] == 3'h3;
  wire        ADDI16SP = _LUI_T & Q1 & io_compressed_instr_bits_instruction[11:7] == 5'h2;
  wire        LUI =
    _LUI_T & Q1 & (|(io_compressed_instr_bits_instruction[11:7]))
    & io_compressed_instr_bits_instruction[11:7] != 5'h2
    & (|(io_compressed_instr_bits_instruction[6:2]));
  wire        SRLI =
    io_compressed_instr_bits_instruction[15:10] == 6'h10 & Q1
    & (|(io_compressed_instr_bits_instruction[6:2]))
    & ~(io_compressed_instr_bits_instruction[12]);
  wire        _AND_T = io_compressed_instr_bits_instruction[15:10] == 6'h11;
  wire        SRAI =
    _AND_T & Q1 & (|(io_compressed_instr_bits_instruction[6:2]))
    & ~(io_compressed_instr_bits_instruction[12]);
  wire        _ADD_T = io_compressed_instr_bits_instruction[15:13] == 3'h4;
  wire        ANDI = _ADD_T & io_compressed_instr_bits_instruction[11:10] == 2'h2 & Q1;
  wire        SUB = io_compressed_instr_bits_instruction[15:10] == 6'h13 & Q1;
  wire        XOR = _AND_T & Q1;
  wire        OR = _AND_T & Q1;
  wire        AND = _AND_T & Q1;
  wire        J = io_compressed_instr_bits_instruction[15:13] == 3'h5 & Q1;
  wire        BEQZ = _SWSP_T & Q1;
  wire        BNEZ = (&(io_compressed_instr_bits_instruction[15:13])) & Q1;
  wire        SLLI =
    _SLLI_T & Q2 & ~(io_compressed_instr_bits_instruction[12])
    & (|(io_compressed_instr_bits_instruction[6:2]))
    & (|(io_compressed_instr_bits_instruction[11:7]));
  wire        _JALR_T_4 = io_compressed_instr_bits_instruction[6:2] == 5'h0;
  wire        JR =
    _ADD_T & Q2 & ~(io_compressed_instr_bits_instruction[12]) & _JALR_T_4
    & (|(io_compressed_instr_bits_instruction[11:7]));
  wire        MV = _ADD_T & Q2 & (|(io_compressed_instr_bits_instruction[11:7]));
  wire        EBREAK =
    _ADD_T & Q2 & io_compressed_instr_bits_instruction[12:2] == 11'h400;
  wire        JALR =
    _ADD_T & Q2 & io_compressed_instr_bits_instruction[12] & _JALR_T_4
    & (|(io_compressed_instr_bits_instruction[11:7]));
  wire        ADD =
    _ADD_T & Q2 & io_compressed_instr_bits_instruction[12]
    & (|(io_compressed_instr_bits_instruction[6:2]))
    & (|(io_compressed_instr_bits_instruction[11:7]));
  wire        LWSP = _LWSP_T & Q2 & (|(io_compressed_instr_bits_instruction[11:7]));
  wire        SWSP = _SWSP_T & Q2;
  wire        CR = JR | JALR | MV | ADD;
  wire        CA = AND | OR | XOR | SUB;
  wire        _CB_T = BEQZ | BNEZ;
  wire        _GEN_0 = LW | SW;
  wire        _GEN_1 = SRLI | SRAI;
  wire [31:0] decoded_instr_imm =
    LWSP
      ? {24'h0,
         io_compressed_instr_bits_instruction[3:2],
         io_compressed_instr_bits_instruction[12],
         io_compressed_instr_bits_instruction[6:4],
         2'h0}
      : SWSP
          ? {24'h0,
             io_compressed_instr_bits_instruction[8:7],
             io_compressed_instr_bits_instruction[12:9],
             2'h0}
          : _GEN_0
              ? {25'h0,
                 io_compressed_instr_bits_instruction[5],
                 io_compressed_instr_bits_instruction[12:10],
                 io_compressed_instr_bits_instruction[6],
                 2'h0}
              : J | JAL
                  ? {20'h0,
                     io_compressed_instr_bits_instruction[12],
                     io_compressed_instr_bits_instruction[8],
                     io_compressed_instr_bits_instruction[10:9],
                     io_compressed_instr_bits_instruction[6],
                     io_compressed_instr_bits_instruction[7],
                     io_compressed_instr_bits_instruction[2],
                     io_compressed_instr_bits_instruction[11],
                     io_compressed_instr_bits_instruction[5:4],
                     2'h0}
                  : BNEZ | BEQZ
                      ? {23'h0,
                         io_compressed_instr_bits_instruction[12],
                         io_compressed_instr_bits_instruction[6:5],
                         io_compressed_instr_bits_instruction[2],
                         io_compressed_instr_bits_instruction[11:10],
                         io_compressed_instr_bits_instruction[4:3],
                         1'h0}
                      : _GEN_1 | SLLI | ADDI | LI
                          ? {26'h0,
                             io_compressed_instr_bits_instruction[12],
                             io_compressed_instr_bits_instruction[6:2]}
                          : LUI
                              ? {14'h0,
                                 io_compressed_instr_bits_instruction[12],
                                 io_compressed_instr_bits_instruction[6:2],
                                 12'h0}
                              : ADDI16SP
                                  ? {22'h0,
                                     io_compressed_instr_bits_instruction[12],
                                     io_compressed_instr_bits_instruction[4:3],
                                     io_compressed_instr_bits_instruction[5],
                                     io_compressed_instr_bits_instruction[2],
                                     io_compressed_instr_bits_instruction[6],
                                     4'h0}
                                  : ADDI4SPN
                                      ? {22'h0,
                                         io_compressed_instr_bits_instruction[10:7],
                                         io_compressed_instr_bits_instruction[12:11],
                                         io_compressed_instr_bits_instruction[5],
                                         io_compressed_instr_bits_instruction[6],
                                         2'h0}
                                      : 32'h0;
  wire        _GEN_2 = LW | LWSP;
  wire        _GEN_3 = SW | SWSP;
  wire        _GEN_4 = JAL | J;
  wire        _GEN_5 = JALR | JR;
  wire        _GEN_6 = SUB | XOR | OR | AND | ADD;
  assign decoded_instr_opcode =
    _GEN_2
      ? 7'h3
      : _GEN_3
          ? 7'h23
          : _GEN_4
              ? 7'h6F
              : _GEN_5
                  ? 7'h67
                  : _CB_T
                      ? 7'h63
                      : LUI
                          ? 7'h37
                          : EBREAK
                              ? 7'h73
                              : _GEN_6
                                  ? 7'h33
                                  : ADDI4SPN | NOP | ADDI | LI | ADDI16SP | SRLI | SRAI
                                    | ANDI | SLLI | MV
                                      ? 7'h13
                                      : 7'h0;
  assign decoded_instr_funct3 =
    _GEN_2 | SW | SWSP
      ? 3'h2
      : BNEZ | SLLI ? 3'h1 : XOR ? 3'h4 : OR ? 3'h6 : AND ? 3'h7 : _GEN_1 ? 3'h5 : 3'h0;
  assign _GEN = SUB | SRAI;
  wire        _rd_rs1_T = CR | LWSP | LI | LUI | ADDI | ADDI16SP | SLLI;
  wire [4:0]  rd_rs1 =
    _rd_rs1_T
      ? io_compressed_instr_bits_instruction[11:7]
      : {2'h1, io_compressed_instr_bits_instruction[9:7]};
  wire        _rd_rs2_T = CR | SWSP;
  wire [4:0]  rd_rs2 =
    _rd_rs2_T
      ? io_compressed_instr_bits_instruction[6:2]
      : {2'h1, io_compressed_instr_bits_instruction[4:2]};
  wire        _GEN_7 = _rd_rs1_T | CA | _CB_T | SRLI | SRAI | ANDI;
  assign decoded_instr_rs1 = _GEN_7 | _GEN_0 ? rd_rs1 : 5'h0;
  wire        _GEN_8 = _rd_rs2_T | SW | CA;
  assign decoded_instr_rs2 = _GEN_8 ? rd_rs2 : 5'h0;
  assign decoded_instr_rd = _GEN_8 | ~(ADDI4SPN | LW) ? (_GEN_7 ? rd_rs1 : 5'h0) : rd_rs2;
  assign io_compressed_instr_ready = 1'h1;
  assign io_instruction_valid = 1'h1;
  assign io_instruction_bits_instruction =
    _GEN_2 | ADDI4SPN | NOP | ADDI | LI | ADDI16SP | SRLI | SRAI | ANDI | SLLI | MV
    | EBREAK
      ? {decoded_instr_imm[11:0],
         decoded_instr_rs1,
         decoded_instr_funct3,
         decoded_instr_rd,
         decoded_instr_opcode}
      : _GEN_2
          ? 32'h0
          : _GEN_3
              ? {decoded_instr_imm[11:5],
                 decoded_instr_rs2,
                 decoded_instr_rs1,
                 decoded_instr_funct3,
                 decoded_instr_imm[4:0],
                 decoded_instr_opcode}
              : _GEN_4
                  ? {decoded_instr_imm[20],
                     decoded_instr_imm[10:1],
                     decoded_instr_imm[11],
                     decoded_instr_imm[19:12],
                     decoded_instr_rd,
                     decoded_instr_opcode}
                  : _GEN_5
                      ? 32'h0
                      : _CB_T
                          ? {decoded_instr_imm[12],
                             decoded_instr_imm[10:5],
                             decoded_instr_rs2,
                             decoded_instr_rs1,
                             decoded_instr_funct3,
                             decoded_instr_imm[4:1],
                             decoded_instr_imm[11],
                             decoded_instr_opcode}
                          : LUI
                              ? {decoded_instr_imm[31:12],
                                 decoded_instr_rd,
                                 decoded_instr_opcode}
                              : EBREAK | ~_GEN_6
                                  ? 32'h0
                                  : {1'h0,
                                     _GEN,
                                     5'h0,
                                     decoded_instr_rs2,
                                     decoded_instr_rs1,
                                     decoded_instr_funct3,
                                     decoded_instr_rd,
                                     decoded_instr_opcode};
  assign io_instruction_bits_packet_index = io_compressed_instr_bits_packet_index;
  assign io_instruction_bits_ROB_index = io_compressed_instr_bits_ROB_index;
endmodule

