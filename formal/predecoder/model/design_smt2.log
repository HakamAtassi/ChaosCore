
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite -- YosysHQ Edition [202407090834]     |
 |  Copyright (C) 2012 - 2024 YosysHQ GmbH                                    |
 |  For support, please contact support@yosyshq.com                           |
 \----------------------------------------------------------------------------/
 Yosys 0.43 (git sha1 ead4718e5, clang++ 14.0.0-1ubuntu1.1 -fPIC -Os)

-- Executing script file `design_smt2.ys' --

1. Executing RTLIL frontend.
Input filename: design_prep.il

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Analyzing design hierarchy..
Top module:  \predecoder
Used module:     \Queue1_FTQ_entry
Used module:     \Queue1_fetch_packet

2.2. Analyzing design hierarchy..
Top module:  \predecoder
Used module:     \Queue1_FTQ_entry
Used module:     \Queue1_fetch_packet
Removed 0 unused modules.

3. Executing FORMALFF pass.

4. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

5. Printing statistics.

=== predecoder ===

   Number of wires:                330
   Number of wire bits:           2149
   Number of public wires:         161
   Number of public wire bits:    1454
   Number of ports:                 91
   Number of port bits:            887
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                231
     $add                            8
     $and                           79
     $anyinit                       24
     $assume                         1
     $bmux                           7
     $eq                            29
     $logic_not                      6
     $mux                           37
     $ne                             1
     $not                            5
     $or                            31
     $sub                            1
     Queue1_FTQ_entry                1
     Queue1_fetch_packet             1

=== Queue1_fetch_packet ===

   Number of wires:                 54
   Number of wire bits:            834
   Number of public wires:          43
   Number of public wire bits:     620
   Number of ports:                 39
   Number of port bits:            413
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 33
     $and                            5
     $anyinit                        2
     $assume                         1
     $mux                           20
     $not                            3
     $or                             1
     $xor                            1

=== Queue1_FTQ_entry ===

   Number of wires:                 42
   Number of wire bits:            554
   Number of public wires:          31
   Number of public wire bits:     410
   Number of ports:                 27
   Number of port bits:            273
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 27
     $and                            5
     $anyinit                        2
     $assume                         1
     $mux                           14
     $not                            3
     $or                             1
     $xor                            1

=== design hierarchy ===

   predecoder                        1
     Queue1_FTQ_entry                1
     Queue1_fetch_packet             1

   Number of wires:                426
   Number of wire bits:           3537
   Number of public wires:         235
   Number of public wire bits:    2484
   Number of ports:                157
   Number of port bits:           1573
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                289
     $add                            8
     $and                           89
     $anyinit                       28
     $assume                         3
     $bmux                           7
     $eq                            29
     $logic_not                      6
     $mux                           71
     $ne                             1
     $not                           11
     $or                            33
     $sub                            1
     $xor                            2

6. Executing SMT2 backend.

6.1. Executing BMUXMAP pass.

6.2. Executing DEMUXMAP pass.
Creating SMT-LIBv2 representation of module Queue1_FTQ_entry.
Creating SMT-LIBv2 representation of module Queue1_fetch_packet.
Creating SMT-LIBv2 representation of module predecoder.

End of script. Logfile hash: ab08ab5422, CPU: user 0.01s system 0.01s, MEM: 26.50 MB peak
Yosys 0.43 (git sha1 ead4718e5, clang++ 14.0.0-1ubuntu1.1 -fPIC -Os)
Time spent: 71% 2x write_smt2 (0 sec), 24% 2x read_ilang (0 sec), ...
