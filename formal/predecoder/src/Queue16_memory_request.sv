// Generated by CIRCT firtool-1.76.0

// Include register initializers in init blocks unless synthesis is set
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS


// Include rmemory initializers in init blocks unless synthesis is set
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for register randomization.

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_
module Queue16_memory_request(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input         clock,	// src/main/scala/chisel3/util/Decoupled.scala:243:7
                reset,	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  output        io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [31:0] io_enq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_wr_data,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_enq_bits_wr_en,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [31:0] io_deq_bits_addr,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_wr_data,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_bits_wr_en,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_flush	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  wire        do_deq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :264:27, :298:17, :300:14
  wire [64:0] _ram_ext_R0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:44
  reg  [3:0]  enq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  [3:0]  deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire        ptr_match = enq_ptr_value == deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire        empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire        full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire        io_deq_valid_0 = io_enq_valid | ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:261:25, :285:{16,19}, :297:{24,39}
  assign do_deq = ~empty & io_deq_ready & io_deq_valid_0;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :264:27, :285:16, :297:{24,39}, :298:17, :300:14
  wire        do_enq = ~(empty & io_deq_ready) & ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :262:24, :263:27, :286:19, :298:17, :301:{26,35}
  always @(posedge clock) begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    if (reset) begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      enq_ptr_value <= 4'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      deq_ptr_value <= 4'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      if (io_flush) begin	// src/main/scala/chisel3/util/Decoupled.scala:255:14
        enq_ptr_value <= 4'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
        deq_ptr_value <= 4'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      end
      else begin	// src/main/scala/chisel3/util/Decoupled.scala:255:14
        if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :263:27, :298:17, :301:{26,35}
          enq_ptr_value <= enq_ptr_value + 4'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
        if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :264:27, :298:17, :300:14
          deq_ptr_value <= deq_ptr_value + 4'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      end
      maybe_full <= ~io_flush & (do_enq == do_deq ? maybe_full : do_enq);	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :263:27, :264:27, :276:{15,27}, :277:16, :279:15, :282:16, :298:17, :300:14, :301:{26,35}
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        enq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][3:0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        deq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][7:4];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][8];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_16x65 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:44
    .R0_addr (do_deq ? ((&deq_ptr_value) ? 4'h0 : deq_ptr_value + 4'h1) : deq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:51:35, :264:27, :289:{27,42,84}, :290:33, :298:17, :300:14
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (enq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :263:27, :298:17, :301:{26,35}
    .W0_clk  (clock),
    .W0_data ({io_enq_bits_wr_en, io_enq_bits_wr_data, io_enq_bits_addr})	// src/main/scala/chisel3/util/Decoupled.scala:256:44
  );	// src/main/scala/chisel3/util/Decoupled.scala:256:44
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = io_deq_valid_0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :285:16, :297:{24,39}
  assign io_deq_bits_addr = empty ? io_enq_bits_addr : _ram_ext_R0_data[31:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:44, :261:25, :291:17, :298:17, :299:19
  assign io_deq_bits_wr_data = empty ? io_enq_bits_wr_data : _ram_ext_R0_data[63:32];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:44, :261:25, :291:17, :298:17, :299:19
  assign io_deq_bits_wr_en = empty ? io_enq_bits_wr_en : _ram_ext_R0_data[64];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:44, :261:25, :291:17, :298:17, :299:19
endmodule

