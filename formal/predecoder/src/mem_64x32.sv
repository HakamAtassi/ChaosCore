// Generated by CIRCT firtool-1.76.0
// VCS coverage exclude_file
module mem_64x32(	// src/main/scala/Backend/RF.scala:118:24
  input  [5:0]  R0_addr,
  input         R0_en,
                R0_clk,
  output [31:0] R0_data,
  input  [5:0]  R1_addr,
  input         R1_en,
                R1_clk,
  output [31:0] R1_data,
  input  [5:0]  R2_addr,
  input         R2_en,
                R2_clk,
  output [31:0] R2_data,
  input  [5:0]  R3_addr,
  input         R3_en,
                R3_clk,
  output [31:0] R3_data,
  input  [5:0]  R4_addr,
  input         R4_en,
                R4_clk,
  output [31:0] R4_data,
  input  [5:0]  R5_addr,
  input         R5_en,
                R5_clk,
  output [31:0] R5_data,
  input  [5:0]  R6_addr,
  input         R6_en,
                R6_clk,
  output [31:0] R6_data,
  input  [5:0]  R7_addr,
  input         R7_en,
                R7_clk,
  output [31:0] R7_data,
  input  [5:0]  W0_addr,
  input         W0_en,
                W0_clk,
  input  [31:0] W0_data,
  input  [5:0]  W1_addr,
  input         W1_en,
                W1_clk,
  input  [31:0] W1_data,
  input  [5:0]  W2_addr,
  input         W2_en,
                W2_clk,
  input  [31:0] W2_data
);

  reg [31:0] Memory[0:63];	// src/main/scala/Backend/RF.scala:118:24
  reg        _R0_en_d0;	// src/main/scala/Backend/RF.scala:118:24
  reg [5:0]  _R0_addr_d0;	// src/main/scala/Backend/RF.scala:118:24
  always @(posedge R0_clk) begin	// src/main/scala/Backend/RF.scala:118:24
    _R0_en_d0 <= R0_en;	// src/main/scala/Backend/RF.scala:118:24
    _R0_addr_d0 <= R0_addr;	// src/main/scala/Backend/RF.scala:118:24
  end // always @(posedge)
  reg        _R1_en_d0;	// src/main/scala/Backend/RF.scala:118:24
  reg [5:0]  _R1_addr_d0;	// src/main/scala/Backend/RF.scala:118:24
  always @(posedge R1_clk) begin	// src/main/scala/Backend/RF.scala:118:24
    _R1_en_d0 <= R1_en;	// src/main/scala/Backend/RF.scala:118:24
    _R1_addr_d0 <= R1_addr;	// src/main/scala/Backend/RF.scala:118:24
  end // always @(posedge)
  reg        _R2_en_d0;	// src/main/scala/Backend/RF.scala:118:24
  reg [5:0]  _R2_addr_d0;	// src/main/scala/Backend/RF.scala:118:24
  always @(posedge R2_clk) begin	// src/main/scala/Backend/RF.scala:118:24
    _R2_en_d0 <= R2_en;	// src/main/scala/Backend/RF.scala:118:24
    _R2_addr_d0 <= R2_addr;	// src/main/scala/Backend/RF.scala:118:24
  end // always @(posedge)
  reg        _R3_en_d0;	// src/main/scala/Backend/RF.scala:118:24
  reg [5:0]  _R3_addr_d0;	// src/main/scala/Backend/RF.scala:118:24
  always @(posedge R3_clk) begin	// src/main/scala/Backend/RF.scala:118:24
    _R3_en_d0 <= R3_en;	// src/main/scala/Backend/RF.scala:118:24
    _R3_addr_d0 <= R3_addr;	// src/main/scala/Backend/RF.scala:118:24
  end // always @(posedge)
  reg        _R4_en_d0;	// src/main/scala/Backend/RF.scala:118:24
  reg [5:0]  _R4_addr_d0;	// src/main/scala/Backend/RF.scala:118:24
  always @(posedge R4_clk) begin	// src/main/scala/Backend/RF.scala:118:24
    _R4_en_d0 <= R4_en;	// src/main/scala/Backend/RF.scala:118:24
    _R4_addr_d0 <= R4_addr;	// src/main/scala/Backend/RF.scala:118:24
  end // always @(posedge)
  reg        _R5_en_d0;	// src/main/scala/Backend/RF.scala:118:24
  reg [5:0]  _R5_addr_d0;	// src/main/scala/Backend/RF.scala:118:24
  always @(posedge R5_clk) begin	// src/main/scala/Backend/RF.scala:118:24
    _R5_en_d0 <= R5_en;	// src/main/scala/Backend/RF.scala:118:24
    _R5_addr_d0 <= R5_addr;	// src/main/scala/Backend/RF.scala:118:24
  end // always @(posedge)
  reg        _R6_en_d0;	// src/main/scala/Backend/RF.scala:118:24
  reg [5:0]  _R6_addr_d0;	// src/main/scala/Backend/RF.scala:118:24
  always @(posedge R6_clk) begin	// src/main/scala/Backend/RF.scala:118:24
    _R6_en_d0 <= R6_en;	// src/main/scala/Backend/RF.scala:118:24
    _R6_addr_d0 <= R6_addr;	// src/main/scala/Backend/RF.scala:118:24
  end // always @(posedge)
  reg        _R7_en_d0;	// src/main/scala/Backend/RF.scala:118:24
  reg [5:0]  _R7_addr_d0;	// src/main/scala/Backend/RF.scala:118:24
  always @(posedge R7_clk) begin	// src/main/scala/Backend/RF.scala:118:24
    _R7_en_d0 <= R7_en;	// src/main/scala/Backend/RF.scala:118:24
    _R7_addr_d0 <= R7_addr;	// src/main/scala/Backend/RF.scala:118:24
  end // always @(posedge)
  always @(posedge W0_clk) begin	// src/main/scala/Backend/RF.scala:118:24
    if (W0_en & 1'h1)	// src/main/scala/Backend/RF.scala:118:24
      Memory[W0_addr] <= W0_data;	// src/main/scala/Backend/RF.scala:118:24
    if (W1_en & 1'h1)	// src/main/scala/Backend/RF.scala:118:24
      Memory[W1_addr] <= W1_data;	// src/main/scala/Backend/RF.scala:118:24
    if (W2_en & 1'h1)	// src/main/scala/Backend/RF.scala:118:24
      Memory[W2_addr] <= W2_data;	// src/main/scala/Backend/RF.scala:118:24
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/Backend/RF.scala:118:24
    `ifdef RANDOMIZE_REG_INIT	// src/main/scala/Backend/RF.scala:118:24
      reg [31:0] _RANDOM;	// src/main/scala/Backend/RF.scala:118:24
      reg [31:0] _RANDOM_0;	// src/main/scala/Backend/RF.scala:118:24
    `endif // RANDOMIZE_REG_INIT
    reg [31:0] _RANDOM_MEM;	// src/main/scala/Backend/RF.scala:118:24
    initial begin	// src/main/scala/Backend/RF.scala:118:24
      `INIT_RANDOM_PROLOG_	// src/main/scala/Backend/RF.scala:118:24
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/Backend/RF.scala:118:24
        for (logic [6:0] i = 7'h0; i < 7'h40; i += 7'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/Backend/RF.scala:118:24
          Memory[i[5:0]] = _RANDOM_MEM;	// src/main/scala/Backend/RF.scala:118:24
        end
      `endif // RANDOMIZE_MEM_INIT
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/Backend/RF.scala:118:24
        _RANDOM = {`RANDOM};	// src/main/scala/Backend/RF.scala:118:24
        _RANDOM_0 = {`RANDOM};	// src/main/scala/Backend/RF.scala:118:24
        _R0_en_d0 = _RANDOM[0];	// src/main/scala/Backend/RF.scala:118:24
        _R0_addr_d0 = _RANDOM[6:1];	// src/main/scala/Backend/RF.scala:118:24
        _R1_en_d0 = _RANDOM[7];	// src/main/scala/Backend/RF.scala:118:24
        _R1_addr_d0 = _RANDOM[13:8];	// src/main/scala/Backend/RF.scala:118:24
        _R2_en_d0 = _RANDOM[14];	// src/main/scala/Backend/RF.scala:118:24
        _R2_addr_d0 = _RANDOM[20:15];	// src/main/scala/Backend/RF.scala:118:24
        _R3_en_d0 = _RANDOM[21];	// src/main/scala/Backend/RF.scala:118:24
        _R3_addr_d0 = _RANDOM[27:22];	// src/main/scala/Backend/RF.scala:118:24
        _R4_en_d0 = _RANDOM[28];	// src/main/scala/Backend/RF.scala:118:24
        _R4_addr_d0 = {_RANDOM[31:29], _RANDOM_0[2:0]};	// src/main/scala/Backend/RF.scala:118:24
        _R5_en_d0 = _RANDOM_0[3];	// src/main/scala/Backend/RF.scala:118:24
        _R5_addr_d0 = _RANDOM_0[9:4];	// src/main/scala/Backend/RF.scala:118:24
        _R6_en_d0 = _RANDOM_0[10];	// src/main/scala/Backend/RF.scala:118:24
        _R6_addr_d0 = _RANDOM_0[16:11];	// src/main/scala/Backend/RF.scala:118:24
        _R7_en_d0 = _RANDOM_0[17];	// src/main/scala/Backend/RF.scala:118:24
        _R7_addr_d0 = _RANDOM_0[23:18];	// src/main/scala/Backend/RF.scala:118:24
      `endif // RANDOMIZE_REG_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = _R0_en_d0 ? Memory[_R0_addr_d0] : 32'bx;	// src/main/scala/Backend/RF.scala:118:24
  assign R1_data = _R1_en_d0 ? Memory[_R1_addr_d0] : 32'bx;	// src/main/scala/Backend/RF.scala:118:24
  assign R2_data = _R2_en_d0 ? Memory[_R2_addr_d0] : 32'bx;	// src/main/scala/Backend/RF.scala:118:24
  assign R3_data = _R3_en_d0 ? Memory[_R3_addr_d0] : 32'bx;	// src/main/scala/Backend/RF.scala:118:24
  assign R4_data = _R4_en_d0 ? Memory[_R4_addr_d0] : 32'bx;	// src/main/scala/Backend/RF.scala:118:24
  assign R5_data = _R5_en_d0 ? Memory[_R5_addr_d0] : 32'bx;	// src/main/scala/Backend/RF.scala:118:24
  assign R6_data = _R6_en_d0 ? Memory[_R6_addr_d0] : 32'bx;	// src/main/scala/Backend/RF.scala:118:24
  assign R7_data = _R7_en_d0 ? Memory[_R7_addr_d0] : 32'bx;	// src/main/scala/Backend/RF.scala:118:24
endmodule

