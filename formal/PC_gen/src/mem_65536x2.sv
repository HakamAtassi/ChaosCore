// Generated by CIRCT firtool-1.76.0
// VCS coverage exclude_file
module mem_65536x2(	// src/main/scala/Frontend/BP/gshare.scala:59:24
  input  [15:0] R0_addr,
  input         R0_en,
                R0_clk,
  output [1:0]  R0_data,
  input  [15:0] R1_addr,
  input         R1_en,
                R1_clk,
  output [1:0]  R1_data,
  input  [15:0] W0_addr,
  input         W0_en,
                W0_clk,
  input  [1:0]  W0_data
);

  reg [1:0]  Memory[0:65535];	// src/main/scala/Frontend/BP/gshare.scala:59:24
  reg        _R0_en_d0;	// src/main/scala/Frontend/BP/gshare.scala:59:24
  reg [15:0] _R0_addr_d0;	// src/main/scala/Frontend/BP/gshare.scala:59:24
  always @(posedge R0_clk) begin	// src/main/scala/Frontend/BP/gshare.scala:59:24
    _R0_en_d0 <= R0_en;	// src/main/scala/Frontend/BP/gshare.scala:59:24
    _R0_addr_d0 <= R0_addr;	// src/main/scala/Frontend/BP/gshare.scala:59:24
  end // always @(posedge)
  reg        _R1_en_d0;	// src/main/scala/Frontend/BP/gshare.scala:59:24
  reg [15:0] _R1_addr_d0;	// src/main/scala/Frontend/BP/gshare.scala:59:24
  always @(posedge R1_clk) begin	// src/main/scala/Frontend/BP/gshare.scala:59:24
    _R1_en_d0 <= R1_en;	// src/main/scala/Frontend/BP/gshare.scala:59:24
    _R1_addr_d0 <= R1_addr;	// src/main/scala/Frontend/BP/gshare.scala:59:24
  end // always @(posedge)
  always @(posedge W0_clk) begin	// src/main/scala/Frontend/BP/gshare.scala:59:24
    if (W0_en & 1'h1)	// src/main/scala/Frontend/BP/gshare.scala:59:24
      Memory[W0_addr] <= W0_data;	// src/main/scala/Frontend/BP/gshare.scala:59:24
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/Frontend/BP/gshare.scala:59:24
    `ifdef RANDOMIZE_REG_INIT	// src/main/scala/Frontend/BP/gshare.scala:59:24
      reg [31:0] _RANDOM;	// src/main/scala/Frontend/BP/gshare.scala:59:24
      reg [31:0] _RANDOM_0;	// src/main/scala/Frontend/BP/gshare.scala:59:24
    `endif // RANDOMIZE_REG_INIT
    reg [31:0] _RANDOM_MEM;	// src/main/scala/Frontend/BP/gshare.scala:59:24
    initial begin	// src/main/scala/Frontend/BP/gshare.scala:59:24
      `INIT_RANDOM_PROLOG_	// src/main/scala/Frontend/BP/gshare.scala:59:24
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/Frontend/BP/gshare.scala:59:24
        for (logic [16:0] i = 17'h0; i < 17'h10000; i += 17'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/Frontend/BP/gshare.scala:59:24
          Memory[i[15:0]] = _RANDOM_MEM[1:0];	// src/main/scala/Frontend/BP/gshare.scala:59:24
        end
      `endif // RANDOMIZE_MEM_INIT
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/Frontend/BP/gshare.scala:59:24
        _RANDOM = {`RANDOM};	// src/main/scala/Frontend/BP/gshare.scala:59:24
        _RANDOM_0 = {`RANDOM};	// src/main/scala/Frontend/BP/gshare.scala:59:24
        _R0_en_d0 = _RANDOM[0];	// src/main/scala/Frontend/BP/gshare.scala:59:24
        _R0_addr_d0 = _RANDOM[16:1];	// src/main/scala/Frontend/BP/gshare.scala:59:24
        _R1_en_d0 = _RANDOM[17];	// src/main/scala/Frontend/BP/gshare.scala:59:24
        _R1_addr_d0 = {_RANDOM[31:18], _RANDOM_0[1:0]};	// src/main/scala/Frontend/BP/gshare.scala:59:24
      `endif // RANDOMIZE_REG_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = _R0_en_d0 ? Memory[_R0_addr_d0] : 2'bx;	// src/main/scala/Frontend/BP/gshare.scala:59:24
  assign R1_data = _R1_en_d0 ? Memory[_R1_addr_d0] : 2'bx;	// src/main/scala/Frontend/BP/gshare.scala:59:24
endmodule

