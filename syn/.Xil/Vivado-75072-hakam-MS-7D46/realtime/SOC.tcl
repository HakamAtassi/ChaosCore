# 
# Synthesis run script generated by Vivado
# 

namespace eval rt {
    variable rc
}
set rt::rc [catch {
  uplevel #0 {
    set ::env(BUILTIN_SYNTH) true
    source $::env(HRT_TCL_PATH)/rtSynthPrep.tcl
    rt::HARTNDb_startJobStats
    set rt::cmdEcho 0
    rt::set_parameter writeXmsg true
    rt::set_parameter enableParallelHelperSpawn true
    set ::env(RT_TMP) "./.Xil/Vivado-75072-hakam-MS-7D46/realtime/tmp"
    if { [ info exists ::env(RT_TMP) ] } {
      file mkdir $::env(RT_TMP)
    }

    rt::delete_design

    rt::set_parameter datapathDensePacking false
    set rt::partid xczu3eg-sbva484-1-i
     file delete -force synth_hints.os

    set rt::multiChipSynthesisFlow false
    source $::env(SYNTH_COMMON)/common.tcl
    set rt::defaultWorkLibName xil_defaultlib
    rt::set_parameter defaultVhdlWorkLib xil_defaultlib

    rt::set_parameter loadVhdl2008Libs false
    rt::set_parameter loadVhdl2019Libs false
    rt::set_parameter deferParseUntilElab true
    rt::set_parameter sortHdlCommandLine true
    # Skipping read_* RTL commands because this is post-elab optimize flow
    set rt::useElabCache true
    if {$rt::useElabCache == false} {
      rt::read_verilog -sv {
      /home/hakam/Repos/ChaosCore/hw/verilog/priority_encoder.v
      /home/hakam/Repos/ChaosCore/hw/verilog/arbiter.v
      /home/hakam/Repos/ChaosCore/hw/verilog/axi_interconnect.v
      /home/hakam/Repos/ChaosCore/hw/verilog/mem_65536x2.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/PHT_memory.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/gshare.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/mem_4096x56.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/hash_BTB_mem.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/hash_BTB.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/mem_128x39.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/SDPReadWriteSmem.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/RAS.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/Queue1_prediction.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/BP.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/ram_2x287.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/Queue2_fetch_packet.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/predecoder.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/PC_gen.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/ram_16x287.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/Queue16_fetch_packet.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/ram_16x65.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/Queue16_frontend_memory_request.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/ram_16x53.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/Queue16_prediction.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/instruction_fetch.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/decoder.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/ram_2x743.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/Queue2_decoded_fetch_packet.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/fetch_packet_decoder.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/ram_16x743.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/Queue16_decoded_fetch_packet.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/free_list.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/WAW_handler.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/RAT.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/ram_2x743_0.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/Queue2_decoded_fetch_packet_1.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/rename.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/frontend.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/RS.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/RS_1.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/MOB.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/mem_64x32.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/sim_nReadmWrite.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/ALU.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/branch_unit.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/FU.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/FU_1.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/AGU.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/backend.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/mem_64x70.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/ROB_shared_mem.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/mem_busy_64x1.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/ROB_WB_mem.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/mem_64x17.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/ROB_entry_mem.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/fetch_64x53.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/ROB.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/ChaosCore.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/Queue1_final_AXI_response.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/mem_64x2.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/SDPReadWriteSmem_1.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/mem_64x278.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/icache_ReadWriteSmem.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/instruction_validator.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/Queue1_fetch_packet.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/L1_instruction_cache.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/ram_8x352.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/Queue8_AXI_request_Q_entry.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/ram_2x352.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/Queue2_AXI_request_Q_entry.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/ram_8x68.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/Queue8_backend_memory_response.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/ram_3x68.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/Queue3_backend_memory_response.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/ram_256x8.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/ReadWriteSmem.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/ram_64x21.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/ReadWriteSmem_32.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/Arbiter2_AXI_request_Q_entry.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/Arbiter2_backend_memory_response.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/L1_data_cache.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/ChaosCore_tile.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/AXI_debug_printer.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/extern_modules.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/axi_interconnect_2x2.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/SOC.sv
      /home/hakam/Repos/ChaosCore/hw/verilog/axi_interconnect_wrap_2x2.v
    }
      rt::filesetChecksum
    }
    rt::set_parameter usePostFindUniquification true
    set rt::SDCFileList ./.Xil/Vivado-75072-hakam-MS-7D46/realtime/SOC_synth.xdc
    rt::sdcChecksum
    set rt::top SOC
    rt::set_parameter enableIncremental true
    rt::set_parameter markDebugPreservationLevel "enable"
    set rt::ioInsertion false
    set rt::reportTiming false
    rt::set_parameter elaborateOnly false
    rt::set_parameter elaborateRtl false
    rt::set_parameter eliminateRedundantBitOperator true
    rt::set_parameter dataflowBusHighlighting false
    rt::set_parameter generateDataflowBusNetlist false
    rt::set_parameter dataFlowViewInElab false
    rt::set_parameter busViewFixBrokenConnections false
    rt::set_parameter elaborateRtlOnlyFlow false
    rt::set_parameter writeBlackboxInterface true
    rt::set_parameter ramStyle auto
    rt::set_parameter merge_flipflops true
# MODE: out_of_context
    rt::set_parameter webTalkPath {}
    rt::set_parameter synthDebugLog false
    rt::set_parameter printModuleName false
    rt::set_parameter enableSplitFlowPath "./.Xil/Vivado-75072-hakam-MS-7D46/"
    set ok_to_delete_rt_tmp true 
    if { [rt::get_parameter parallelDebug] } { 
       set ok_to_delete_rt_tmp false 
    } 
    if {$rt::useElabCache == false} {
        set oldMIITMVal [rt::get_parameter maxInputIncreaseToMerge]; rt::set_parameter maxInputIncreaseToMerge 1000
        set oldCDPCRL [rt::get_parameter createDfgPartConstrRecurLimit]; rt::set_parameter createDfgPartConstrRecurLimit 1
        $rt::db readXRFFile
      rt::run_synthesis -module $rt::top
        rt::set_parameter maxInputIncreaseToMerge $oldMIITMVal
        rt::set_parameter createDfgPartConstrRecurLimit $oldCDPCRL
    }

    set rt::flowresult [ source $::env(SYNTH_COMMON)/flow.tcl ]
    rt::HARTNDb_stopJobStats
    rt::HARTNDb_reportJobStats "Synthesis Optimization Runtime"
    rt::HARTNDb_stopSystemStats
    if { $rt::flowresult == 1 } { return -code error }


  set hsKey [rt::get_parameter helper_shm_key] 
  if { $hsKey != "" && [info exists ::env(BUILTIN_SYNTH)] && [rt::get_parameter enableParallelHelperSpawn] } { 
     $rt::db killSynthHelper $hsKey
  } 
  rt::set_parameter helper_shm_key "" 
    if { [ info exists ::env(RT_TMP) ] } {
      if { [info exists ok_to_delete_rt_tmp] && $ok_to_delete_rt_tmp } { 
        file delete -force $::env(RT_TMP)
      }
    }

    source $::env(HRT_TCL_PATH)/rtSynthCleanup.tcl
  } ; #end uplevel
} rt::result]

if { $rt::rc } {
  $rt::db resetHdlParse
  set hsKey [rt::get_parameter helper_shm_key] 
  if { $hsKey != "" && [info exists ::env(BUILTIN_SYNTH)] && [rt::get_parameter enableParallelHelperSpawn] } { 
     $rt::db killSynthHelper $hsKey
  } 
  source $::env(HRT_TCL_PATH)/rtSynthCleanup.tcl
  return -code "error" $rt::result
}
